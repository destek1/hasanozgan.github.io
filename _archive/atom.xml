<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Internet Stratejileri, Yazılım Geliştirme ve Mimarileri Üzerine</title>
 <link href="http://hasanozgan.com/atom.xml" rel="self"/>
 <link href="http://hasanozgan.com"/>
 <updated>2013-11-04T14:15:07+02:00</updated>
 <id>http://hasanozgan.com</id>
 <author>
   <name>Hasan Ozgan</name>
   <email>hasanozgan@gmail.com</email>
 </author>

 
 <entry>
   <title>Fonksiyonel Programlama</title>
   <link href="http://hasanozgan.com/blog/2013/03/30/fonksiyonel-programlama"/>
   <updated>2013-03-30T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2013/03/30/fonksiyonel-programlama</id>
   <content type="html">&lt;p&gt;Fonksiyonel Programlama, günümüz web dünyasında her programcının bilmesi ve uygulaması gereken bir programlama paradigmasıdır. Nedenini bu yazının ilerleyen satırlarında bulacaksınız. Bu konu hakkında araştırma yaparken Türkçe kaynağın çok az ve yetersiz olduğunu gördüm. Bende bu konuyu dilim döndüğünce blogumda paylaşmaya karar verdim. Yeni öğrendiğim bir konu olduğu için, hatalı ve yanlış anlaşılmaya müsait olan noktalar olabilir. Eğer fonksiyonel programlamaya yıllarınızı verdiyseniz bu yazıya katkıda bulunabilirsiniz. Eğer benim gibi bu konuda yeniyseniz (devamının gelmesini umduğum) bu giriş yazısı umarım sizin için iyi bir başlangıç olur.&lt;/p&gt;

&lt;p&gt;Fazla vakit kaybetmeden gelin fonksiyonel programlama paradigmasını daha yakından inceleyelim.&lt;/p&gt;
&lt;div class='ic'&gt;
	&lt;img src='/files/2013/03/functional_programming.png' /&gt;
&lt;/div&gt;
&lt;h2 id='nedir'&gt;Nedir?&lt;/h2&gt;

&lt;p&gt;Programlama dilleri, imperatif (Java, C, C++ vb.) ve dekleratif (Lisp, Haskel vb.) diller olmak üzere ikiye ayrılır. Fonksiyonel programlamada bir deklaratif bir dildir. Bu dil, matematikteki fonksiyonlara ait tüm özellikleri taşır. Fonksiyonların aldıkları parametreler ve geri dönüş değerleri sabittir ve değişiklik göstermez. Yani, yan-etkiler (&lt;strong&gt;side-effect&lt;/strong&gt;) bulunmaz.&lt;/p&gt;

&lt;p&gt;Yıllarca nesne yönelimli programlama dilleriyde çalışmış birinin, hemen fonksiyonel paradigmaya ait konuları anlaması çok kolay olmuyor maalesef. Nesne yönelimli bir programcının öncellikle değişkenler ve döngüler olmadan nasıl kod yazacağını düşünmesi gerekiyor. Bize hep herşeyi nesneler olarak küçük görevlere ayırmamız sonra bu görevleri doğru bir şekilde sınıflamamız öğretildi. Fonksiyonel programlamada, herşey fonksiyonlarla yapılır. Merak etmeyin fonksiyonel programlamanın ne olduğunu &lt;em&gt;&amp;#8220;Nasıl&amp;#8221;&lt;/em&gt; başlığı altında ve örnekler yaptıkça daha iyi anlayacağız.&lt;/p&gt;

&lt;p&gt;Fonksiyonel programlamada değişkensiz ve döngüsüz bir hayat &lt;em&gt;nasıl olur&lt;/em&gt; sorusuna güzel bir örnek olarak; hepimizin az-çok bildiğini düşündüğüm excel gibi elektronik tablo (spreadsheets) türevi yazılımları verebiliriz. Elektronik tablo yazılımlarında her hücre bir değer alır ve geri döner. İç içe fonksiyonlar çağrılabilir. Hücre grubu liste olarak bir başka hücreye parametre olarak verilebilir. Birbirinden habersiz olarak sadece kendi etki alanlarından beklenen işi yaparlar. Bu konuda stackoverflow&amp;#8217;da okuduğum &lt;a href='http://stackoverflow.com/a/1956514/204928'&gt;makalelere&lt;/a&gt; göz atabilirsiniz.&lt;/p&gt;

&lt;p&gt;Bir başka örnekte, unix terminallerde, bir komut çıktısını başka bir komut setine aktarmak için kullanılan pipe (|) güzel bir fonksiyonel çağrı örneği olabilir. Aşağıdaki örneği inceleyebilirsiniz.&lt;/p&gt;
&lt;script src='https://gist.github.com/5269426.js?file=declerative-vs-imperative.sh'&gt;/* Github Gist */&lt;/script&gt;
&lt;p&gt;Fonksiyonel programlama deyince; web geliştiricisi olarak, hepimiz aslında fonksiyonel programlamanın bazı özelliklerini farkında olarak yada olmayarak kullanıyoruz. Eğer fonksiyonel programlama hakkında biraz araştırma yaptıysanız, &amp;#8220;javascript fonksiyonel bir dildir&amp;#8221; gibi birşeyler duymuş olabilirsiniz. &lt;strong&gt;first-class&lt;/strong&gt; fonksiyonları ve &lt;strong&gt;lambda&lt;/strong&gt;ları desteklemesi göz önünde bulundurulursa fonksiyonel bir dil olarak düşünülebilir. Fakat fonksiyonel programlama sadece bu konulardan ibaret değildir. Bu yüzden literatülde javascript bir fonksiyonel programla dili olarak kabul edilmez. &lt;a href='http://stackoverflow.com/a/3962690/204928'&gt;stackoverflow&amp;#8217;daki şu tartışmayı&lt;/a&gt; inceleyebilirsiniz.&lt;/p&gt;

&lt;p&gt;Şimdi gelin neden fonksiyonel programlama gerekli onu biraz irdeleyelim.&lt;/p&gt;

&lt;h2 id='neden'&gt;Neden?&lt;/h2&gt;

&lt;p&gt;Günümüz dünyasında web eş-zamanlı, dinamik ve ölçeklenebilir bir hale geldi. Örneğin, gönderdiğimiz bir tweet anlık olarak takipçiler tarafından görüntülenir ve arama sonuçlarına yansıtılır. Yüzlerce insan aynı anda bir web sitesini, bir fotoğrafı veya bir blog yazısını facebookta beğenebiliyor yada paylaşabiliyor. Altında ciddi bir mühendislik olan bu siteler nasıl hızlı ve anlık olarak çalışabiliyorlar hiç düşündünüz mü? Cevabınız işlemcilerin veya donanımların güçlenmesi, moore yasası kanunun geçerliliğini koruması vb gibi cevaplar aklınıza geliyorsa maalesef yanılıyorsunuz. Donanımların güçlenmesi tek başına asla yeterli olmamış ve olmayacaktır.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Moore Yasası&lt;/strong&gt; Her 18 ayda bir tümleşik devre üzerine yerleştirilebilecek bileşen sayısının iki katına çıkacacağını, bunun bilgisayarların işlem kapasitelerinde büyük artışlar yaratacağını, üretim maliyetlerinin ise aynı kalacağını, hatta düşme eğilimi göstereceğini öngören deneysel gözlem.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Donanım mühendisleri &lt;em&gt;Moore Yasası&lt;/em&gt; doğrultusunda, fiziksel sınırları zorlayarak sona geldiklerinde, paralel çekirdek mimarileri tasarlamaya ve geliştirmeye başladılar. Böylece hayatımıza 2, 4 vb&amp;#8230; şeklinde çok çekirdekli, paralel çalışabilen işlemciler girdi. Hız için yapılan bu geliştirme beraberinde paralel programlama ihtiyacınıda beraberinde getirdi.&lt;/p&gt;

&lt;p&gt;Paralel programlama yaparken dikkat edilmesi gereken en önemli konu deterministik olmasıdır. Yani aynı sonuçlar altında aynı durumu vermesidir. Web dünyasında bu nedenle durum tutmayan (&lt;strong&gt;stateless&lt;/strong&gt;) önemlidir. Concurrent programlamada thread konuları söz konusu olduğunda değişmeyen veriler (&lt;strong&gt;immutable&lt;/strong&gt;) kullanmak ve saf yani (&lt;strong&gt;pure-function&lt;/strong&gt;) yan-etkisi olmayan fonksiyonlar kullanmak gereklidir.&lt;/p&gt;

&lt;p&gt;İşte fonksiyonel programlama paradigması, deterministik bir programlama disiplinidir.&lt;/p&gt;

&lt;p&gt;Bu yüzden paralel programlama algoritmaları ve çözümlerinin yolu mutlaka fonksiyonel programlama pratiklerinden geçer.&lt;/p&gt;

&lt;p&gt;Paralel programlama ve donanım neden yeterli olmadığı bir Google örneği vermek istiyorum. Google&amp;#8217;ın ilk kurulduğu yıllarda tüm interneti depolamak için neden normal PCler kullandı hiç düşündünüz mü? Bunun yerine süper bilgisayarlar üzerinde koşan verilerin kudretli kahini Oracle&amp;#8217;ın veritabanı ile siteleri indekslemek yerine elektronik tablo gibi kolon tabanlı bir veri mimarisi kullandı? Maalesef çok büyük verileri yönetmek için ilişkisiel veritabanlarının yük dağılımı ile ilgili sorunları oluşmaya başlıyor. Ayrıca Oracle gibi veritabanları pahalı bilgisayarlar üzerinde koşarlar. Bozulma ihtimallerine karşı yedekleme maaliyeti çok yüksek. Google bir mühendislik şirketi olarak fonksiyonel programlamada olduğu gibi bir çok düğümden (node) oluşan mozaik bir mimari kurdu. Bu mimari sayesinde, ölçeklenebilirliğin gerektirdiği bölünebilme toleransı &lt;em&gt;(partition tolerance)&lt;/em&gt; sağlanmış oldu &lt;em&gt;(bknz. &lt;a href='http://en.wikipedia.org/wiki/CAP_theorem'&gt;CAP Theorem&lt;/a&gt;)&lt;/em&gt;. Ucuz maaliyetli bu bilgisayarlardan bir yada birkaçı bozulsa bile arama motoru çalışmaya ve sonuçlar getirmeye devam edecekti. Kısacası Google&amp;#8217;ın &lt;em&gt;BigTable&lt;/em&gt; adını verdiği sonra &lt;em&gt;Apache Foundation&lt;/em&gt; tarafından bir benzeri yapılan &lt;em&gt;Hadoop&lt;/em&gt; teknolojisi fonksiyonel programlama paradigmasını kuralları üzerine kurulmuştur. (bknz. &lt;a href='http://hadoop.apache.org/docs/r1.0.4/mapred_tutorial.html'&gt;Map-Reduce&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;İşte web dünyasında fonksiyonel programlama dillerine sıcak bakmasının sebebi budur. &lt;em&gt;Dağınık mimariler kurmak!&lt;/em&gt; Fonksiyonel programlama dilleri dağınık mimariler için bir kodlama disiplini sağlar. Paralel programlamada istenmeyen yan-etkisi (side-effect) bulunan fonksiyonlar olmasına izin verilmez. Eğer yan etki gerektiren bir durum varsa, Bu gibi durumlarda &lt;strong&gt;monad&lt;/strong&gt; diye adlandırılan bir teknik kullanılır.&lt;/p&gt;

&lt;p&gt;İşte bu sebeple bir web programcısı için fonksiyonel programlama önemlidir. Belki bu disiplini kazandırmak için; PHP, Java gibi eski web dilleri fonksiyonel paradigmayı destekler özellikleri kendilerine katmaya başladılar.&lt;/p&gt;

&lt;h2 id='nasl'&gt;Nasıl?&lt;/h2&gt;

&lt;p&gt;Aşağıda genel fonksiyonel programlama kavramlarına kısaca değinilmiş ve örnekler verilmiştir.&lt;/p&gt;

&lt;h3 id='pure_functions'&gt;Pure Functions&lt;/h3&gt;

&lt;p&gt;Saf fonksiyonlar, yan etki barındırmayan fonksiyonlara denir. Peki yan etki nedir?&lt;/p&gt;

&lt;p&gt;Yan-etki &lt;em&gt;(side-effect)&lt;/em&gt;, genel olarak programlamada bir fonksiyonun kendi kapsama (scope) alanı dışında birşeyleri değiştirmesi durumudur.&lt;/p&gt;

&lt;p&gt;Fonksiyonel programlamada &amp;#8220;değisken&amp;#8221; diye bir kavram olmadigindan ve her sey eninde sonunda bir fonksiyon oldugundan &amp;#8220;degistirebileceginiz&amp;#8221; degiskenler ve durumlar aslında yoktur. Ama yan etki illa, değişken olması gerekmez. Konsola çıktı yazmak, loglama yapmak, ekrana pencere çıkarmak, sistemdeki dosya, yazıcı, kamera gibi başka kaynaklara erişmek hepsi yan etkiye sebep olur.&lt;/p&gt;

&lt;p&gt;Bu yüzden derleyici yan etkiye yol açan fonksiyonları sıralı olarak çağırır. Paralel çalışmalarına izin vermez.&lt;/p&gt;
&lt;script src='https://gist.github.com/5269426.js?file=pure-function.scala'&gt;/* Github Gist */&lt;/script&gt;&lt;script src='https://gist.github.com/5269426.js?file=non-pure-function.scala'&gt;/* Github Gist */&lt;/script&gt;
&lt;h3 id='lists_and_tuples'&gt; Lists and Tuples&lt;/h3&gt;

&lt;p&gt;Fonksiyonel programlamada listeler çok önemlidir. Veri grupları (tuples) ise farklı veri tiplerini barındırabilir.&lt;/p&gt;
&lt;script src='https://gist.github.com/5269426.js?file=list-and-tuples.scala'&gt;/* Github Gist */&lt;/script&gt;
&lt;h3 id='recursive_functions'&gt;Recursive Functions&lt;/h3&gt;

&lt;p&gt;Döngü yerine kendini çağıran (&lt;strong&gt;recursive&lt;/strong&gt;) fonksiyonlar kullanılarak yapılır demiştik hatırlarsanız. Değişken diye birşey yoktur, değişkenlerde fonksiyonların kendisidir demiştik.&lt;/p&gt;
&lt;script src='https://gist.github.com/5269426.js?file=recursive.scala'&gt;/* Github Gist */&lt;/script&gt;
&lt;h3 id='highorder_functions'&gt;High-Order Functions&lt;/h3&gt;

&lt;p&gt;Herşey fonksiyonlar yapılır ve fonksiyonlarda değişken gibidir demişken, bir fonksiyon başka bir fonksiyonu parametre olarak alabilir. Buna &lt;strong&gt;high-order functions&lt;/strong&gt; denir.&lt;/p&gt;
&lt;script src='https://gist.github.com/5269426.js?file=high-order-function.scala'&gt;/* Github Gist */&lt;/script&gt;
&lt;h3 id='anonymous_functions_lambda_expressions'&gt;Anonymous Functions (Lambda Expressions)&lt;/h3&gt;

&lt;p&gt;Bir fonksiyon tanımı yapılmadan yani bir kod blogu olarak kullanılabilir. Buna &lt;strong&gt;lambda&lt;/strong&gt; yada &lt;strong&gt;anonymous functions&lt;/strong&gt; denir.&lt;/p&gt;
&lt;script src='https://gist.github.com/5269426.js?file=lambda.scala'&gt;/* Github Gist */&lt;/script&gt;
&lt;h3 id='currying'&gt;Currying&lt;/h3&gt;

&lt;p&gt;Fonksiyona ait parametrelerin azaltılması gerekebilir. Buna &lt;strong&gt;currying&lt;/strong&gt; denir.&lt;/p&gt;
&lt;script src='https://gist.github.com/5269426.js?file=currying.scala'&gt;/* Github Gist */&lt;/script&gt;
&lt;p&gt;Ayrıca domain specific bir dil tanımlarken de kullanabilirsiniz, Güzel bir sintatik görünüm sağlar. Aşağıda bununla ilgili bir örnek bulabilirsiniz.&lt;/p&gt;
&lt;script src='https://gist.github.com/5269426.js?file=recursive-currying.scala'&gt;/* Github Gist */&lt;/script&gt;
&lt;p&gt;Bir fonksiyon currying haline aşağıdaki şekilde getirilebilir.&lt;/p&gt;
&lt;script src='https://gist.github.com/5269426.js?file=curried.scala'&gt;/* Github Gist */&lt;/script&gt;
&lt;p&gt;Currying olan bir fonksiyon currying&amp;#8217;siz hale aşağıdaki şekilde getirilebilir.&lt;/p&gt;
&lt;script src='https://gist.github.com/5269426.js?file=uncurried.scala'&gt;/* Github Gist */&lt;/script&gt;
&lt;h3 id='firstclass_functions_closure'&gt;First-Class Functions (Closure)&lt;/h3&gt;

&lt;p&gt;Fonksiyonel programlamada tip sınıfı &lt;strong&gt;first-class citizen&lt;/strong&gt; diye bir konu vardır. Üç çeşittir. Öğelerinden biri, &lt;strong&gt;first-class function&lt;/strong&gt; konusunudur. Buna göre;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;bir fonksiyon başka bir fonksiyonu parametre olarak alabilir.&lt;/li&gt;

&lt;li&gt;bir fonksiyonu geri dönüş değeri olarak verebilir.&lt;/li&gt;

&lt;li&gt;bir fonksiyon bir değer olarak atanabilir.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;first-class function&lt;/strong&gt; aynı zamanda &lt;strong&gt;closure&lt;/strong&gt; olarakta bilinir.&lt;/p&gt;
&lt;script src='https://gist.github.com/5269426.js?file=closure.scala'&gt;/* Github Gist */&lt;/script&gt;
&lt;h3 id='monads'&gt;Monads&lt;/h3&gt;

&lt;p&gt;Monad&amp;#8217;lar fonksiyonlara kontrollü yan-etki desteği vermek için kullanılan bir tekniktir. Monad bir tür context olarak düşünüebilir. Monadlar 3 operatörle tanımlanır. Bunlar;&lt;/p&gt;

&lt;h4 id='bind'&gt;bind&lt;/h4&gt;

&lt;p&gt;Context içindeki bir değeri geçici olarak dışarı çıkarıp, ona bir değişiklik uygulayıp tekrar context&amp;#8217;e sokar.&lt;/p&gt;

&lt;h4 id='return'&gt;return&lt;/h4&gt;

&lt;p&gt;Herhangi bir değeri olabilecek en basit sekilde context&amp;#8217;e sokar.&lt;/p&gt;

&lt;h4 id='run'&gt;run&lt;/h4&gt;

&lt;p&gt;bir monad ayrica bir programi (~ computation) temsil ediyor olarak da dusunulebilir. temsil edilen programi calistirip sonucu hesaplamak icin kullanilir.&lt;/p&gt;
&lt;script src='https://gist.github.com/5269426.js?file=monads.scala'&gt;/* Github Gist */&lt;/script&gt;
&lt;p&gt;Philip Wadler&amp;#8217;ın &lt;a href='http://mirrors.csl.sri.com/www.brics.dk/%257Ehosc/local/LaSC-7-1-pp39-56.pdf'&gt;Monads and Composable Continuations&lt;/a&gt; hakkındaki makalesi önerilir.&lt;/p&gt;

&lt;h3 id='firstclass_controls_continuations'&gt;First-Class Controls (Continuations)&lt;/h3&gt;

&lt;p&gt;Bir nevi fonksiyonel programlamanın GOTO deyimidir.&lt;/p&gt;
&lt;script src='https://gist.github.com/5269426.js?file=continuations.scala'&gt;/* Github Gist */&lt;/script&gt;
&lt;p&gt;Monad ve Continuation konusunda araştırmalarım devam ediyor. Daha detaylı bir bilgilendirme, bir sonraki yazımda olacak.&lt;/p&gt;

&lt;p&gt;İtiraf edin, insan Scala ile tanıştıktan sonra Java&amp;#8217;yı Cobol gibi görmeye başlamıyor mu?&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Du Bakalım N'Olecak?</title>
   <link href="http://hasanozgan.com/blog/2013/03/22/du-bakalim-nolecak"/>
   <updated>2013-03-22T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2013/03/22/du-bakalim-nolecak</id>
   <content type="html">&lt;p&gt;Boğaziçi&amp;#8217;nin Karadeniz Boğazına yakın Anadolu yakasında, deniz kıyısı üstünde bir çayevi&amp;#8230; O çay evinin hemen bütün müşterileri, hep o semtin insanları olduklarından ve oraya sık sık geldiklerinden birbirlerini tanırlar. Çoğu da emeklidir.Emekli olunca konuşmaları doğal olarak geçim sıkıntısı,pahalılık,sürekli zamlar vb konular üstüne oluyor.&lt;/p&gt;

&lt;p&gt;O sabah da yine her zamanki gibi önce ev dertlerinden başlayıp ülkenin sorunlarından konuşmaya geçtiler. Hükümet enflasyonu yüzde otuzda tutacağına söz vermişti, oysa yüzde sekseni buldu. Yüzde seksen, ha? Peki ne olacak? Almanya&amp;#8217;ya, Fransa&amp;#8217;ya, İsveç&amp;#8217;e işçi gönderdik, yine yetmedi; ta Arabistanlara, Avustralyalara işçi gönderdik, yine yetmedi. Şimdi de Sovyetler Birliğine işçi gönderilecekmiş. Gitmeye istekli işçiler öyle yığılmışlar ki, sıra kapmak için birbirlerini ezmişler. Allah Allah!&amp;#8230; Yahu, komünist Rusya ya bile işçi gönderecekler ha? Paranın komünisti, faşisti, dini imanı olur mu arkadaş, para paradır, gelsin de nereden gelirse gelsin. Ben komünistin parasını alıp cami yaptırdıktan kuran kursu açtıktan sonra bir günahı yok ki&amp;#8230;Üstelik sevabı bile var. Peki bunun sonu nereye varacak birader? Allah sonumuzu hayır eylesin! Efendim, memleketin bütün gelirleri, aldığımız dış borçların yıllık faizini ödemeye bile yetmiyormuş. Deme yahu&amp;#8230; Amerika dan aldığımız borçlarla, salt eski borçların faizini bile zor ödüyormuşuz. Allah Allah&amp;#8230; Bu gidişin sonu nereye varır dostum? Ayemef diye uluslararası bir kuruluş var ya hani&amp;#8230; Evet, işte o uluslar arası para fonu mu ne&amp;#8230; Uluslararası demek, ne demek? Amerika demek&amp;#8230; İşte bizim kendi memleketimizde nereye ne yapacağımıza, neyi nasıl yapacağımıza, neyin nasıl yapılacağına, fabrikamıza, yolumuza, her şeyimize, her şeyimize o karar verirmiş&amp;#8230; Yok yahu&amp;#8230; Bak bunu bilmiyordum&amp;#8230; Peki böyle giderse ne olur&amp;#8230;&lt;/p&gt;

&lt;p&gt;Her gün, her akşam hep bu konular konuşulur&amp;#8230; Her konuşmada aynı sözlerle şaşarlar! Yok yahu!&amp;#8230; Allah Allah!&amp;#8230; Çayevindeki emekliler birbirlerine hep yanıtsız kalacak aynı soruyu sorarlar:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Peki,ne olacak böyle? Bekleyelim görelim. Bakalım,ne olacak?&lt;/li&gt;

&lt;li&gt;Bunun sonu nereye varır böyle? Hep merak ediyoruz. Dur bakalım, ne olacak?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O sabah yine hiç bıkıp usanmadan aynı konular konuşuldu ve çayevindeki herkes birbirine &amp;#8216;Dur bakalım, ne olacak?&amp;#8217; dedi. Gün görmüş, dönem geçirmiş, eski Tophane Askeri Sanayi Mektebi&amp;#8217;nden yetmişe, yetmişini çok aşkın bir eski işçi emeklisi,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dur bakalım, ne olacak deyip duruyorsunuz da, bana bir akrabamızın başına gelenleri anımsattınız.. dedi.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Başlar ona yöneldi. Akrabasının başına geleni merakla sordular. Bu ilgiyi bekleyen işçi emeklisi de olayı şöyle anlattı:&lt;/p&gt;

&lt;p&gt;Hani hükümetimiz darda kalıp dünya cenneti Boğaziçi&amp;#8217;nin en güzel tepelerini, korularını, yerlerini, petrol zengini Araplara satıyordu ya&amp;#8230; İşte o sıra bir Arap zengini çıktı ortaya, Şeyh mi Prens mi, yoksa hepsi birden mi, öyle bir şey. Adı Ebul-Fatık El-Mışki. Boğaziçi’nin seyrine doyum olmaz tepelerden birini satın almış. Oraya artık köşk mü, konak mı, saray mı, işte öyle bir şey yaptıracak. Derken bu Ebul Fatık, bir Türk kızıyla evlenme sevdasına düşmüş. Hangi Türk kızı olduğu belli değil, yeter ki Türk kızı olsun&amp;#8230; Elbet Arap ölçülerinde güzel de olacak. Ebul-Fatık için satın alacağı tepeyi arayıp bulan komisyoncular, bu kez de ona kız aramaya başlamışlar. Ebul-Fatık ın aradığı kızda aradığı koşullar var: Genç olacak, kız oğlan kız eline erkek eli değmemiş olacak ve gayette saf olacak. Bu zamanda İstanbul da böyle kız bulmak kolay mı? Ebul-Fatık da zaman da para da çok, ille de aradığını bulacak. Aracılar, ısmarlanan kızı araya dursunlar, Ebul-Fatık da bir yandan çat pat Türkçe öğreniyor ki, evleneceği kızla &amp;#8216;yat, kalk, uzan, dön&amp;#8217; falan filan gibi kendisine gerekli olan bir kaç söz konuşabilsin. Ebul-Fatık a çok kız göstermişler. Arap hinoğluhin, öyle her kızı da beğenmiyor. Süt beyaz tenli, lahmacun bedenli, kalçaları enli bir lokum olacak. Sonunda bulunan kızlardan birini çok beğenmiş. İşte biz Ebul-Fatık&amp;#8217;ı bu ilişkiyle tanıdık. Çünkü, Ebul-Fatık ın ayılıp bayılarak beğendiği kız, bizim hanımın uzak bir akrabasının kızı&amp;#8230; Kız tam da Ebul-Fatık ın istediği gibi, on yedi yaşında,kuran kursunda yetişmiş, akça pakça, yandan çarklı kalçalar&amp;#8230; Saflığına gelince, aptaldan bir parmak yukarıda saf&amp;#8230; Ebul Fatık ı da bir görseniz, korkudan dudağınız uçuklar. Kızın babasından yaşlı. İnsan kılığındaki bu çirkinlik anıtını gören biri öyle şaşmış ki, iki elini gökyüzüne kaldırıp &amp;#8216;Hey kurban olduğum allah, sen nelere kadir değilsin..&amp;#8217; diye şaşkınlığını belirtmiş Üstelik memleketinde üçmü, beş mi - kesin sayısı saptanamadı-karısı olduğundan bu kızı hükümet nikahıyla değil, imam nikahıyla alacak. Her neyse efendim, bu Ebul-Fatık, kızla evlendi. Saf kız, çok yoksul bir ailenin çocuğu olduğundan, evlenip de o lükse, o görkeme kavuşunca çok mutlu oldu.Kocasının adı Ebul,Fatık el-Mışkı çok uzun olduğundan, kızın ailesi ana kısaca Fıtık amca diyor. Hem de Fatık Bey deyince, Arabın adı azbuçuk Türkçeleşmiş oluyor. Kızın kendinden altı yaş küçük bir oğlan kardeşi var, kızın tersine cin mi cin. O, Fatık Amca diyemediğinden Fıtık Amca demeye başladı. Fıtık Amca aşağı, Fıtık Amca yukarı&amp;#8230; Biz de hanımla iki kez evlerine gittik. Boğazın tepesindeki o köşk yapılana dek, Nişantaşı’nda lüks daire satın almış, daireyi de kızın üstüne yapmış. Biz Fıtık Amca’yı orada tanıdık. Gel zaman git zaman&amp;#8230; Bundan sonra olanları bana hanım anlattı. O da, Fıtık amcanın genç karısından duymuş. Çünkü kadın olup biteni her önüne gelene anlatıyormuş. Fıtık Amcanın güzel ve küçük karısı sokakta hep çarşafla geziyor. Fıtık Amca çok kıskanç olduğundan, gencecik karısının kadın akrabalarıyla bile sık görüşmesini istemiyor. İyi ama, Fıtık Amcanın evde olmadığı zamanlar kızın canı sıkılıyor. Kıskanç Amca, bir yandan da karısını eve hapseden koca izlenimi vermek istemiyor çevresine. Karısına güvenen bir koca görünümünde&amp;#8230; İşte bu yüzden, kendisinin evde bulunmayacağı iki gün karısına alışveriş için, çok uzaklara gitmemek koşuluyla, sokağa çıkabileceğini söylüyor. Genç kadın buna çok seviniyor, ama sokakta ne yapsın tek başına? Sinemaya gidip gidemeyeceğini soruyor. Fıtık Amca uzun uzun düşünüyor. Karar vermek kolay değil. Gitme dese, karısına baskı yapmış olacak. Git demeye de içi elvermiyor. Birlikte gitmeleri hiç uygun değil. Sonun da şöyle diyor:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Avet&amp;#8230; Müsade var&amp;#8230; Velakin avvalden ben görecek, bilahara sen&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fıtık Amca, o dolaylardaki sinamalarda oynanan bütün flimleri seyredip &amp;#8216;Hazreti Ömer in Adaleti&amp;#8217;adlı yerli flimi görebileceğini söylüyor. Necmiye&amp;#8230; Genç kadının adı. Gidiyor sinemaya&amp;#8230; Fıtık Amcanın içi pırpır&amp;#8230; Ertesi akşam eve dönüyor. Oh, şükür Necmiye evde.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Necmiyaa?&lt;/li&gt;

&lt;li&gt;Efendim.&lt;/li&gt;

&lt;li&gt;Ne yaptın ben yokken?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Necmiye yanayakıla anlatmaya girişiyor!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ah, sorma&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nasıl sormasın, meraktan çatlıyor.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ne oldu Necmiya?&lt;/li&gt;

&lt;li&gt;Öyle bir şey geldi ki başıma,şaştım şaştım kaldım.&lt;/li&gt;

&lt;li&gt;Ne geldi başına?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Necmiya saf saf anlatıyor!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Senin söylediğin sinemaya gitmek üzere çarşaflandım.&lt;/li&gt;

&lt;li&gt;Şok güzel.&lt;/li&gt;

&lt;li&gt;Çıktım sokağa&lt;/li&gt;

&lt;li&gt;Avet?&lt;/li&gt;

&lt;li&gt;Yolda giderken bir herif sokuldu yanıma?&lt;/li&gt;

&lt;li&gt;Bir harif?&lt;/li&gt;

&lt;li&gt;Evet&amp;#8230; Ben gidiyorum, o da yanımda gidiyor. Ben gidiyorum o da gidiyor. Dur bakalım, ne olacak, diye merak ettim.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fıtık Amca çok bozulur ama,karısına belli etmemeye çalışarak o da şaşmış görünür!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Allah Allah&amp;#8230; Banda şok merak ettim. Dur bakalım n&amp;#8217;olecak?&lt;/li&gt;

&lt;li&gt;Ben gidiyorum, o gidiyor&amp;#8230; Böööyle yanımda. Dibimden ayrılmıyor. Dur bakalım n&amp;#8217;olacak diyorum içimden&amp;#8230;&lt;/li&gt;

&lt;li&gt;Fasuphanellah&amp;#8230; Dur bakalım n&amp;#8217;alecak?&lt;/li&gt;

&lt;li&gt;Bileti alıyorum o senin dediğin sinemaya girdim, adam da girmez mi?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bu kez Fıtık Amca atik davranıp karısından önce sordu:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ve minelgaraip&amp;#8230; Dur bakalı n&amp;#8217;olecak? Sonra?&lt;/li&gt;

&lt;li&gt;Sonra ben oturdum. O da yanımdaki boş koltuğa oturmaz mı?&lt;/li&gt;

&lt;li&gt;Hayret! Du bakalı n&amp;#8217;olecak?&lt;/li&gt;

&lt;li&gt;Işıklar söndü, flim başladı.&lt;/li&gt;

&lt;li&gt;Eeee anlat Necmiyaa?&lt;/li&gt;

&lt;li&gt;O herif elini bacağıma atmaz mı?&lt;/li&gt;

&lt;li&gt;Ne diyorsun, velacaip&amp;#8230;&lt;/li&gt;

&lt;li&gt;Çarşafımın eteğinin altından elini sokmaz mı? Aaa! Şaştım kaldım&amp;#8230;&lt;/li&gt;

&lt;li&gt;Ne yapacak?&lt;/li&gt;

&lt;li&gt;Bilmem bende onu merak ediyorum ya&amp;#8230; Dur bakalım, n&amp;#8217;olacak diye bekliyorum.&lt;/li&gt;

&lt;li&gt;Vallahi ban da merak ettim yahu&amp;#8230; Dur bakalım,n&amp;#8217;olecak diye bekliyorum.&lt;/li&gt;

&lt;li&gt;Sonra o herif oramı buramı karıştırmaya başladı. Doğrusu çok merak ettim. Sen olsan merak etmez misin?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fıtık Amcanın gözlerinden ateşler saçılıyor ama,karısı o denli saf ki,kızsa ,hiç yakışık almayacağı için o da karısına uyup soruyor!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nacmiya, du bakalım n&amp;#8217;olecak?&lt;/li&gt;

&lt;li&gt;Sonra &amp;#8216;Hareti Ömer in Adaleti&amp;#8217; bitti. Lambalar yandı. Ben kalktım, o da kalkmaz mı?&lt;/li&gt;

&lt;li&gt;Sonra harif da?&lt;/li&gt;

&lt;li&gt;Evet&lt;/li&gt;

&lt;li&gt;Velacaip ve minelgarip&amp;#8230; Du bakalım n&amp;#8217;olecak?&lt;/li&gt;

&lt;li&gt;Çıktım sinemadan, o da çıktı. Ben yürüyorum, O da yanımda yürüyor.&lt;/li&gt;

&lt;li&gt;Aman Necmiya,vallahi şok merak ettim.Du bakalı n&amp;#8217;olecak?&lt;/li&gt;

&lt;li&gt;Ben de merak ediyorum. Ben köşeyi saptım.&lt;/li&gt;

&lt;li&gt;Harif da saptı mı?&lt;/li&gt;

&lt;li&gt;Saptı.&lt;/li&gt;

&lt;li&gt;Anlat şabuk Nacmiya, şok meraklı.&lt;/li&gt;

&lt;li&gt;Bizim aapartmanın kapısından girdim, herif de girdi. Dur bakalım, n&amp;#8217;olecak diye merak içindeyim.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fıtık Amca ter içinde&amp;#8230;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sonra?&lt;/li&gt;

&lt;li&gt;Bizim kata çıktım, herif de çıktı.&lt;/li&gt;

&lt;li&gt;Vay harif vay!&amp;#8230;&lt;/li&gt;

&lt;li&gt;Çantamdan anahtarı çıkarıp bizim dairenin kapısını açtım, girdim içeri, o da girmez mi?&lt;/li&gt;

&lt;li&gt;Harif da yallah içeeri?&lt;/li&gt;

&lt;li&gt;Evet&lt;/li&gt;

&lt;li&gt;Du bakalı n&amp;#8217;olecak&amp;#8230; Aman anlat şabuk Nacmiya&amp;#8230; -Eve gelince yatak odasına girip elbet soyundum. O da soyunmaz mı?&lt;/li&gt;

&lt;li&gt;Ne diyorsun Nacmiyaa&amp;#8230; Du bakalı n&amp;#8217;olecak?&lt;/li&gt;

&lt;li&gt;Soyununca yatağa girdim. Olur şey değil, O da benimle yatağa girmez mi?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fıtık Amca kızgın demirle dağlanmış gibi haykırır:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ayvaaaaah! Du bakalı n&amp;#8217;olecak?&lt;/li&gt;

&lt;li&gt;Ben de yatakta ne olacak diye merak ediyorum.&lt;/li&gt;

&lt;li&gt;Aman Nacmiyaa, vallahi meraktan şatlayacak ban&amp;#8230; Söyle şabuk, ne oldu Nacmiya?&lt;/li&gt;

&lt;li&gt;Hiiç canım&amp;#8230; Bir şey değilmiş, ben de boşu boşuna merak etmişim.&lt;/li&gt;

&lt;li&gt;Boncuk boncuk ter döküyordu Fıtık Amca.&lt;/li&gt;

&lt;li&gt;Yok yahu&amp;#8230;Peki, ne oldu Nacmiyaa? Ne yaptı?&lt;/li&gt;

&lt;li&gt;Aynen senin her gece yaptığını&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Beyninden vurulmuşa dönen Fıtık Amca ne yapsın şimdi? Karısı o denli saf ki, başına kötü bir şeyin geldiğinden bile haberi yok ki&amp;#8230; Döğse olmaz. Kovsa olmaz. Erkekliğe toz kondurmamak, yiğitliğe krem sürdürmemek için Fıtık Amca şöyle der:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amaaaaan Nacmiya, ban da muhim bişey zannediyordum. Du bakalı n&amp;#8217;olecak diye boşuna merak etmişim. Velakin hiç möhim değil.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Olayı anlatan yaşlı işçi emekçisi,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;İşte böyle arkadaşlar, diye sözü bağladı, bütün bu olup biteni kadın saf saf her önüne gelene anlatıyormuş. Bizim hanımda kendisinden duymuş.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Titreyen elindeki kahve fincanını masaya koyan bir memur emeklisi,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Yahi,hiç anlayamadım,dedi,sen şimdi bu olayı ne diye anlattın? Kel mana?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;İşçi emeklisi,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hergün burada laflayıp laflayıp da sonunda &amp;#8216;Dur bakalım, n&amp;#8217;olacak?&amp;#8217; diye merak edip soruyorsunuz ya, işte sizi meraktan kurtarmak için ne olacağını anlattım.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Çayevindekilerden bir kahkaha koptuu.&lt;/p&gt;

&lt;p&gt;İşçi emeklisi ekledi:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Velakin hiç mühim değil.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Aziz Nesin&lt;/em&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Bir Startup Masalı: Bezirgan ve Origami Ustası</title>
   <link href="http://hasanozgan.com/blog/2012/07/22/bir-startup-masali-bezirgan-ve-origami-ustasi"/>
   <updated>2012-07-22T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2012/07/22/bir-startup-masali-bezirgan-ve-origami-ustasi</id>
   <content type="html">&lt;p&gt;Uzun zamandır yazmayan, daha doğrusu yazmaya vakit bulamayan bir olarak, kalemin pasını atacak masal tadında bir yazı düşünüyordum. Şöyle bir etrafıma bakınca neden uzman olduğum ve son zamanların en gündemde olan konusu olan e-ticaret üzerine olmasınki dedim. Bilindiği üzere son yıllarda Türkiye&amp;#8217;de e-ticaret pazarı çok büyüdü. Yurtiçi ve yurtdışı kaynaklı birçok şirket bu alana yatırım yaptı ve yapmaya devam ediyor. E-ticaretin birçok türünde yıllarca çalışmış biri olarak, bu pazarda yer almak isteyenlere, bir web şirketinin hikayesini konu alan bir yazı yazmak istedim. Bu yazının teknik olmayacak. Ama ilerideki yazılarımda bu işin mutfağına bir mühendis gözüyle irdelemeye başlayacağız. Örneğin bir arama motoru, yada öneri motorunun mimarisinden söz edecek, ödeme ağ geçidi ile ilgili konuşacak ve belkide pazarlama için gerekli entegrasyonlardan söz edeceğim. Şimdi gelin, bu işe girmek isteyenler için öğüt niteliğinde olacak Bezirgan ve Origami Ustası&amp;#8217;nın hikayesine birlikte kulak verelim.&lt;/p&gt;

&lt;p&gt;Bezirgan işini yaparken, yılların verdiği deneyimle yaşlı bir kurt, işinin ehli, iyi giyimli ve hırslı bir beyfendi olarak tanınırdı. E-ticaret alanında dünya çapında bir girişimin en büyük hissedarı ve yönetim kurulu başkanıydı. Her fırsatta girişimcinin hızlı ve çevik olması gerektiğini söyler dururdu. Şirketinin adını en sevdiği iki şeyden esinlenerek koymuştu &lt;em&gt;(Otostopçunun Galaksi Rehberi ve Atlar)&lt;/em&gt; &lt;em&gt;42beygir&lt;/em&gt;. İnternet&amp;#8217;te en önemli şey rekabetti. Bunun içinde çok hızlı ve çevik olmak gerekiyordu.&lt;/p&gt;

&lt;p&gt;Dünya medyası Bezirgan&amp;#8217;ın projelerinin klon olmasına dair sıkça yazılar yazardı. Bunun sebebi, Bezirgan&amp;#8217;ın projelerinin hemen hepsinin tutmuş bir fikrin üzerine inşa edilmiş olmasıydı. Dünya üzerinde bu şekilde tutmuş bir fikri klonlayan çok fazla şirket vardı ama içlerinden sadece &lt;em&gt;42beygir&lt;/em&gt; yatırımlarını hızlıca karlı hale getirmişti. Ayrıca diğer benzer şirketlerin aksine, klon projeleri kendi içinde özgünlüğe sahipti. Tutan bir fikri önce alır, bulunduğu lokasyonun ihtiyaçları ile harmanlayıp fikre yeni bir bakış açısı katardı. Örneğin, dünyaca ünlü pazaryeri sitesi Ebay&amp;#8217;i klonladığında; ülke halkının tedirginliğini farkedip, güvenli ödeme adında paranın iki tarafta alışverişi onaylayana kadar bloklandığı bir e-ticaret yapısı siteye dahil etmişti. Rakipleri gibi bir fikri birebir sitenin görsel tasarımına hatta rengine kadar kopyalamazdı. Bu yönüyle kloncu yakıştırmalarına kendine yakıştırmaz ve kendisini origami ustası olarak adlandırırdı. Çünkü yaptığı iş dışarıdan kolay görünsede bir zarafet ve tecrübe istiyordu. Her ne kadar dışarıdan yapmak kolay gibi görünse de sabır ve incelik isterdi. Ayrıntıda saklambaç oynayan şeytanın nefesi, projelerinde hissediliyordu.&lt;/p&gt;

&lt;p&gt;Neredeyse e-ticaretin her alanında yatırımları bulunuyordu. Başlıca yatırım yaptığı e-ticaret türleri şunlardı;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;B2C diye adlandırılan e-ticaret (Amazon.com / Hepsiburada.com gibi)&lt;/li&gt;

&lt;li&gt;C2C veya Marketplace olarakta bilinen e-ticaret model (Ebay.com / Gittigidiyor.com gibi)&lt;/li&gt;

&lt;li&gt;Dikey e-ticaret (Zappos.com / Zizigo.com gibi)&lt;/li&gt;

&lt;li&gt;Grup satışı yapılan e-ticaret (Groupon.com / Grupanya.com gibi)&lt;/li&gt;

&lt;li&gt;Uzman önerileri yoluyla yapılan e-ticaret (OpenSky.com / Gurunzi.com gibi)&lt;/li&gt;

&lt;li&gt;Kapalı Alış-Veriş Modeli (Private Shopping) yoluyla yapılan satışlar (Gilt.com / Markafoni.com gibi)&lt;/li&gt;

&lt;li&gt;Sosyal e-ticaret modeli (Plyvore.com / StilSOS.com gibi)&lt;/li&gt;

&lt;li&gt;Fiyat karşılaştırma siteleri (Google Product Search / Cimri.com gibi)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='kk_bir_eticaret_irketinin_organizasyon_emas'&gt;Küçük Bir E-Ticaret Şirketinin Organizasyon Şeması&lt;/h2&gt;

&lt;p&gt;&lt;img alt='' src='http://www.hasanozgan.com/files/2012/07/e-commerce-organization-structure.png' /&gt;&lt;/p&gt;

&lt;h2 id='bir_eticaret_giriimi_kurmak'&gt;Bir E-Ticaret Girişimi Kurmak&lt;/h2&gt;

&lt;p&gt;Bezirgan bir ülkeye ilk girdiğinde neler yapar gelin şimdi bunu inceleyelim.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Ülkede pazar payı büyük olan fikirlerle bir ülkeye girerdi.&lt;/li&gt;

&lt;li&gt;Ülkenin ihtiyaçlarını çok iyi analiz eder ve gerçekten fark yaratacak yenilikler ile lansman yapardı. Örneğin; aynı gün ürünü göndermek, 1 kuruşluk bir ürün için bile ücretsiz kargo, dişli satınalmacılarla büyük markaların kaliteli yeni sezon ürünlerini ucuza satınalabilmek. İnanın bu çok zor bir şey. Private shopping sitelerinin sattığı ucuz ürünler maalesef genelde elde kalan, serisi bulunmayan ürünler oluyor.&lt;/li&gt;

&lt;li&gt;Ülkenin kanunlarını öğrenebilecekleri danışmanlar tutar ve gereksinimleri hızla implemente ederdi. Fatura kuralları vb şeylere önceden hazır olurdu. İade hakları, kanunsal açıklar, dolandırıcılık ve sahtekarlık gibi konulara hazırlık olurdu.&lt;/li&gt;

&lt;li&gt;Süreçleri öncesinde hazırlar ve netleştirirdi. Bu iş için yine bu alanda uzmanlaşmış Süreç Yöneticileri işe alır ve bunları iyileştirmek ve tıkanıklıkları bulmak için elinden geleni yapardı.&lt;/li&gt;

&lt;li&gt;Diploma notuna bakarak eleman alımı yapan şirketlerden farklı olarak, aşağıdaki organizasyon şemasında (bir e-ticaretin) belirttiğim gibi ilgili departmanlarda deneyimli çalışanlar bulmak ve gerekiyorsa rakiplerden transfer etmek.&lt;/li&gt;

&lt;li&gt;Çalışanlarının motivasyonlarına çok önem verirdi. Yatırımlarının analizini çok iyi yaptığı için, kaynakları boşa harcamazdı. Şirketin motivasyonunu kıracak, toplu işten çıkarma gibi agrasif hareketler yapmaz. Onların çalışırken mutlu olmasını isterdi. Şirketlerinin mottosu 3M &lt;em&gt;&amp;#8220;mutlu ol, meraklı ol, müşteri ol&amp;#8221;&lt;/em&gt;. Ekibe uyum sağlayamayan çalışanlara maaşının iki katını teklif ederek ayrılmalarını rica ederdi. İşini mutlu insanlarla yapılırdı. Çalışanların aynı zamanda bir müşteri şapkası takmalarını isterdi.  Çalışma ortamına önem verirdi. Beton yığını ve büyük plazalardansa, ağaçlar içindeki bahçeli ofisleri tercih ederdi. Böylece çalışanlar hem hoş vakit geçirecekleri bir çalışma ortamına sahip olur, hem de kuş cıvıltıları içinde dinlenebilirdi. İşlerin verimliliği ve çalışanların motivasyonundaki etkisi inanılmazdı.&lt;/li&gt;

&lt;li&gt;Ekipler arasında yatay bir hiyerarşi vardı. Sorumlulukları merkezde toplamak yerine küçük gruplara bölmüş organik değilde mozaik bir organizasyon yapısı vardı. Sahiplik eşit olarak bölünürdü. Bir ekip ruhu oluşur ve ortak bir amaç için çalışılırdı. Şirket için bir CEO ile bir Ofisboy arasında bir fark yoktu. Her ikiside bu şirketin yürümesi için gerekli çarklardı. Hata ve başarı bu sebeple tüm ekipte hissedilir ve hissettirilirdi.&lt;/li&gt;

&lt;li&gt;Marketing işi marketing departmanına verilemeyecek kadar önemli olduğunu bildiğinden satış öncesi ve sonrası müşteri geri bildirimlerine çok önem verirdi. Bazen bu ihtiyaçları dinler ve yorumlar ve kampanyalarını bu yönde yapardı. Sürekli indirim kuponlarıyla satış yapmaz. Sadık ve elit bir müşteri kitlesi kazanmaya çalışırdı. DWH (data warehouse) ekibinden sürekli raporlar alarak müşteri kitlesini takip ederler.&lt;/li&gt;

&lt;li&gt;Müşterilerinin siparişlerini her adımını takip eder, sorunlu siparişleri, yarım kalan satın almaları, müşterilerin arama sonuçlarında bulamadığı ürünleri ve daha birçok konuda müşterilerine bir muhattapları olduğunu hissettirirdi. Özellikle müşteriler kendi aralarında sınıflandırılmıştı.&lt;/li&gt;

&lt;li&gt;Ürün satın alması kadar, hızlı gönderi (logistik) şirket için en önemli alanlardan biriydi. Ürünün satış sonrası her adımından müşteri bilgilendirilir. Bazen paketleme departmanından şeker, indirim kuponu, küçük bir oyuncak, paket içinde bir hediye kutusu gibi süpriz hediyelerde çıkardı. Bunu rastgele 5-10 müşteriye yaparlardı.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Bezirgan böyle ilginç bir adamdı. Bezirganın bir klon ustası gibi gözüksede, işini zerafetle modelleyen, lokasyona uygun değişikliği ustalıkla yapan adeta bir origami ustası gibiydi. Origami ustalığı sabır isteyen, ilk başta basit görülen ama zahmetli bir iş. Kare bir kağıda baktığında bir sürü nesne gören ilginç bir adam.&lt;/p&gt;

&lt;p&gt;Türkiye&amp;#8217;de e-ticaret alanında gerçekten çok büyük oyuncular var. Eğer inandığınız bir model yoksa ve yukarıdaki farkları yaratamayacaksanız bu işe girmemenizi öneririm. Çünkü, Bezirgan gibi kişilerle başa çıkmak için onun kadar dayanabilecek nefesiniz (kaynağınız) olması gerekiyor.&lt;/p&gt;

&lt;p&gt;Bu yazıyı yazdığımda rocket internet halen faaliyetteydi ve yukarıdakilerin çoğunu adam gibi yerine getirmiyordu. Başarısızlık iyi bir ders kitabı fakat bence olması gerekenleri hatırlatmak daha iyi her zaman.&lt;/p&gt;

&lt;p&gt;Bir sonraki e-ticaret yazımda ödeme sistemlerinden bahsetmeyi planlıyorum. Bu e-ticaret yazıları;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sipariş akışları ve yönetimi&lt;/li&gt;

&lt;li&gt;Lojistik yönetimi&lt;/li&gt;

&lt;li&gt;Ürün yönetimi ve modellemesi&lt;/li&gt;

&lt;li&gt;Kategori ve navigasyon yönetimi&lt;/li&gt;

&lt;li&gt;Pazarlama ve entegrasyonları&lt;/li&gt;

&lt;li&gt;Arama motoru&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;gibi konularla dilimin döndüğü, zamanımın elverdiği ölçüde devam edecek&amp;#8230;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>İş İlanı: Java Developer</title>
   <link href="http://hasanozgan.com/blog/2012/02/01/is-ilani-java-developer"/>
   <updated>2012-02-01T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2012/02/01/is-ilani-java-developer</id>
   <content type="html">Almanya merkezli, birçok ülkede projeleri olan çok uluslu bir &lt;a href=&quot;http://www.rocket-internet.com.tr&quot;&gt;şirkette,&lt;/a&gt; yazılım geliştirirken, yeni teknolojiler kullnarak öğrenmek ve eğlenmek mi istiyorsunuz?. İşte size harika bir fırsat. Çalıştığım şirket aşağıdaki konularda yazılımcı ihtiyacı bulunuyor.

&lt;strong&gt;Java Developer&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;Spring ve/veya Stripes Framework bilen&lt;/li&gt;
	&lt;li&gt;Postgresql ve/veya Stored Procedureler ile çalışmış.&lt;/li&gt;
	&lt;li&gt;Solr arama motoru konusunda deneyim sahibi.&lt;/li&gt;
	&lt;li&gt;Membase ve Ehcache kullanmış.&lt;/li&gt;
	&lt;li&gt;Yüksek ölçekli web projelerde görev almış.&lt;/li&gt;
	&lt;li&gt;E-Commerce tecrübesi olan&lt;/li&gt;
	&lt;li&gt;Kendini sürekli yenileyen&lt;/li&gt;
	&lt;li&gt;Öğrenmeyi ilke benimsemiş&lt;/li&gt;
	&lt;li&gt;PHP vb. programa dillerine ilgi gösteren&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;Başvurularınız için; &lt;a href=&quot;mail:hasan.ozgan@rocket-internet.com.tr&quot;&gt;hasan.ozgan@rocket-internet.com.tr&lt;/a&gt;&lt;/div&gt;
&lt;br/&gt;
Ayrıca PHP alanında da şu ilanlarada göz atabiliriniz;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.kariyer.net/ilan/Rocket+Internet+Senior+Developer+(PHP)+/?arn=&amp;amp;sid=&amp;amp;ilankodu=768425&amp;amp;ilId=&amp;amp;PTitle=Rocket+Internet-Senior+Developer+(PHP)-&amp;amp;tss=1&amp;amp;bsn=1&quot; target=&quot;_blank&quot;&gt;Senior PHP Developer&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.kariyer.net/ilan/Rocket+Internet+Lead+Developer+%28PHP%29+/?arn=956570&amp;amp;sid=&amp;amp;ilankodu=768374&amp;amp;ilId=&amp;amp;PTitle=Rocket+Internet-Lead+Developer+%28PHP%29-&amp;amp;tss=1&amp;amp;bsn=1&quot; target=&quot;_blank&quot;&gt;Lead Developer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Büyük Ustaya Saygıyla (1941 - 2011) !...</title>
   <link href="http://hasanozgan.com/blog/2011/10/13/buyuk-ustaya-saygiyla-1941-2011"/>
   <updated>2011-10-13T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2011/10/13/buyuk-ustaya-saygiyla-1941-2011</id>
   <content type="html">Az önce &lt;a href=&quot;http://news.ycombinator.com&quot;&gt;Hacker News&lt;/a&gt;'te ilk öğrendiğim programlama dili C ve en sevdiğim işletim sistemi UNIX'in babası büyük usta &lt;a href=&quot;http://cm.bell-labs.com/who/dmr/&quot;&gt;Dennis Ritchie&lt;/a&gt;e'nin vefat ettiğini öğrendim. Değer verdiğim birkaç büyük ustadan biriydi kendisi. 

Saygıyla anıyorum!..

[cc lang=&quot;c&quot;]

#include &lt;stdio.h&gt;

int main()
{
    printf(&quot;goodbye, dad\n&quot;);
    return 0;
}

[/cc]
</content>
 </entry>
 
 <entry>
   <title>Squeryl'in Yaratıcısı Maxime Lévesque ile Buluştuk</title>
   <link href="http://hasanozgan.com/blog/2011/03/16/squerylin-yaraticisi-maxime-levesque-ile-bulustuk"/>
   <updated>2011-03-16T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2011/03/16/squerylin-yaraticisi-maxime-levesque-ile-bulustuk</id>
   <content type="html">Scala dünyasının başarılı projelerinden &lt;a href=&quot;http://squeryl.org&quot;&gt;Squeryl&lt;/a&gt; projesinin yazarı Maxime Lévesque ile dün Mihrimah Sultan'da buluştuk. &lt;a href=&quot;http://mihrimahsultan.com&quot;&gt;Mihrimah Sultan&lt;/a&gt;'da Rakı sefası yaptıktan sonra Badehane'de votka içerek geceyi noktaladık. 

Maxime'in Türkiye'ye geliş sebebini duyduğunuzda biraz şaşırabilirsiniz. &lt;a href=&quot;http://www.misirliahmet.com/&quot;&gt;Mısırlı Ahmet&lt;/a&gt;'ten Türk Darbuka tekniğini öğrenmek amacıyla ülkemizde bulunuyor. Squeryl ve Scala dışında müzik, siyaset, açık kaynak, edebiyat, veritabanları, programlama dilleri, kadın-erkek ilişkileri ve genetik gibi birçok konu hakkında konuştuğumuzu söyleyebilirim. Kendisi çok renkli bir kişilik. Ve sohbetimizin her dakikası keyifli ve öğretici geçtiğini söyleyebllirim.

Maxime ile buluşmamıza katılarak, sohbetimize renk katan &lt;a href=&quot;http://yalazi.org&quot;&gt;Onur Yalazı&lt;/a&gt; ve Gökhan Goralı'ya ne kadar teşekkür etsem azdır.

Son olarak Maxime 29 Mart'a kadar Türkiye'de olacak ve kendisiyle bir şehir turu gerçekleştireceğiz.
</content>
 </entry>
 
 <entry>
   <title>Scala Geliştirme Ortamı ve Örnek Web Uygulaması</title>
   <link href="http://hasanozgan.com/blog/2011/02/10/scala-gelistirme-ortami-ve-ornek-web-uygulamasi"/>
   <updated>2011-02-10T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2011/02/10/scala-gelistirme-ortami-ve-ornek-web-uygulamasi</id>
   <content type="html">Geçen yazımda Scala programlama diline kabaca &lt;a href=&quot;http://www.hasanozgan.com/2011/02/scalaya-giris/&quot;&gt;giriş yapmıştık&lt;/a&gt;, bu yazımda ise bir web çatısı kullanımına geçmeden önce Scala geliştirme ortamını kurmaktan ve basit bir web uygulaması nasıl yazılır bundan söz etmek istiyorum.

Bu belgeleme ile aşağıdaki teknolojilerin içermektedir.
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://java.sun.com/javase/downloads/&quot;&gt;Java Developer Toolkit&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://eclipse.org&quot; target=&quot;_blank&quot;&gt;Eclipse&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.scala-lang.org/downloads&quot;&gt;Scala&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://scala-ide.org&quot; target=&quot;_blank&quot;&gt;Scala-IDE&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://code.google.com/p/simple-build-tool/&quot; target=&quot;_blank&quot;&gt;Simple Build Tool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Scala'nın Kurulumu&lt;/h3&gt;
Scala, bilinen tüm popüler işletim sistemleriyle çalışmaktadır. Son sürümünü &lt;a href=&quot;http://www.scala-lang.org/downloads&quot;&gt;Scala'yı sitesinden&lt;/a&gt; IzPack Installer versiyonunu indirerek kurabilirsiniz. Tabii bilgisayarınızda Java JDK'nın kurulu olması gerektiğini hatırlatayım.
&lt;a href=&quot;http://www.hasanozgan.com/wp-content/uploads/2011/02/Screen-shot-2011-02-08-at-9.19.38-PM.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-512&quot; title=&quot;Scala Installer&quot; src=&quot;http://www.hasanozgan.com/wp-content/uploads/2011/02/Screen-shot-2011-02-08-at-9.19.38-PM.png&quot; alt=&quot;&quot; width=&quot;597&quot; height=&quot;458&quot; /&gt;&lt;/a&gt;
&lt;h3&gt;Simple Build Tool (sbt) Kurulumu&lt;/h3&gt;
SBT bilindiği üzere, proje yapılandırma aracıdır. Ivy ve Maven depolarından proje bağımlılıklarını hızlıca elde edebilirsiniz. Eklenti desteği ile &lt;strong&gt;embedded jetty&lt;/strong&gt;, &lt;strong&gt;test işlemleri&lt;/strong&gt; gibi çeşitli ihtiyaçlarınızı karşılayabilir sizde kendi eklentilerinizi yazabilirsiniz.
&lt;h5&gt;SBT'nin kurulumu;&lt;/h5&gt;
Son kararlı sürüm olan 0.7.4'ü &lt;a href=&quot;http://code.google.com/p/simple-build-tool/downloads/detail?name=sbt-launch-0.7.4.jar&quot;&gt;buradan&lt;/a&gt; ya da &lt;a href=&quot;http://code.google.com/p/simple-build-tool/downloads/list&quot;&gt;projenin sitesinden&lt;/a&gt; en güncel sürümünü indirebilirsiniz.
&lt;h5&gt;Neden SBT?&lt;/h5&gt;
SBT tamamiyle Scala diliyle yazılmıştır. Ve bağımlılık yönetiminde Maven ve Ivy'i depoları kullanır. Isterseniz manuel olarak yeni bir depo ekleyebilir yada cikartabilirsiniz. SBT'nin gelişmiş bir console arayüzü vardır. SBT komutları iki çeşittir. Bir doğal komutları, ikincisi ise pluginlerle gelen komutlar ve ikinci olarakta &lt;strong&gt;action&lt;/strong&gt; diye adlandırılan plugin komutlarıdır. Bu komutların çağrısı yapılırken özel anlamlara gelen ön ekler alabilirler. Bu sayede komutlar daha güçlendirilebilir.
[cc lang=&quot;bash&quot;]
$ sbt help
[info] Building project HelloWeb 1.0 against Scala 2.8.1
[info]    using HelloProject with sbt 0.7.4 and Scala 2.7.7
You may execute any project action or method or one of the commands described below.
Available Commands:
   &lt;action name&gt; : Executes the project specified action.
   &lt;method name&gt; &lt;parameter&gt;* : Executes the project specified method.
   &lt;processor label&gt; &lt;arguments&gt; : Runs the specified processor.
   ~ &lt;command&gt; : Executes the project specified action or method whenever...
   &lt; file : Executes the commands in the given file.  Each command should...
   + &lt;command&gt; : Executes the project specified action or method for all...
   ++&lt;version&gt; &lt;command&gt; : Changes the version of Scala building the project...
   * : Prefix for commands for managing processors.  Run '*help' for details.
   ! : Prefix for history commands.  Run '!' for history command help.
...
[/cc]

Sbt'nin konfigürasyon dosyası yine Scala kodları yani &lt;strong&gt;Trait&lt;/strong&gt; türünde sınıflardan türetilerek yapılır. Türediği Trait sınıfına ve yüklendiği eklentilere göre projenin türü ve kullanılacak actionlar belli olur.

Yukarıda adından söz ettiğimiz bu konular makalenin sonunda yaratacağımız örnek proje ile daha iyi anlayacaksınız.
&lt;h5&gt;Unix ve MacOs Sistemleri için &lt;em&gt;sbt.sh&lt;/em&gt; dosyası&lt;/h5&gt;
[cc lang=&quot;bash&quot;]
java -Xmx512M -Xss2M -XX:+CMSClassUnloadingEnabled -jar `dirname $0`/sbt-launcher.jar &quot;$@&quot;
[/cc]
&lt;h5&gt;Windows Sistemleri için &lt;em&gt;sbt.bat&lt;/em&gt; dosyası&lt;/h5&gt;
[cc lang=&quot;bash&quot;]
set SCRIPT_DIR=%~dp0
java -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m -Xmx512M -Xss2M -jar &quot;%SCRIPT_DIR%\sbt-launcher.jar&quot; %*
[/cc]
&lt;h3&gt;Scala-IDE Kurulumu&lt;/h3&gt;
Scala IDE projesi Eclipse platformu üzerinde geliştirilene daha çok yeni olan bir projedir. Eksikleri olsada, Eclipse sayesinde bu açıklar zamanla toparlanacaktır. Scala IDE'yi kurmak için bilgisayarınızda Eclipse'in kurulu olduğunu varsayıyorum.
&lt;center&gt;&lt;iframe title=&quot;YouTube video player&quot; width=&quot;640&quot; height=&quot;390&quot; src=&quot;http://www.youtube.com/embed/PtkNg4mK4NY&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;
Eclipse, Scala-IDE eklentisinin kurulumu için aşağıdaki video işinize yarayacaktır. Kendini eclipse sürümünüze uygun eklentinin adresine ise &lt;a href=&quot;http://download.scala-ide.org/&quot;&gt;buradan&lt;/a&gt; erişebilirsiniz.
&lt;h3&gt;Scala İle Basit Bir Web Uygulaması Yaratmak&lt;/h3&gt;
&lt;h5&gt;Proje Oluşturma&lt;/h5&gt;
Örnek uygulama adımlarını Linux ve MacOS sistemlerinde çalışacak biçimde anlatacağım. &lt;strong&gt;HelloWeb&lt;/strong&gt; isimli dizini oluşturduktan sonra dizinin içine giriyor ve &lt;strong&gt;sbt&lt;/strong&gt; komutunu çalıştırıyoruz. Proje dizini ve dosyasını bulamazsa, yeni proje yaratmak isteyip istemediğimizi soruyor. Yeni proje yaratma adımları için aşağıdaki şekilde tamamladıktan sonra sbt konsolundan &lt;strong&gt;exit&lt;/strong&gt; komutuyla çıkıyoruz.

[cc lang=&quot;bash&quot; lines=&quot;24&quot;]
$ mkdir HelloWeb &amp;amp;&amp;amp; cd HelloWeb
$ sbt
Project does not exist, create new project? (y/N/s) y
Name: Hello Web
Organization: Hasan Ozgan
Version [1.0]:
Scala version [2.7.7]: 2.8.1
sbt version [0.7.4]:
Getting Scala 2.7.7 ...
:: retrieving :: org.scala-tools.sbt#boot-scala
confs: [default]
2 artifacts copied, 0 already retrieved (9911kB/35ms)
Getting org.scala-tools.sbt sbt_2.7.7 0.7.4 ...
:: retrieving :: org.scala-tools.sbt#boot-app
confs: [default]
15 artifacts copied, 0 already retrieved (4096kB/71ms)
[success] Successfully initialized directory structure.
Getting Scala 2.8.1 ...
:: retrieving :: org.scala-tools.sbt#boot-scala
confs: [default]
2 artifacts copied, 0 already retrieved (15118kB/72ms)
[info] Building project Hello Web 1.0 against Scala 2.8.1
[info]    using sbt.DefaultProject with sbt 0.7.4 and Scala 2.7.7
&gt; exit
[/cc]

Projeyi yarattığımızda aşağıdaki gibi bir dizin ağacı göreceksiniz. Bu dizin ağacında &lt;strong&gt;project&lt;/strong&gt; isimli dizinde proje yapılandırma işlemlerimizi yapıyoruz. Projemizin kaynak kodları ise &lt;strong&gt;src/main/scala&lt;/strong&gt; dizinin altında yazıyoruz. Henüz uygulamamız web uygulaması olarak yapılandırılmadığı için &lt;strong&gt;src/main/webapp&lt;/strong&gt; dizini mevcut değil. Yazının ilerleyen bölümlerinde bu dizini ve konfigürasyonları elle yapılandıracağız. :)

[cc lang=&quot;bash&quot;]
HelloWeb$ tree
   .
   ├── lib
   ├── project
   │   ├── boot
   │   └── build.properties
   ├── src
   │   ├── main
   │   │   ├── resources
   │   │   └── scala
   │   └── test
   │       ├── resources
   │       └── scala
   └── target
[/cc]
&lt;h5&gt;Projenin Yapılandırılması&lt;/h5&gt;
Şimdi örnek web uygulamamız için projemizi yapılandırmaya başlayalım. Sbt kendini çalıştırdığında &lt;strong&gt;project/build/*.scala&lt;/strong&gt; dizini altında &lt;strong&gt;BasicScalaProject&lt;/strong&gt; abstract sınıfından türemiş bir sınıf arar. Yapılandırma işlemleri bu sınıfın içinde olur.

Şimdi gelin bizde böyle bir sınıf tanımı yapalım.

[cc lang=&quot;bash&quot;]
HelloWeb$ mkdir build
HelloWeb/build$ vim HelloProject.scala
[/cc]

[cc lang=&quot;scala&quot;]
import sbt._

class HelloProject(info: ProjectInfo) extends DefaultWebProject(info)
{
    override def libraryDependencies = Set(
        &quot;javax.servlet&quot; % &quot;servlet-api&quot; % &quot;2.5&quot; % &quot;provided&quot;
        &quot;org.mortbay.jetty&quot; % &quot;jetty&quot; % &quot;6.1.22&quot; % &quot;test-&amp;gt;default&quot;
    ) ++ super.libraryDependencies
}
[/cc]
&lt;strong&gt;project/build/HelloProject.scala&lt;/strong&gt;

Şimdi uygulamamızı yazmaya geçmeden önce projemizi eclipse taşıyalım. Bunun için, &lt;strong&gt;Eclipsify&lt;/strong&gt; isimli sbt eklentisini kurmamız gerekiyor. SBT projesine eklentileri tanımlamakta çok kolay.
Öncelikle dizinini eklememiz gerekiyor.

[cc lang=&quot;bash&quot;]
HelloWeb$ mkdir -p project/plugins
HelloWeb/project/plugins$ vim HelloPlugins.scala
[/cc]

[cc lang=&quot;scala&quot;]
import sbt._

class HelloPlugins(info: ProjectInfo) extends PluginDefinition(info) {
    lazy val eclipse = &quot;de.element34&quot; % &quot;sbt-eclipsify&quot; % &quot;0.7.0&quot;
}
[/cc]
&lt;strong&gt;project/plugins/HelloPlugins.scala&lt;/strong&gt;

Son olarakta HelloProject.scala sınıfımıza eklentiyi tanımlamamız gerekiyor. Sınıfımız aşağıdakine benzemeli.

[cc lang=&quot;scala&quot;]
import sbt._
import de.element34.sbteclipsify._

class HelloProject(info: ProjectInfo) extends DefaultWebProject(info) with Eclipsify
{
    override def libraryDependencies = Set(
        &quot;javax.servlet&quot; % &quot;servlet-api&quot; % &quot;2.5&quot; % &quot;provided&quot;
        &quot;org.mortbay.jetty&quot; % &quot;jetty&quot; % &quot;6.1.22&quot; % &quot;test-&amp;gt;default&quot;
    ) ++ super.libraryDependencies
}
[/cc]

Artık uygulamamızı yazmaya hazırız. Yapmamız gereken son bir işlem var. SBT projemizi Eclipse'in anlayacağı hale sokmak. Bunun için önce javax.servlet ve jetty bağımlılıklarımızı güncellememiz gerekiyor. Bunu yapmamızı sağlayan komut ise &lt;strong&gt;update&lt;/strong&gt;. Bu işlemi yaptıksan sonra &lt;strong&gt;eclipse&lt;/strong&gt; isimli yeni &lt;em&gt;action&lt;/em&gt; görmeniz gerekiyor.

[cc lang=&quot;bash&quot;]
sbt update
[info] Recompiling plugin definition...
[info] 	  Source analysis: 1 new/modified, 0 indirectly invalidated, 0 removed.
[info]
[info] Updating plugins...
[info] downloading http://scala-tools.org/repo-releases/de/element34/sbt-eclipsify/0.7.0/sbt-eclipsify-0.7.0.jar ...
[/cc]

sbt actions komutunda listenen action listesinin içinde eclipse'ei görmeniz gerekiyor. Eğer görüyorsanız eclipse proje dosyasını oluşturmak için;

[cc lang=&quot;bash&quot;]
HelloWeb$ sbt eclipse
[info] Building project HelloWorld 1.0 against Scala 2.8.1
[info]    using Project with sbt 0.7.4 and Scala 2.7.7
[info]
[info] == eclipse ==
[info] Creating eclipse project...
[info] == eclipse ==
[success] Successful.
[info]
[info] Total time: 0 s, completed Feb 9, 2011 5:59:41 PM
[info]
[info] Total session time: 1 s, completed Feb 9, 2011 5:59:41 PM
[success] Build completed successfully.
[/cc]

Artık işlemi tamamladık. Şimdi Eclipse açarak, projeyi import edebilirsiniz. 
&lt;center&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;http://www.hasanozgan.com/wp-content/uploads/2011/02/HelloWeb-Import.png&quot;&gt;&lt;img class=&quot;aligncenter size-medium wp-image-589&quot; title=&quot;HelloWeb Project Import&quot; src=&quot;http://www.hasanozgan.com/wp-content/uploads/2011/02/HelloWeb-Import-264x300.png&quot; alt=&quot;HelloWeb Project Import&quot; height=&quot;300&quot; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.hasanozgan.com/wp-content/uploads/2011/02/HelloWeb-Tree.png&quot;&gt;&lt;img src=&quot;http://www.hasanozgan.com/wp-content/uploads/2011/02/HelloWeb-Tree-264x300.png&quot; alt=&quot;&quot; title=&quot;HelloWeb Tree&quot; width=&quot;264&quot; height=&quot;300&quot; class=&quot;alignleft size-medium wp-image-590&quot; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/center&gt;

Son olarak Eclipse'ten SBT'yi çalıştırmak için External Tool Configuration seçeneğinden tanımlamamız gerekiyor. Aşağıda örnek ayarlara ait ekran görüntüsünü bulabilirsiniz.
&lt;center&gt;
&lt;a href=&quot;http://www.hasanozgan.com/wp-content/uploads/2011/02/HelloWeb-Extarnal.png&quot;&gt;&lt;img src=&quot;http://www.hasanozgan.com/wp-content/uploads/2011/02/HelloWeb-Extarnal-300x205.png&quot; alt=&quot;&quot; title=&quot;HelloWeb Extarnal&quot; width=&quot;300&quot; height=&quot;205&quot; class=&quot;aligncenter size-medium wp-image-593&quot; /&gt;&lt;/a&gt;
&lt;/center&gt;
Artık web uygulamamızı yazmaya başlayabiliriz.
&lt;h5&gt;Scala Servlet&lt;/h5&gt;
Scala'nın java mimarileriyle çalışabildiğinden daha önce söz etmiştim. Bu nedenle bir scala web uygulaması yazmak, bir java web uygulaması yazmaktan pek farklı değildir. Scala'da servlet sınıfları kullanılarak yazılabilir. Aşağıda basit bir servlet sınıfı bulunmaktadır. Scala dilinde XML aynı bir String gibi bir tiptir. Örnek scala kodumuzun java'dan tek farkı HTML tipinin parametre olarak verilebilmesidir.

[cc lang=&quot;scala&quot; lines=&quot;29&quot;]
package com.hasanozgan.web

import java.io._
import javax.servlet.http.{HttpServlet, HttpServletRequest, HttpServletResponse}

class HelloServlet extends HttpServlet
{
    override def doGet(req: HttpServletRequest, res: HttpServletResponse)
    {    
        doRequest(req, res) 
    }    

    override def doPost(req: HttpServletRequest, res: HttpServletResponse)
    {    
        doRequest(req, res) 
    }    

    private def doRequest(req: HttpServletRequest, res: HttpServletResponse)
    {    
        res.getWriter().print(&lt;html&gt;
              &lt;head&gt;
                &lt;title&gt;Hello World&lt;/title&gt;
              &lt;/head&gt;
              &lt;body&gt;
                &lt;h1&gt;Hello from Scala!&lt;/h1&gt;
              &lt;/body&gt;
            &lt;/html&gt;)
    }    
}
[/cc]
&lt;strong&gt;src/main/scala/com/hasanozgan/web/HelloServlet.scala&lt;/strong&gt;

Şimdi wepapp ve WEB-INF dizinlerini yarartmaya ve webapp/WEB-INF/web.xml dosyasını oluşturmamız gerekiyor. Aşağıdaki örnek bir web.xml dosyası mevcut.

[cc lang=&quot;xml&quot; lines=&quot;23&quot;]
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
    xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot; 
    xmlns:web=&quot;http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot; 
xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;
   version=&quot;2.5&quot;&gt;

  &lt;servlet&gt;
    &lt;servlet-name&gt;HelloServlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;com.hasanozgan.web.HelloServlet&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
  &lt;/servlet&gt;

  &lt;servlet-mapping&gt;
    &lt;servlet-name&gt;HelloServlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/index&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt;

  &lt;welcome-file-list&gt;
    &lt;welcome-file&gt;index&lt;/welcome-file&gt;
  &lt;/welcome-file-list&gt;

&lt;/web-app&gt;
[/cc]
&lt;strong&gt;src/main/webapp/WEB-INF/web.xml&lt;/strong&gt;

Uygulamayı çalıştırmak için ise &lt;strong&gt;sbt ~jetty-run&lt;/strong&gt; komutunu çalıştırmamız yeterlidir.

[cc lang=&quot;bash&quot;]
HelloWeb$ sbt ~jetty-run
[/cc]

Not: &lt;b&gt;sbt &lt;font color=&quot;red&quot;&gt;~&lt;/font&gt;jetty-run&lt;/b&gt; komutu ile &lt;b&gt;sbt jetty-run&lt;/b&gt; komutu arasında şöyle bir fark bulunur. Eğer bir komut &quot;&lt;strong&gt;~&lt;/strong&gt;&quot; işareti ile başlarsa projenin dosyalarında bir değişiklik olursa proje tekrar derlenir.

&lt;h5&gt;Scala Server Pages (Scalate)&lt;/h5&gt;
Scala dünyasında Quick &amp; Dirty birşeyler yapmak isteyenler için JSP'ye benzer bir template engine kütüphanesi mevcut. &lt;a href=&quot;http://scalate.fusesource.org/&quot;&gt;Scalate (Scala Template)&lt;/a&gt; isimli bu proje gerçktende çok başarılı template modelleri ile geliyor. Bu modellerden benim tercihim SSP yani Scala Server Pages modeli. Zevkinize göre diğer modellere de göz atabilirsiniz. 
&lt;ol&gt;
	&lt;li&gt;
Önce sbt proje sınıfımıza(HelloProject.scala) scalate için gerekli olan tanımları(&lt;em&gt;&quot;org.fusesource.scalate&quot; % &quot;scalate-core&quot; % &quot;1.2&quot;&lt;/em&gt;) yapmamız gerekiyor. Ayrıca, jetty'nin portunu nasıl değiştirebileceğimizide görelim.

[cc lang=&quot;scala&quot;]
import sbt._

class HelloProject(info: ProjectInfo) extends DefaultWebProject(info)
{
     val jettyPort = 8090

    override def libraryDependencies = Set(
        &quot;org.fusesource.scalate&quot; % &quot;scalate-core&quot; % &quot;1.2&quot;,
        &quot;javax.servlet&quot; % &quot;servlet-api&quot; % &quot;2.5&quot; % &quot;provided&quot;
        &quot;org.mortbay.jetty&quot; % &quot;jetty&quot; % &quot;6.1.22&quot; % &quot;test-&amp;gt;default&quot;
    ) ++ super.libraryDependencies
}
[/cc]

Proje ile değişiklikler yaptıktan sonra &lt;strong&gt;sbt update&lt;/strong&gt; komutunu çalıştırmayı unutmayın.
       &lt;/li&gt;
	&lt;li&gt;
Şimdi &lt;strong&gt;web.xml&lt;/strong&gt; dosyamızda Servlet Filter'ı tanımlamamız gerekiyor.
[cc lang=&quot;xml&quot;]

  &lt;!-- START: Scalate config --&gt;
  &lt;servlet&gt;
    &lt;servlet-name&gt;TemplateEngineFilter&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.fusesource.scalate.servlet.TemplateEngineServlet&lt;/servlet-class&gt;
  &lt;/servlet&gt;
  &lt;servlet-mapping&gt;
    &lt;servlet-name&gt;TemplateEngineFilter&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.ssp&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt;
  &lt;!-- END: Scalate config --&gt;
[/cc]
       &lt;/li&gt;
	&lt;li&gt;
Şimdi son olarak &lt;strong&gt;index.ssp&lt;/strong&gt; dosyamızı yazalım. SSP ile ilgili daha detaylı örnek arayanlar &lt;a href=&quot;https://github.com/scalate&quot;&gt;scalate'in github hesabından&lt;/a&gt; &lt;a href=&quot;https://github.com/scalate/scalate/tree/master/samples/scalate-sample&quot;&gt;örnek kodları&lt;/a&gt; inceleyebilir.
[cc lang=&quot;scala&quot;]
&lt;html&gt;
    &lt;head&gt;
    &lt;title&gt;Scala Server Pages&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
&lt;%
    var username: String = &quot;&quot;;
    if (request.getMethod().equals(&quot;POST&quot;)) {
        username = request.getParameter(&quot;username&quot;)
        out.println(&quot;Hello, &quot;+username);
    }    
%&gt;
        &lt;form method=&quot;post&quot;&gt;
            &lt;input type=&quot;text&quot; name=&quot;username&quot; value=&quot;${username}&quot;/&gt;
            &lt;input type=&quot;submit&quot; value=&quot;Ok&quot; /&gt;
        &lt;/form&gt;
    &lt;/body&gt;
&lt;/html&gt;
[/cc]
       &lt;/li&gt;
&lt;/ol&gt;

Böylece bir Scala Server Page koduda yazmış olduk.

&lt;h5&gt;Kaynak Kod&lt;/h5&gt;
Örnek uygulamanın kaynak kodlarına aşağıdaki linkten erişebilirsiniz.
&lt;a href=&quot;http://hasanozgan.com/wp-content/uploads/2011/02/HelloWeb.tgz&quot;&gt;Scala Web Uygulaması Kaynak Kodları&lt;/a&gt;

Özetleyecek olursak, Sbt ile Scala projesi yaratma ve basit web uygulamarı yazmayı adımlarını görmüş olduk. Benim için bu yazı gerçekten yorucu ve uzun oldu, umarım işinize yaramıştır. Bir sonraki yazımızda ise veritabanı işlemlerinden söz etmeyi planlıyorum. RDBMS (mySQL) ve NOSQL (mongoDB) örnekleri içeren bir yazı olacak. Bu hafta veritabanı işlemlerine de bir giriş yaptıktan sonra, Lift Web Framework ile adım adım örnek bir web uygulaması geliştireceğiz.. (Benim aklımdan Grupon yada Hacker News klonu yapmak geçiyor. Eğer başka bir öneriniz varsa lütfen benimle paylaşın)
</content>
 </entry>
 
 <entry>
   <title>Scala'ya Giriş</title>
   <link href="http://hasanozgan.com/blog/2011/02/06/scalaya-giris"/>
   <updated>2011-02-06T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2011/02/06/scalaya-giris</id>
   <content type="html">Uzun zamandır Scala ile ilgili bir yazı dizisi yazma planım vardı. Yoğunluğum nedeniyle bugüne kısmetmiş ama bir miktar paslandığımı itiraf etmeliyim. Bu yıl daha çok ölçeklenebilirlik üzerine &lt;a href=&quot;http://www.hasanozgan.com/2010/12/yeni-yilda-olceklenebilirlik-uzerine-planlar/&quot;&gt;yazılar yazmak istediğimi dile getirmiştim&lt;/a&gt;.

Ölçeklenebilirlik konulu yazılarımın aslına bakarsanız merkezinde &lt;a href=&quot;http://scala-lang.org&quot;&gt;scala programlama dili&lt;/a&gt; olacak. İşin web bacağında lift web framework, dağınık haberleşme mimarilerinde (akka), ve dağınık veri tabanları konusunda (noSQL) özellikle MongoDB'den bolca konuşacağız.

Scala ile ilk kez tanışacaklar için Scala, ruby, java, c++ karışımı bir dil gibidir. Nasıl bir yazım biçimi olduğunu merak edenler için aşağıda bir hello-world programı yazdım.

[cc lang=&quot;scala&quot;]
object HelloWorld {
    def main(args: Array[String]) {
        println(&quot;Hello, world!&quot;)
    }
}
[/cc]

Bu yazım biçimi bana yetmez diyenler &lt;a href=&quot;http://www.scala-lang.org/node/166&quot;&gt;şu adresten&lt;/a&gt; daha fazla kod örneği bulabilirler.

Scala'nın özelliklerine hızlıca bir bakacak olursak;
&lt;ul&gt;
	&lt;li&gt;Hem bir betik (script) dili, hem de derlenebilme özelliği olan bir dildir.&lt;/li&gt;
	&lt;li&gt;Scala derleyicileri kaynak kodunuzu, Java ve/veya &lt;a href=&quot;http://hestia.typepad.com/flatlander/2009/01/getting-started-with-scala-on-net.html&quot;&gt;.NET&lt;/a&gt; mimarilerine göre derlenebilir.&lt;/li&gt;
	&lt;li&gt;Dil, özellikle ölçeklenebilirlik alanına yönelik güçlü bir dildir.&lt;/li&gt;
	&lt;li&gt;Scala diliyle yazdığınız kodları deneyebilmeniz için CLI özelliğide bulunmaktadır.&lt;/li&gt;
&lt;/ul&gt;
Scala diliyle ilgili türkçe bir kitap hazırlığı içindeyim. Ücretsiz dağıtmayı düşündüğüm bu kitaba &lt;a href=&quot;http://hasanozgan.com/belgeler/scala-rehberi&quot;&gt;adresinden&lt;/a&gt; ulaşabileceksiniz.

&lt;h5&gt;Geliştirme Ortamı&lt;/h5&gt;
Scala derleyicileri, kodları derlediğinde JVM mimarisine dönüştüğü için Java araçlarıyla tam uyumludur. Java'daki birçok teknolojiyi kullanabilirsiniz.

Scala'nın bir CLI(command-line interpreter) arayüzü olduğunu söylemiştim. gelin hızlıca Scala ile birşeyler yazalım.
[cc lang=&quot;bash&quot;]
$ scala
This is an interpreter for Scala.
Type in expressions to have them evaluated.
Type :help for more information.

scala&gt; 

# Example 1
scala&gt; 1 + 2
unnamed0: Int = 3

# Example 2
scala&gt; unnamed0 * 3
unnamed1: Int = 9

# Example 3
scala&gt; println(&quot;Hello, world!&quot;)
Hello, world!
unnamed2: Unit = ()
[/cc]

Scala'ya daha fazla giriş yapmak için :) artima sitesindeki &lt;a href=&quot;http://www.artima.com/scalazine/articles/steps.html&quot;&gt;First Step to Scala&lt;/a&gt; yazısını tavsiye ederim.

Scala'yı popüler programlama editörleri &lt;a href=&quot;https://lampsvn.epfl.ch/trac/scala/browser/scala-tool-support/trunk/src/vim&quot;&gt;Vim&lt;/a&gt; ve &lt;a href=&quot;https://lampsvn.epfl.ch/trac/scala/browser/scala-tool-support/trunk/src/emacs&quot;&gt;Emacs&lt;/a&gt; ile yazabileceğiniz gibi, popüler Java IDEleri (&lt;a href=&quot;http://wiki.netbeans.org/Scala&quot;&gt;Netbeans&lt;/a&gt;, &lt;a href=&quot;http://scala-ide.org&quot;&gt;Eclipse&lt;/a&gt;, I&lt;a href=&quot;http://plugins.intellij.net/plugin/?id=1347&quot;&gt;ntellij IDEA CE&lt;/a&gt;) ile yazabilirsiniz. Ben tercihimi Eclipse'ten yana kullandığımı ama Intellij'nin eklentisinin gerçekten başarılı olduğunuda belirtmeliyim. Maalesef Netbeans nasıl hiçbir fikrim yok ama Lift Framework'un yaratıcısı Netbeans'ı kullandığına dair 1-2 yazıya rastlamıştım. Kısacası burada karar size kalıyor.

&lt;h5&gt;Java ile Scala Arasındaki Farklar&lt;/h5&gt;
Java ile Scala arasındaki farkları &lt;a href=&quot;http://blogs.sun.com/sundararajan/entry/scala_for_java_programmers&quot;&gt;şuradaki yazıda &lt;/a&gt;bulabilirsiniz. Ayrıca hemen aşağıda bu konuda bulduğumu sunumuda inceleyebilirsiniz.
&lt;div style=&quot;width:425px&quot; id=&quot;__ss_1856620&quot;&gt;&lt;strong style=&quot;display:block;margin:12px 0 4px&quot;&gt;&lt;a href=&quot;http://www.slideshare.net/davetron5000/scala-for-java-developers-intro&quot; title=&quot;Scala for Java Developers - Intro&quot;&gt;Scala for Java Developers - Intro&lt;/a&gt;&lt;/strong&gt;&lt;object id=&quot;__sse1856620&quot; width=&quot;425&quot; height=&quot;355&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=scala-090813141457-phpapp02&amp;stripped_title=scala-for-java-developers-intro&amp;userName=davetron5000&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot;/&gt;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot;/&gt;&lt;embed name=&quot;__sse1856620&quot; src=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=scala-090813141457-phpapp02&amp;stripped_title=scala-for-java-developers-intro&amp;userName=davetron5000&quot; type=&quot;application/x-shockwave-flash&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; width=&quot;425&quot; height=&quot;355&quot;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;div style=&quot;padding:5px 0 12px&quot;&gt;View more &lt;a href=&quot;http://www.slideshare.net/&quot;&gt;presentations&lt;/a&gt; from &lt;a href=&quot;http://www.slideshare.net/davetron5000&quot;&gt;David Copeland&lt;/a&gt;.&lt;/div&gt;&lt;/div&gt;
&lt;br/&gt;
&lt;h5&gt;Scala Araçları (birkaç iyi oyuncak)&lt;/h5&gt;
&lt;h6&gt;SBT (Simple Build Tool)&lt;/h6&gt;
Scala ile Java teknolojilerinin tümünden faydalanabileceğinizden yukarıda söz etmiştim. Scala programcıları ilk zamanlar Maven kullansalarda, sonraları &lt;a href=&quot;http://code.google.com/p/simple-build-tool&quot;&gt;Simple Build Tool&lt;/a&gt; (aka SBT) isimli çok tatlı bir yapılandırma aracı kullanılmaya başlandı. Bu araçla yapılandırma işlemlerinizi, Scala diliyle yapabiliyorsunuz. Arkada, ivy ve maven kullanan bu başarılı araç için aynı maven'da olduğu gibi hızlıca eklentilerde yazabiliyorsunuz.

Örneğin ben proje kodumu sbt ile build edecek şekilde hazırlayıp. Buradan da &lt;a href=&quot;https://github.com/musk/SbtEclipsify&quot;&gt;Eclipsify&lt;/a&gt; isimli SBT eklentisi ile eclipse projesini yaratıyorum. Ayrıca SBT'yi, Eclipse içinden kullanmak &lt;a href=&quot;https://github.com/frank06/sbt-eclipse-plugin&quot;&gt;şuradan&lt;/a&gt; ekletiye ulaşabilirsiniz.

&lt;h6&gt;Scalatra Web Framework&lt;/h6&gt;
&lt;a href=&quot;https://github.com/scalatra/scalatra#readme&quot;&gt;Scalatra&lt;/a&gt; eskiden Step olarak anılan ve Ruby Sinatraya benzeyen bir web çatısı. Küçük projeler için hızlı uygulama yazmayı amaçlayanlar için iş görebilir. Ama daha çok fazla yolu olduğunu eklemekte fayda var. Aşağıda adından söz edeceğim Lift framework'e kıyasla çok eksiği bulunuyor.

&lt;h6&gt;Lift Web Framework&lt;/h6&gt;
&lt;a href=&quot;http://blog.lostlake.org/&quot;&gt;David Pollak&lt;/a&gt; (a.k.a &lt;a href=&quot;http://twitter.com/dpp&quot;&gt;@dpp&lt;/a&gt;) tarafından yazılan web çatısıdır. David, framework'u hazırlarken birçok frameworkü incelemiş ve uygun gördüğü özelliklerini &lt;a href=&quot;http://liftweb.net&quot;&gt;Lift Web Framework&lt;/a&gt;'e dahil etmiştir. Bugün en büyük referansı Foursquare olarak verilebilir. Yeni versiyonlarla MVC patterni kullanılarak web projeleri yazılabilse de aslında bileşen (Snippet) mimarisine dayanır. Kendi içinde ORM gibi birçok alt proje bulunduğunu iletmekte yarar var. 

Lift &lt;a href=&quot;http://seventhings.liftweb.net/&quot;&gt;&quot;Seven Thins&quot;&lt;/a&gt; isimli sayfasına girerek diğer frameworklere kıyasla yarattığı farkların neler olduğunu görebilirsiniz.

&lt;a href=&quot;http://liftweb.net&quot;&gt;Lift Framework&lt;/a&gt;'ün belgelemesi gerçekten iyidir. Biri David Pollak tarafından olmak üzere iki özgür kitap projesi bulunmaktadır. Bunlar;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://simply.liftweb.net/&quot;&gt;Simply Lift&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://exploring.liftweb.net/&quot;&gt;Exploring Lift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

Lift projesinin kaynak kodlarına ve örnek uygulamalarına &lt;a href=&quot;http://github.com/lift&quot;&gt;Github üzerinde bulunan adresinden&lt;/a&gt; erişebilirsiniz.

Scala dili ile ilgili başlangıç sorularınıza umarım cevaplar verebilmişimdir. Scala gerçekten eğlenceli ama bir o kadarda detaylı bir dil. Oracle'ın Sun'ı satın aldıktan sonra yapacakları belirsizliğini korurken bu konuda bir B planı olması bence gerçekten çok rahatlatıcı. Eğer sizde Scala ile birşeyler yapmayı düşünüyor ve kendinizi yalnız hissediyorsanız, &lt;a href=&quot;http://scala-tr.org&quot;&gt;Scala Türkiye&lt;/a&gt; ekibine katılabilirsiniz. Topluluk bu konuda etkinlikler yaparak faliyetlerine çok kısa bir süre içerisinde başlayacaktır.

Bir sonraki yazımızda elinizi Scala'ya bulamaya hazır olun. Scala diliyle framework kullanmadan Web dünyasına giriş yapacağız. 
&lt;br/&gt;
</content>
 </entry>
 
 <entry>
   <title>Yeni Yılda Ölçeklenebilirlik Üzerine Planlar</title>
   <link href="http://hasanozgan.com/blog/2010/12/31/yeni-yilda-olceklenebilirlik-uzerine-planlar"/>
   <updated>2010-12-31T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2010/12/31/yeni-yilda-olceklenebilirlik-uzerine-planlar</id>
   <content type="html">2011 yılına girerken, bu blogun daha aktif yazılarla karşınızda olmasını planlıyorum. Yazılarım arasında Java ve Scala dilleri kullanılarak gerçekleştirilen NoSQL uygulamaları, ve Distributed Computing kütüphanleri ve gerçek hayatta kullanılan mimariler &lt;a href=&quot;http://scalability.in/web&quot; target=&quot;_blank&quot;&gt;Scalability.in/web&lt;/a&gt; adresinde yer alacak. Bu adreste ise eskisi gibi yazılım ve bilişim dünyasındaki daha insancıl konular ve girişimcilik üzerine yazılar yazmaya devam edeceğim.

Eğer bu gibi konulardan hoşlanıyor ve/veya ilgileniyorsanız, aşağıda paylaştığım sunum ve makaleler ilginizi çekebilir.

Hepinize, umutlar ve mutlulukların eksik olmayacağı bir yıl dilerim!...

&lt;strong&gt;Makaleler;&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://techpack.acm.org/cloud/cloud_computing.pdf&quot;&gt;Cloud Computing&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://techpack.acm.org/parallel/JourneymanTour.pdf&quot;&gt;Parallel Processing&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Sunumlar;&lt;/strong&gt;
&lt;div id=&quot;__ss_4062682&quot; style=&quot;width: 425px;&quot;&gt;&lt;strong style=&quot;display: block; margin: 12px 0 4px;&quot;&gt;&lt;a title=&quot;Scalability, Availability &amp;amp; Stability Patterns&quot; href=&quot;http://www.slideshare.net/jboner/scalability-availability-stability-patterns&quot;&gt;Scalability, Availability &amp;amp; Stability Patterns&lt;/a&gt;&lt;/strong&gt;&lt;object id=&quot;__sse4062682&quot; classid=&quot;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&quot; width=&quot;425&quot; height=&quot;355&quot; codebase=&quot;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&quot;&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot; /&gt;&lt;param name=&quot;src&quot; value=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=scalabilitypatterns20100510-100512004526-phpapp02&amp;amp;stripped_title=scalability-availability-stability-patterns&amp;amp;userName=jboner&quot; /&gt;&lt;param name=&quot;name&quot; value=&quot;__sse4062682&quot; /&gt;&lt;param name=&quot;allowfullscreen&quot; value=&quot;true&quot; /&gt;&lt;embed id=&quot;__sse4062682&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;425&quot; height=&quot;355&quot; src=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=scalabilitypatterns20100510-100512004526-phpapp02&amp;amp;stripped_title=scalability-availability-stability-patterns&amp;amp;userName=jboner&quot; name=&quot;__sse4062682&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/embed&gt;&lt;/object&gt;
&lt;div style=&quot;padding: 5px 0 12px;&quot;&gt;View more &lt;a href=&quot;http://www.slideshare.net/&quot;&gt;presentations&lt;/a&gt; from &lt;a href=&quot;http://www.slideshare.net/jboner&quot;&gt;jboner&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;__ss_2688678&quot; style=&quot;width: 425px;&quot;&gt;&lt;strong style=&quot;display: block; margin: 12px 0 4px;&quot;&gt;&lt;a title=&quot;The Anatomy Of The Google Architecture Fina Lv1.1&quot; href=&quot;http://www.slideshare.net/hasanveldstra/the-anatomy-of-the-google-architecture-fina-lv11&quot;&gt;The Anatomy Of The Google Architecture Fina Lv1.1&lt;/a&gt;&lt;/strong&gt;&lt;object id=&quot;__sse2688678&quot; classid=&quot;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&quot; width=&quot;425&quot; height=&quot;355&quot; codebase=&quot;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&quot;&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot; /&gt;&lt;param name=&quot;src&quot; value=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=theanatomyofthegooglearchitecturefinalv1-1-091210035101-phpapp02&amp;amp;stripped_title=the-anatomy-of-the-google-architecture-fina-lv11&amp;amp;userName=hasanveldstra&quot; /&gt;&lt;param name=&quot;name&quot; value=&quot;__sse2688678&quot; /&gt;&lt;param name=&quot;allowfullscreen&quot; value=&quot;true&quot; /&gt;&lt;embed id=&quot;__sse2688678&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;425&quot; height=&quot;355&quot; src=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=theanatomyofthegooglearchitecturefinalv1-1-091210035101-phpapp02&amp;amp;stripped_title=the-anatomy-of-the-google-architecture-fina-lv11&amp;amp;userName=hasanveldstra&quot; name=&quot;__sse2688678&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/embed&gt;&lt;/object&gt;
&lt;div style=&quot;padding: 5px 0 12px;&quot;&gt;View more &lt;a href=&quot;http://www.slideshare.net/&quot;&gt;presentations&lt;/a&gt; from &lt;a href=&quot;http://www.slideshare.net/hasanveldstra&quot;&gt;Hasan Veldstra&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;__ss_40959&quot; style=&quot;width: 425px;&quot;&gt;&lt;strong style=&quot;display: block; margin: 12px 0 4px;&quot;&gt;&lt;a title=&quot;Scalable Web Architectures: Common Patterns and Approaches&quot; href=&quot;http://www.slideshare.net/techdude/scalable-web-architectures-common-patterns-and-approaches&quot;&gt;Scalable Web Architectures: Common Patterns and Approaches&lt;/a&gt;&lt;/strong&gt;&lt;object id=&quot;__sse40959&quot; classid=&quot;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&quot; width=&quot;425&quot; height=&quot;355&quot; codebase=&quot;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&quot;&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot; /&gt;&lt;param name=&quot;src&quot; value=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=scalable-web-architectures-common-patterns-and-approaches-9562&amp;amp;stripped_title=scalable-web-architectures-common-patterns-and-approaches&amp;amp;userName=techdude&quot; /&gt;&lt;param name=&quot;name&quot; value=&quot;__sse40959&quot; /&gt;&lt;param name=&quot;allowfullscreen&quot; value=&quot;true&quot; /&gt;&lt;embed id=&quot;__sse40959&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;425&quot; height=&quot;355&quot; src=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=scalable-web-architectures-common-patterns-and-approaches-9562&amp;amp;stripped_title=scalable-web-architectures-common-patterns-and-approaches&amp;amp;userName=techdude&quot; name=&quot;__sse40959&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/embed&gt;&lt;/object&gt;
&lt;div style=&quot;padding: 5px 0 12px;&quot;&gt;View more presentations from &lt;a href=&quot;http://www.slideshare.net/techdude&quot;&gt;techdude&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;__ss_39717&quot; style=&quot;width: 425px;&quot;&gt;&lt;strong style=&quot;display: block; margin: 12px 0 4px;&quot;&gt;&lt;a title=&quot;High performance web sites&quot; href=&quot;http://www.slideshare.net/techdude/high-performance-web-sites&quot;&gt;High performance web sites&lt;/a&gt;&lt;/strong&gt;&lt;object id=&quot;__sse39717&quot; classid=&quot;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&quot; width=&quot;425&quot; height=&quot;355&quot; codebase=&quot;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&quot;&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot; /&gt;&lt;param name=&quot;src&quot; value=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=high-performance-web-sites-4352&amp;amp;stripped_title=high-performance-web-sites&amp;amp;userName=techdude&quot; /&gt;&lt;param name=&quot;name&quot; value=&quot;__sse39717&quot; /&gt;&lt;param name=&quot;allowfullscreen&quot; value=&quot;true&quot; /&gt;&lt;embed id=&quot;__sse39717&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;425&quot; height=&quot;355&quot; src=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=high-performance-web-sites-4352&amp;amp;stripped_title=high-performance-web-sites&amp;amp;userName=techdude&quot; name=&quot;__sse39717&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/embed&gt;&lt;/object&gt;
&lt;div style=&quot;padding: 5px 0 12px;&quot;&gt;View more presentations from &lt;a href=&quot;http://www.slideshare.net/techdude&quot;&gt;techdude&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;__ss_545001&quot; style=&quot;width: 425px;&quot;&gt;&lt;strong style=&quot;display: block; margin: 12px 0 4px;&quot;&gt;&lt;a title=&quot;7 Stages of Scaling Web Applications&quot; href=&quot;http://www.slideshare.net/davemitz/7-stages-of-scaling-web-applications&quot;&gt;7 Stages of Scaling Web Applications&lt;/a&gt;&lt;/strong&gt;&lt;object id=&quot;__sse545001&quot; classid=&quot;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&quot; width=&quot;425&quot; height=&quot;355&quot; codebase=&quot;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&quot;&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot; /&gt;&lt;param name=&quot;src&quot; value=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=linuxworld-1218083370681251-9&amp;amp;stripped_title=7-stages-of-scaling-web-applications&amp;amp;userName=davemitz&quot; /&gt;&lt;param name=&quot;name&quot; value=&quot;__sse545001&quot; /&gt;&lt;param name=&quot;allowfullscreen&quot; value=&quot;true&quot; /&gt;&lt;embed id=&quot;__sse545001&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;425&quot; height=&quot;355&quot; src=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=linuxworld-1218083370681251-9&amp;amp;stripped_title=7-stages-of-scaling-web-applications&amp;amp;userName=davemitz&quot; name=&quot;__sse545001&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/embed&gt;&lt;/object&gt;
&lt;div style=&quot;padding: 5px 0 12px;&quot;&gt;View more &lt;a href=&quot;http://www.slideshare.net/&quot;&gt;presentations&lt;/a&gt; from &lt;a href=&quot;http://www.slideshare.net/davemitz&quot;&gt;David Mitzenmacher&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;__ss_4798642&quot; style=&quot;width: 425px;&quot;&gt;&lt;strong style=&quot;display: block; margin: 12px 0 4px;&quot;&gt;&lt;a title=&quot;Akka - Scala Summit OSCON 2010&quot; href=&quot;http://www.slideshare.net/jboner/akka-scala-summit-oscon-2010&quot;&gt;Akka - Scala Summit OSCON 2010&lt;/a&gt;&lt;/strong&gt;&lt;object id=&quot;__sse4798642&quot; classid=&quot;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&quot; width=&quot;425&quot; height=&quot;355&quot; codebase=&quot;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&quot;&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot; /&gt;&lt;param name=&quot;src&quot; value=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=akkaoscon2010-100720144637-phpapp01&amp;amp;stripped_title=akka-scala-summit-oscon-2010&amp;amp;userName=jboner&quot; /&gt;&lt;param name=&quot;name&quot; value=&quot;__sse4798642&quot; /&gt;&lt;param name=&quot;allowfullscreen&quot; value=&quot;true&quot; /&gt;&lt;embed id=&quot;__sse4798642&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;425&quot; height=&quot;355&quot; src=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=akkaoscon2010-100720144637-phpapp01&amp;amp;stripped_title=akka-scala-summit-oscon-2010&amp;amp;userName=jboner&quot; name=&quot;__sse4798642&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/embed&gt;&lt;/object&gt;
&lt;div style=&quot;padding: 5px 0 12px;&quot;&gt;View more &lt;a href=&quot;http://www.slideshare.net/&quot;&gt;presentations&lt;/a&gt; from &lt;a href=&quot;http://www.slideshare.net/jboner&quot;&gt;jboner&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>jAvatar - Kavanoz Bükme Procesi</title>
   <link href="http://hasanozgan.com/blog/2010/12/21/javatar-kavanoz-bukme-procesi"/>
   <updated>2010-12-21T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2010/12/21/javatar-kavanoz-bukme-procesi</id>
   <content type="html">Linux terminalde çalışırken, aradığınız bir sınıfın $CLASSPATH'teki hangi jar dosyasında olduğunu bulmanızı sağlar.

Bash programlama hakkında çok fazla bilgiye sahip değilim. Konunun uzmanlarından güzel fikirler ve düzeltmeler bekliyorum. (-: Kısacası geliştirmeye açıktır. İstediğiniz gibi kodu evirip çevirip bu oyuncakla oynayabilir, yeni kavanoz bükme tekniklerini paylaşabilirsiniz. 

&lt;strong&gt;Kullanım şekli;
&lt;/strong&gt;&lt;em&gt;$ javatar &amp;lt;className&amp;gt;
&lt;/em&gt;
&lt;pre name=&quot;code&quot; class=&quot;code&quot; style=&quot;font-size:0.9em&quot;&gt;
#!/bin/bash
echo -ne &quot;\033[1mjAvatar ver. 1.0.3 (by meddah)\n\033[0m&quot;;
echo -ne &quot;May the 'Jar Bender' force be with you!\n&quot;;

export source=$1
files=();
classes=();

#resolver
for file in `echo $CLASSPATH|tr &quot;:&quot; &quot;\n&quot;|grep -i jar`;
do
    for class in `jar -tvf $file|awk '{print $8}'|grep -e $source`;
    do
        if [[ $files != *$file* ]]; then
            files+=&quot;$file &quot;;
        fi

        classes+=&quot;$file:$class &quot;;
    done
done

#dispatcher
for file in $files; do
    echo -e &quot;\033[1m$file\033[0m&quot;;

    for class in $classes; do
        if [[ $class == *$file* ]]
        then
            echo -n &quot;    &quot;;
            echo $class|tr &quot;:&quot; &quot; &quot;|awk '{print $2}';
        fi
    done
done

echo -ne &quot;\n&quot;;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>HTC Desire için Android 2.2 (Froyo) Güncellemesi</title>
   <link href="http://hasanozgan.com/blog/2010/09/11/htc-desire-icin-android-2-2-froyo-guncellemesi"/>
   <updated>2010-09-11T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2010/09/11/htc-desire-icin-android-2-2-froyo-guncellemesi</id>
   <content type="html">iPhone'nun kendince koyduğu saçma kurallardan gerçekten o kadar bunaldım ki, yaklaşık 3-4 ay önce HTC Desire satın aldım. Android birçok yönden gerçekten de özgür bir platform ve mobil yaşam sunuyor. Android 2.2 sürümü ile beraber özgürlük başka bir boyut kazandı. Peki, Android 2.2 neler &lt;a href=&quot;http://developer.android.com/sdk/android-2.2-highlights.html&quot;&gt;getiriyor&lt;/a&gt;;
&lt;ul&gt;
	&lt;li&gt;Flash 10.1 desteği&lt;/li&gt;
	&lt;li&gt;Portable Wi-fi hotspot.&lt;/li&gt;
	&lt;li&gt;Çok dilli klavye&lt;/li&gt;
	&lt;li&gt;Performans iyileştirmeleri (JiT Compiler, Kernel vb..)&lt;/li&gt;
	&lt;li&gt;Google uygulamalarının güncellemeleri&lt;/li&gt;
	&lt;li&gt;Radyo güncellemesi&lt;/li&gt;
	&lt;li&gt;Yeni Android geliştirici özellikleri (push sync, hata bildirimi gibi)&lt;/li&gt;
	&lt;li&gt;Exchange desteği&lt;/li&gt;
	&lt;li&gt;Kamera ve galeri ile ilgili değişiklikler&lt;/li&gt;
	&lt;li&gt;Daha uzun batarya ömrü.&lt;/li&gt;
&lt;/ul&gt;
Yukarıda sayılan özellikler gerçekten iştah açıcı. Bu sebeple lafı çok uzatmadan, HTC Sense arabirimini koruyarak güncelleme yapabileceğinizi anlatacağım.

&lt;em&gt;&lt;strong&gt;Aşağıda anlatılan işlem sırasında telefonunuza birşey olursa tüm sorumluluk size aittir!&lt;/strong&gt;&lt;/em&gt;

&lt;em&gt;Peki şimdi işe başlayalım;&lt;/em&gt;
&lt;ul&gt;
	&lt;li&gt;Öncelikle yedeklerinizi alın, çünkü tüm bilgileriniz SİLİNECEK!.. (Yedeklerinizi almak için HTC Sync ya da Google Sync kullanabilirsiniz)&lt;/li&gt;
	&lt;li&gt;Yedeklerinizi aldıktan sonra ilk yapmamız gereken, Recovery moda geçmek için, Mikro SD kartımızı &lt;strong&gt;Goldcard&lt;/strong&gt; denilen bir biçime çevirmek.
&lt;ul&gt;
	&lt;li&gt;Android SDK'yı &lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;şuradan&lt;/a&gt; indirip, kurmanız yeterli.&lt;/li&gt;
	&lt;li&gt;Micro SD kartınızın takılı olduğu Desire’ınızı bilgisayarınıza bağlayın ve Settings/Applications/Development/USB Debugging Mode‘u aktif olarak işaretleyin.&lt;/li&gt;
	&lt;li&gt;Komut satırına geçtiğinizde, /tools dizininde adb isimli bir uygulama göreceksiniz. Öncelikle, &quot;adb devices&quot; komutu ile cihazın seri numarasını kontrol edin. Eğer bunu görmüyorsanız birşeyler yanlış demektir.&lt;/li&gt;
	&lt;li&gt;”adb shell cat /sys/class/mmc_host/mmc1/mmc1:*/cid“ komutunu çalıştırın. Karşınıza şunun gibi (022600bd227d9c0447322407092d5324) uzun bir numara çıkacak.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://hexrev.soaa.me/&quot;&gt;http://hexrev.soaa.me/&lt;/a&gt; adresine gidin ve bu uzun kodu tersine çevirin.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://psas.revskills.de/?q=goldcard&quot;&gt;http://psas.revskills.de/?q=goldcard&lt;/a&gt; adresine giderek tersine çevirdiğiniz numarayı ve kendi geçerli e-mailinizi girerek goldcard.img dosyasını edinin. Dosya e-mail adresinize gelecek.&lt;/li&gt;
	&lt;li&gt;Şimdi image dosyamızı MikroSD kartımıza yazmamız gerekiyor.
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;Mac OS X ya da Linux kullanıyorsanız;&lt;/strong&gt;&lt;/li&gt;
	&lt;li&gt;Komut satırına geçin.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;&quot;diskutil list&quot; &lt;/strong&gt;komutu ile HTC Desire telefonunuzdaki SD kartı görüp görmediğinizi kontrol edin. DOS_FAT_32 olarak tanımlı olan kısmı kullanacaksınız. Diyelim ki örneğimizde bu /dev/disk2 olsun.&lt;/li&gt;
	&lt;li&gt;Daha sonra SD kartınızı unmount edin. Bunun için &lt;strong&gt;&quot;diskutil unmountDisk /dev/disk2&quot;&lt;/strong&gt; komutunu çalıştırabilirsiniz.&lt;/li&gt;
	&lt;li&gt;Şimdi goldcard'ımızı oluşturalım. Bunun için &lt;strong&gt;&quot;sudo dd bs=512 if=~/goldcard.img of=/dev/disk2&quot;&lt;/strong&gt; komutunu çalıştırmamız yeterli. Unutmayın disk2 sizde farklı bir numaraya sahip olabilir.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;Windows kullanıyorsanız;&lt;/strong&gt;&lt;/li&gt;
	&lt;li&gt;HxD isimli Hex editörü indirin, &lt;a href=&quot;http://download.cnet.com/3001-20_4-10891068.html?spi=de6596f3025d2a1f103d2e6f7728b7be&quot;&gt;bu linkten indirebilirsiniz&lt;/a&gt;.&lt;/li&gt;
	&lt;li&gt;HxD yi bilgisayarınıza kurun ve çalıştırın. Windows Vista ya da 7 kullanıyorsanız “Yönetici Olarak Çalıştır” ile açın.&lt;/li&gt;
	&lt;li&gt;“Extra” sekmesinden “Open Disk” i seçin. “Physical Disk” (burası önemli, mutlaka physical olmalı) seçeneği altından, “Removable Disk” i seçin ve “Open as ReadOnly” seçeneğindeki işareti KALDIRIN ve OK e basın.&lt;/li&gt;
	&lt;li&gt;Tekrar “Extra” menüsüne gelin ve “Open Disk Image” i seçin. Size e-mail ile gelen goldcard.img dosyasını seçin ve açın. Şimdi iki farklı sekme görmeniz gerekli, biri “Removable Disk” ya da SD kart, diğeri ise “goldcard.img” olmalı. “Sector Size” 512 (Hard disks/Floppy disks) şeklinde uyarı aldığınızda OK‘e basın.&lt;/li&gt;
	&lt;li&gt;“goldcard.img” sekmesine tıklayın, “Edit” menüsünden “Select All” deyin ve yine Edit menüsünden “Copy” deyin.&lt;/li&gt;
	&lt;li&gt;“Removable disk” sekmesine tıklayın. Sıfırıncı satırdan 170 inci satıra kadar (170 de dahil) seçin ve Edit menüsünden “Paste Write” seçeneğine tıklayın.&lt;/li&gt;
	&lt;li&gt;“File” menüsünden “Save” e tıklayın ve editörü kapatın. Artık goldcardınız hazır.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt; Goldcard'ı hazırladıktan sonra &lt;a href=&quot;http://www.megaupload.com/?d=WUPI07UO&quot;&gt;HTC Sense ve Froyo 2.2'yi içeren güncelleme (ROM) dosyası&lt;/a&gt;nı ve &lt;a href=&quot;http://android.adamg.co.uk/bravo/radio/32.43.00.32U_5.09.00.20.zip&quot;&gt;radio uygulaması için gerekli olan dosyayı&lt;/a&gt; indirmeniz gerekmektedir. Her iki dosyayı MikroSD karta kopyaladıktan sonra &lt;em&gt;&lt;strong&gt;Official_FroYo_Market_fixed.zip&lt;/strong&gt;&lt;/em&gt; isimli dosyayı &lt;em&gt;&lt;strong&gt;update.zip&lt;/strong&gt;&lt;/em&gt; olarak değiştirmelisiniz!.&lt;/li&gt;
	&lt;li&gt;Şimdi yapmamız gereken &lt;em&gt;reflash&lt;/em&gt; işlemi için telefonumuzu &lt;em&gt;ClockworkMod&lt;/em&gt;'a geçirmek.
HTC ürünleri için tüm platformlarda çalışan ve Clockworkmod'a geçişi sağlayan bir &lt;a href=&quot;http://unrevoked.com/&quot;&gt;unrevoked&lt;/a&gt; adında bir uygulama mevcut. Bu uygulamayı kullanarak telefonu clockworkmod'a çevirmek mümkün. Uygulamalı olarak çevirme işlemini nasıl olacağını &lt;a href=&quot;http://www.youtube.com/watch?v=KkaQe-uim5k&amp;amp;feature=player_embedded#!&quot;&gt;youtube da bulunan video&lt;/a&gt;da izleyebilirsiniz.

Clockworkmod'a geçiş yaptıktan sonra yukleme işlemini tamamlamanızla birlikte işlem tamamlanmış olacaktır.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

Eğer clockworkmod'da iken sorunsuz bir şekilde kurulum işlemini yaptıysanız, telefonunuz yeniden başladığında Android 2.2 versiyonu ile başlayacak. İşte hepsi bu kadar. Froyo'nun güzellikleri şimdiden hayırlı olsun.

&lt;strong&gt;Kaynaklar:&lt;/strong&gt;
&lt;a href=&quot;http://theunlockr.com/2010/06/07/how-to-root-the-htc-desire/&quot;&gt;http://theunlockr.com/2010/06/07/how-to-root-the-htc-desire/&lt;/a&gt;
&lt;a href=&quot;http://theunlockr.com/2010/03/10/how-to-create-a-goldcard/&quot;&gt;http://theunlockr.com/2010/03/10/how-to-create-a-goldcard/&lt;/a&gt;
&lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;http://developer.android.com/sdk/index.html&lt;/a&gt;
&lt;a href=&quot;http://www.knowyourcell.com/htc/htc-desire/desire-guides/474135/how_to_root_the_htc_desire.html&quot;&gt;http://www.knowyourcell.com/htc/htc-desire/desire-guides/474135/how_to_root_the_htc_desire.html&lt;/a&gt;
&lt;a href=&quot;http://www.androidturkiye.info/2010/07/09/htc-desire-icin-root-clockworkmod-recovery-dj-droid-v1-0/&quot;&gt;http://www.androidturkiye.info/2010/07/09/htc-desire-icin-root-clockworkmod-recovery-dj-droid-v1-0/&lt;/a&gt;
&lt;a href=&quot;http://wiki.cyanogenmod.com/index.php?title=Full_Update_Guide_-_HTC_Desire&quot;&gt;http://wiki.cyanogenmod.com/index.php?title=Full_Update_Guide_-_HTC_Desire&lt;/a&gt;
&lt;a href=&quot;http://www.dkszone.net/unrevoked-root-htc-android-phones-evo-4gdesiredroid-incredible&quot;&gt;http://www.dkszone.net/unrevoked-root-htc-android-phones-evo-4gdesiredroid-incredible&lt;/a&gt;
&lt;a href=&quot;http://www.koushikdutta.com/2010/02/clockwork-recovery-image.html&quot;&gt;http://www.koushikdutta.com/2010/02/clockwork-recovery-image.html&lt;/a&gt;
</content>
 </entry>
 
 <entry>
   <title>Bir Web Çatısı (Framework) Anatomisi</title>
   <link href="http://hasanozgan.com/blog/2010/08/29/bir-web-catisi-framework-anatomisi"/>
   <updated>2010-08-29T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2010/08/29/bir-web-catisi-framework-anatomisi</id>
   <content type="html">2 yıldır PHP diliyle, &lt;a href=&quot;http://code.google.com/p/joy&quot;&gt;Joy&lt;/a&gt; isimli açık kaynak bir framework geliştiriyordum. Bu framework’e Joy adını vermemin başlıca nedeni, uygulama geliştirken gerçekten zevk vermesini istememden kaynaklanıyordu. Bu framework’un 5 farklı versiyonu mevcut ve hepsinde de farklı yaklaşımlar kullandım. İlk versiyonu Event Driven patterni kullanırken, sonraki sürümlerde MVC patterni ağırlıklıydı. Event driven yapısı ise sonraki sürümlerde Workflow amacıyla yaşam döngüsünde yerini almıştı.

Bu sure zarfında çok şey öğrendiğimi itiraf etmeliyim. Birkaç ay once, piyasada çok fazla başarılı framework olması nedeniyle bu amacımdan vazgeçtim. Web dünyasının distributed computing ve parallel programming gibi konularada ihtiyaçlarınıda göz önünde bulundurarak, PHP yerini, JAVA’ya bıraktı ve Java projelerimin vazgeçilmez aracı olarak yerini aldı.

Java’yı projelerimin merkezine yerleştikten sonra, bu ekosistemde, &lt;a href=&quot;http://code.google.com/p/joy&quot;&gt;Joy Framework&lt;/a&gt;’unde kullandığım fikirlerin sağlayacak araçları aramaya koyuldum. İlk zamanlar kaygılarım olsada J2EE ve Spring framework çevresinde aradığım herşeyi buldum. Aşağıda bu fikirleri ve Java dünyasındaki araçları bulacaksınız.
&lt;div class=&quot;maddeler&quot;&gt;
&lt;ul&gt;
	&lt;li&gt;URL Rewriter&lt;/li&gt;
	&lt;li&gt;Router (Dispatcher)&lt;/li&gt;
	&lt;li&gt;Core
&lt;ul&gt;
	&lt;li&gt;Config Management&lt;/li&gt;
	&lt;li&gt;Log Management &amp;amp; Debugging&lt;/li&gt;
	&lt;li&gt;Cache Management
&lt;ul&gt;
	&lt;li&gt;Distributed Cache&lt;/li&gt;
	&lt;li&gt;Locale Cache&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;Controller
&lt;ul&gt;
	&lt;li&gt;Filter&lt;/li&gt;
	&lt;li&gt;Workflow&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;Context
&lt;ul&gt;
	&lt;li&gt;Culture&lt;/li&gt;
	&lt;li&gt;User&lt;/li&gt;
	&lt;li&gt;Request&lt;/li&gt;
	&lt;li&gt;Response&lt;/li&gt;
	&lt;li&gt;Session&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;View
&lt;ul&gt;
	&lt;li&gt;Render&lt;/li&gt;
	&lt;li&gt;Template Engine&lt;/li&gt;
	&lt;li&gt;Tag Library&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;Model
&lt;ul&gt;
	&lt;li&gt;ORM&lt;/li&gt;
	&lt;li&gt;Persistence&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;Plugin
&lt;ul&gt;
	&lt;li&gt;Geolocation vb...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;Tools (Extra)
&lt;ul&gt;
	&lt;li&gt;Console Tool
&lt;ul&gt;
	&lt;li&gt;Code Generator&lt;/li&gt;
	&lt;li&gt;Deployment&lt;/li&gt;
	&lt;li&gt;Builder&lt;/li&gt;
	&lt;li&gt;Documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;Testing&lt;/li&gt;
	&lt;li&gt;Inversion of Control&lt;/li&gt;
	&lt;li&gt;Scaffolding&lt;/li&gt;
	&lt;li&gt;Scheduler&lt;/li&gt;
	&lt;li&gt;Authentication &amp;amp; Authorization
&lt;ul&gt;
	&lt;li&gt;OAuth&lt;/li&gt;
	&lt;li&gt;LDAP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;Client Side Library
&lt;ul&gt;
	&lt;li&gt; Javascript (jQuery)
&lt;ul&gt;
	&lt;li&gt;Cache&lt;/li&gt;
	&lt;li&gt;Cookie&lt;/li&gt;
	&lt;li&gt;Hotkeys&lt;/li&gt;
	&lt;li&gt;Lazy Including&lt;/li&gt;
	&lt;li&gt;Querystring&lt;/li&gt;
	&lt;li&gt;Comet&lt;/li&gt;
	&lt;li&gt;AJAX&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt; CSS Frameworks
&lt;ul&gt;
	&lt;li&gt;960gs, Blueprint&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
Yukarıda sözünü ettiğim konuları PHP ile  birçoğunu geliştirdim. xUnit, ORM , Library gibi kapsamlı konular için ise 3&lt;sup&gt;rd&lt;/sup&gt; parti araçları kullandım. Bu yönüyle Integrated Framework olarakta adlandırılabilir.

Hayatımın 2 yılı bu yapı üzerinde uygulamalar geliştiriken Java’ya geçince bir boşluğa düştüğümü ve paniklediğimi itiraf etmeliyim. Neyse ki Spring Framework ve Java’nın Servlet mimarisi beni ciddi rahatlattı. Java dünyasının üstadları yukarıdaki konularda daha once benim yerime kafa yormuş ve düşündüğüm birçok şeyi hayata geçirmişti. Şimdi gelin bu teknolojilerin neler olduğuna bir göz atalım. Sonrada Java’nın ve Spring’in gücüyle bir web çatısı nasıl olur onun güzel bir örneğini inceleyelim.
&lt;div class=&quot;maddeler&quot;&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/index-jsp-135475.html&quot;&gt;Java Servlet&lt;/a&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://java.sun.com/products/jsp/&quot;&gt;JSP&lt;/a&gt; ve &lt;a href=&quot;http://www.oracle.com/technetwork/java/index-jsp-135995.html&quot;&gt;JSTL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.springsource.org&quot;&gt;Spring&lt;/a&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://static.springsource.org/spring/docs/2.0.x/reference/mvc.html&quot;&gt;MVC&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://static.springsource.org/spring/docs/2.0.x/reference/beans.html&quot;&gt;Inversion of Container&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://static.springsource.org/spring-security/site/index.html&quot;&gt;ACEGİ (Spring Security)&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.springsource.org/webflow&quot;&gt;Web flow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://hibernate.org&quot;&gt;Hibernate&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.opensymphony.com/sitemesh/&quot;&gt;SiteMesh&lt;/a&gt;, &lt;a href=&quot;http://tiles.apache.org/&quot;&gt;Tiles&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.quartz-scheduler.org/&quot;&gt;Quartz Scheduler&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://logging.apache.org/log4j/&quot;&gt;Log4J&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://maven.apache.org/&quot;&gt;Maven&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://ehcache.org/&quot;&gt;EhCache&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.tuckey.org/urlrewrite/&quot;&gt;UrlRewrite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
Gelin şimdi yukarıdaki Java araçlarını yakından inceleyelim.

&lt;strong&gt;Java Servlet:&lt;/strong&gt;
1.0 sürümün, JSR-315 diye adlandırılan 3.0 sürümüne kadar birkaç özellik dışında yaşam döngüsü pek değişmedi. Bu yaşam döngüsü, servlet mimarisinin esnekliğinin ana kaynağıdır. Web.xml dosyası içinde, Listener, Filter, Servlet tagleri bir web projesindeki tüm gereksinimleri kapsar. Frameworkler ise buradaki mimariden faydalanarak bu işleri daha kolay bir hale getirir. Şimdi gelin bu taglerin ne anlama geldiğini bir hatırlayalım.
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;Listener:&lt;/strong&gt; Uygulama deploy edildiğinde ve undeploy edildiğinde burası çalışır. Isteklerden bağımsız olarak çalıştırılması düşünülen alanlar için düşünülmüştür. Örneğin; görev tanımlı işler için kullanılabilir. Quartz isimli scheduler'ın listener sınıfları vardır. Cache mekanizması içinde bu alan düşünülebilir. Yine EhCache uygulamasınında listenerları bulunmaktadır.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Filter:&lt;/strong&gt; Filter tüm Request, Response trafiğinin arasına giren adında anlaşılacağı üzere filtreleme işlevi gören sınıflardır. Filterlara örnek olarak, Spring Security, ve Url Rewrite verilebilir.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Servlet:&lt;/strong&gt; Response'un yaratıldığı alandır. Bu nedenle bir MVC framework'te genelde burada Router (Dispatcher) sınıfı bulunmaktadır.&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Java Server Pages:&lt;/strong&gt;
JSR-245 spesifikasyonunda detayları açıklanmıştır. JSP, PHP veya ASP'ye benzer. HTML üzerinde Java kodlarının çevik bir şekilde kodlanarak kullanılması amaçlanır. JSP dosyaları arkada otomatik olarak servlete dönüştürülür. Frameworkler ile birlikte, JSP dosyaları, template engine'i gibi kullanılmaya başlanmıştır.

&lt;strong&gt;Java Standard Tag Library:&lt;/strong&gt;
Java'nın tag kütüphanesidir. Aynı ASP.NET'te olduğu gibi yeni bileşenler yaratılabilmesi sayesinde kod tekrarı engellenir ve yeniden kullanılabilirlik sağlanır.

&lt;strong&gt;Spring Framework:&lt;/strong&gt;
Java dünyasında elinizi sallasanız bir Web Framework'e çarparsınız. O kadar fazladır ki, artık bıkkınlık getirir. Hangisini kullanmalı diye araştırıldığında, Spring Framework en çok tutulan frameworklerin başında gelmektedir. Bunun en önemli nedenlerinin başında, IoC, AOP gibi konuları sayesinde OOP ve tasarım prensiplerine uygun, bakımı kolay, temiz kodlar yazmamızı sağlaması gelmektedir. Struts'ı koltuğundan etmiş, Java EE 6'ya, getirdiği yeniliklerle ilham vermiş $ukella bir frameworktür. Kendi içinde, Security, Webflow, MVC vb gibi alt projeleri vardır. Sadece web alanında kullanmasa da, özellikle hakim olduğu alan burasıdır. VMWare tarafından desteklendiğini de belirtmekte yarar var.

&lt;strong&gt;Spring MVC:&lt;/strong&gt;
Web dünyasının son moda tasarım şablonu olan MVC'nin Spring implementasyonudur. İşleri anotasyonlar kullanılarak, XML konfigürasyonlar en aza indirgenir. Zaten bir IoC konteynerı olması nedeniyle. Model ve View alanında alternatif teknolojilerle entegre olması mümkündür. Bu da teknoloji seçimi esnekliği sağlar.

&lt;strong&gt;Spring Security:&lt;/strong&gt;
Spring Security, ACEGi olarakta bilinen bir projedir. Authentication ve authorization konularında çözümler sunar.

&lt;strong&gt;Spring Web flow:&lt;/strong&gt;
İş akışlarını, kod bağımlılığını en aza indirgeyerek, XML konfigürasyonları ile yapılmasını sağlar. Bunun için event driven bir mimari kullanır.

&lt;strong&gt;Hibernate:&lt;/strong&gt;
JBoss'un geliştirdiği bir numaralı Persistence aracı olan Hibernate'i bilmeyen yoktur sanırım. Kısaca DAO tasarım şablonunu destekler. Ve veri erişim katmanı mimarsi ile veritabanı tablolarını sınıflar ile eşleştirir.

Alternatif olarak ise Java EE 5 ile hayatımıza giren JPA adlı bir başka persistence aracıda bulunmaktadır. Java EE 6 ile birlikte daha çok göreceğimiz persistence aracıdır.

&lt;strong&gt;Sitemesh:&lt;/strong&gt;
Çok yeni olmasına rağmen, her geçen gün daha fazla ilgi görmeyi başaran bir şablon motorudur(templete engine). Java dünyasında, bir framework seçildiğinde, özellikle bu framework, Spring gibi integrated bir framework ise, layout(master page)  ihtiyacı ile ilgili bir arayış söz konusu olur. İşte Sitemesh, Tiles ve Velocity bu durumlarda en çok başvurulan şablon motorudur. Açıkçası, ilk önce ilgimi Tiles çekse de, sonraları Grails projesininde katkılarıyla Sitemesh ilgileri üzerinde topladı diyebilirim. Sitemesh, Tiles'tan daha basit olması diğer bir tercih nedenidir. Decorator Design patternini kullanır. Bunun anlamı, layout sayfanızda, sadece değiştireceğiniz alanları belirler ve ilgili sayfalara sadece bu alanları değiştirirsiniz.

&lt;strong&gt;Quartz Scheduler:&lt;/strong&gt;
Web dünyasında mutlaka, bazı işleri arkada düzenli olarak kontrol eden, yaratan vb servislere ihtyaç vardır. Örneğin, mail gönderme, statu güncellme vb.. İşte bu gibi konularda schuder bir servis gereksinimi var olur. Fakat iş mantığını ve birçok yardımcı kod java kodumuzdadır. Ve bu Cron gibi bir servise bağlandığında her seferinde bir VM'in belleğe yüklenip, kaldırılması anlamına gelir. Bunu engellemek için Servlet mimarisinde listener kullanmak daha yerinde olur. Çünkü Listener'lar aynı bellek alanını kullanır. Bu sayede ciddi bir performans kazanımı sağlanır.

İşte bu nedenle Quartz yaratılmıştır. Quartz trigger modelleri sayesinde, Cron benzeri bir formatta da konfigüre edilebilmektedir.

&lt;strong&gt;Log4J:&lt;/strong&gt;
Apache projesinin loglama mimarisi.

&lt;strong&gt;EhCache:&lt;/strong&gt;
Son zamanlarda, frameworkler gibi çok fazla cache projesi ortaya çıkmıştır. Bunların çok azı distirbuted bir yapıda çalışır ve clustered, replication gibi konuları destekler. Ehcache ise, distributed cache desteklmesi, memory yetersiz olduğu durumlarda diski kullanması (SWAP) gibi özellikleri sayesinde, en çok tercih edilen bir cache projesi olmuştur.

Java'da memcache gibi Java dışında bir dil kullanılarak yazılan cache motorlarının kullanılmamasının en önemli sebebi, In Memory kavramıdır. Ehcache, uygulama ile aynı memory alanında çalışması ciddi bir performans artışı sağlamaktadır.

&lt;strong&gt;Maven:&lt;/strong&gt;
Maven, hem derlemek, hem de bağımlılıkları yönetmek için kullanılan çok kapsamlı bir deployment aracıdır. Derlemek işinin sadece bir bölümüdür. Bağımlılıkları yönetmenin yanında proje iskeleti konfigürasyon yaratmak konusunda da hünerleri vardır.

Diyelim ki, Spring MVC, Tiles ve Hibernate'i birlikte kullanmak istediniz ve konfigürasyonları ile uğraşmak istemiyorsunuz. &lt;a href=&quot;http://code.google.com/p/spring-maven-archetype/&quot;&gt;http://code.google.com/p/spring-maven-archetype/&lt;/a&gt; projesi işinizi görebilir. Maven üzerinde birçok archetype projesi bulabilirsiniz. Ya da kendi archetype'nızı yazarak yeni bir projeye hızlı bir başlangıç yapabilirsiniz.

&lt;a href=&quot;http://code.google.com/p/archy/&quot;&gt;AppFuse&lt;/a&gt; adında birçok alternatif teknoloji konfigürasyonunu içinde barındıran bir archetype projeside mevcuttur.

&lt;strong&gt;Not: &lt;/strong&gt;Son olarak söylemek istediğim bir şey daha var, yukarıdaki bir çok teknolojinin entegre edilmiş ve çevik bir web programlama ortamı sağlayan framework daha var. Java VM ile çalışmasına rağmen kodları Java değil. Gördüğüm en iyi web frameworklerinden biri olan bu framework'ün adı &lt;a href=&quot;http://www.grails.org/&quot;&gt;Grails&lt;/a&gt;. Yine arkasında &lt;a href=&quot;http://springsource.org&quot;&gt;Spring&lt;/a&gt; ekibi var ve Spring'in birçok teknolojisi ustaca kullanılmış. Dil olarak ise &lt;a href=&quot;http://groovy.codehaus.org/&quot;&gt;Groovy&lt;/a&gt; adında Ruby benzeri bir dil kullanılıyor. Groovy bir Java standardı. Java'nın gücüyle çevikliğin hızını birleştirmek isteyenler için küçük bir bilgi olsun istedim!

Artık elimizi koda bulamanın zamanı geldi. Yukarıdaki teknolojiler ile ilgili örneklere sırasıyla önümüzdeki yazılarda detaylı olarak ve örnekler sunarak inceleyeceğiz.
</content>
 </entry>
 
 <entry>
   <title>Java Dünyasında Web Surfing ve Spring Framework</title>
   <link href="http://hasanozgan.com/blog/2010/08/09/java-dunyasinda-web-surfing-ve-spring-framework"/>
   <updated>2010-08-09T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2010/08/09/java-dunyasinda-web-surfing-ve-spring-framework</id>
   <content type="html">Scala dili ile tanıştığımda çok radikal bazı kararlar aldım. Java teknolojileri dışındaki tüm bildiğim teknolojileri (PHP, C#, Perl, Ruby) elimin tersi ile itme kararı aldım! Neden mi? Çünkü Java hem kariyer planım (Web Architect) için hem de mesleki tatmin anlamında oldukça güçlü bir platform ve ekosisteme sahip. Peki ha deyince yapılabiliyor mu derseniz, işte bu yaz onun hikayesidir.

Java'ya geçme kararı almadan önce Scala diliyle birşeyler yapmayı düşünüyordum. Lift framework'u falan incelemiş ve bazı özelliklerinden çok etkilenmiştim. Sonra &lt;a href=&quot;http://kariyer.net&quot; target=&quot;_blank&quot;&gt;Kariyer.net&lt;/a&gt; ve &lt;a href=&quot;http://indeed.com&quot; target=&quot;_blank&quot;&gt;Indeed.com&lt;/a&gt; üzerinde; &lt;a href=&quot;http://liftweb.net/&quot; target=&quot;_blank&quot;&gt;Lift&lt;/a&gt; ve &lt;a href=&quot;http://scala-lang.org&quot;&gt;Scala&lt;/a&gt; ile verilen iş ilanlarına baktım. Scala ile şu anda para kazanamayacağımı anladıktan sonra, Java'nın gücünden faydalanmaya karar verdim ve Scala'yı özellikle Akka projesi ile distributed konularda kullanmaya karar verdim.

2006-2007 döneminde Turkcell'in &lt;a href=&quot;http://turkcell-im.com&quot;&gt;SDP-A&lt;/a&gt; adlı projesinde çalışmamdan bu yana daha sonra çalıştığım şirketlerde Java teknolojilerine çok az sürmüş olmamdan kaynankalan bir gerileme söz konusuydu. Bu durumu kotarmak için, &lt;em&gt;&quot;Sun Certified Java Programmer&quot;&lt;/em&gt; sertifikası alarak, hem kendime, hem de ekosistemine bilgimi ispat edeceğime karar verdim. Ekim ayının sonunda SCJP sınava gireceğim. Bunun için öncelikle Amazon'dan &lt;a href=&quot;http://www.amazon.co.uk/Certified-Programmer-Study-Guide-CX-310-065/dp/0071591060&quot;&gt;SCJP Study Guide&lt;/a&gt; ve &lt;a href=&quot;http://www.amazon.com/Java-TM-Puzzlers-Pitfalls-ebook/dp/B001U5VJVS/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1281388008&amp;amp;sr=1-1&quot; target=&quot;_blank&quot;&gt;Java Puzzlers&lt;/a&gt; kitaplarını sipariş ettim.

Tabii sadece sertifika sahibi olmak ve/veya diğer dillerden miras gelen kod geliştirme standartlarını (design patterns gibi) bilmek yeterli değildi. Java ekosisteminde kullanılan araçlarada hakim olmalıydım. Web üzerinde çalışmalar yapan biri olarak, Java dünyasının popüler web çatılarını incelemeye başladım. &lt;a href=&quot;http://www.springsource.org/&quot;&gt;Spring Framework&lt;/a&gt;'ün adını çokca duymama rağmen, Java 6 ile tam uyumlu olan Jboss'un &lt;a href=&quot;http://seamframework.org/&quot;&gt;Seam framework&lt;/a&gt;'ude ilgimi çekmişti ilk zamanlar. Sonra bu kararı kollektif yatırıma bıraktım, biraz araştırma yapınca Java ekosisteminde bir numara olan web çatısının açık ara spring olduğunu anladım. Bu nedenle Spring ile yoluma devam etmeye karar verdim.

Framework seçme işlemiyle aynı paralel zamanda IDE'de araştırmaya başladım. Maalesef Java öyle Vim ile yazmak işkenceye dönüşebiliyor. Önceleri IntelliJ Idea'yı sevsem de, ücretli olmasından ve her açılışta projeyi derinlemesine incelemesinden arayışa devam ettim. Netbeans'i denedim ama oldum olası ısınamamışımdır. Sonra eski dost Eclipse'e geri döndüm. Ve bugün IDE olarak tercihim &lt;a href=&quot;http://eclipse.org&quot;&gt;Eclipse&lt;/a&gt;'ten yana oldu.

Derleme işlerinde ise eskiden Ant kullanan biri olsamda Maven2'yi tercih ettim. Maven ile tanışmam Scala daha doğrusu Lift framework vesile oldu. Paket bağımlılıkları ve deployment sürecini kolaylaştırması nedeniyle hemen kanım kaynadı. Archetype'lar sayesinde bir proje iskeleti hazırlamak çok kolay oluyor.

Spring framework'u seçtikten sonra, template engine armaya başladım. Önce Spring'te JSP örnekleri görünce ısınamadım. Ben JSF'teki gibi tag kütüphaneleri oluşturabileceğim bir template engine arıyordum. JSF ile Spring'i aynı çatıda kullanmayı denediysemde beceremedim. Daha sonra birşeyleri yanlış yaptığıma karar vererek durumumu tekrar inceledim. Ve JSP örneklerindeki JSTL teknolojisini keşfettim. JSTL tag libarary olmasına rağmen benim için yeterli değildi, layout yada master page gibi bir mimari içermiyordu. Araştırmalarım sırasında önce &lt;a href=&quot;http://tiles.apache.org/&quot;&gt;Apache Tiles&lt;/a&gt; ile hedefe ulaştığımı düşünsem de, sonra &lt;a href=&quot;http://www.opensymphony.com/sitemesh/&quot;&gt;Sitemesh&lt;/a&gt; ile bu işleri daha temiz bir şekilde çözelbildiğimi farkettim.

ORM ve Persistence aracı olarak tüm java kullanıcılarının tek geçtiği &lt;a href=&quot;http://www.hibernate.org&quot;&gt;Hibernate&lt;/a&gt;'i kullanmaya karar verdim.

Son olarak güvenlik ve yetkinlendirme konularında &lt;a href=&quot;http://www.acegisecurity.org&quot;&gt;Acegi&lt;/a&gt;, zaman ayarlı işler için ise &lt;a href=&quot;http://http://www.quartz-scheduler.org/&quot;&gt;Quartz&lt;/a&gt; kullanmaya karar verdim.

Bir sonraki yazımda spring framework ve söylediğim araçların Maven kullanarak Spring çatısı altında nasıl entegre edeceğimizi konuşacağız. Tabii konularda ilerledikçe seviyemizi arttıracak ve vites büyülteceğiz.

Ama bu süreçte bana akıl hocalığı (mentor) yapan ve deneyimlerini sıkılmadan paylaşan değerli dostum &lt;a href=&quot;http://rayyildiz.com&quot;&gt;Ramazan Ayyıldız&lt;/a&gt;a teşekkür ederim.

Java kocaman dalgaları olan bir derya. Ve bu dalgalarla surf yapmanın tadına doyulmayacağı aşikar. :)
</content>
 </entry>
 
 <entry>
   <title>Scala Türkiye Yayında</title>
   <link href="http://hasanozgan.com/blog/2010/08/01/scala-turkiye-yayinda"/>
   <updated>2010-08-01T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2010/08/01/scala-turkiye-yayinda</id>
   <content type="html">Scala ile çalışmalar yapıyor ve ortak bir toplulukta paylaşmak ve sizin gibi Scala severlerle tanışmak istiyor, ya da neymiş bu Scala diye merak ediyorsanız sizi de &lt;u&gt;&lt;a href=&quot;http://www.scala-tr.org&quot;&gt;Scala Türkiye&lt;/a&gt;&lt;/u&gt; adresine bekliyoruz. 
</content>
 </entry>
 
 <entry>
   <title>Java Berbattır</title>
   <link href="http://hasanozgan.com/blog/2010/08/01/java-berbattir"/>
   <updated>2010-08-01T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2010/08/01/java-berbattir</id>
   <content type="html">Arama motorlarında &quot;XXX Sucks&quot; diye arattığınızda bir sürü şey bulursunuz. C# Sucks, PHP Sucks, Java Sucks, Windows Sucks, Linux Sucks, Obama Sucks şeklinde bu liste uzayıp gider... Her dille ilgili bu kalıpta yazılar bulabilirsiniz. Aslında bu yazı benim neden Web üzerinde Java'yı tercih ettiğimin hikayesi ve çevremde birçok insanın söylediği &quot;Java Berbattır&quot; ifadesinin bir cevap niteliğindedir. Java ile ilgili şehir efsanalerine bir tarafsız bir bakış olmasını hedeflemekteyim.

Çevremdeki insanlardan duyduğum şehir efsaneleri;
&lt;ol&gt;
	&lt;li&gt;Java yavaştır.&lt;/li&gt;
	&lt;li&gt;Java karmaşıktır.&lt;/li&gt;
	&lt;li&gt;Java ticaridir.&lt;/li&gt;
	&lt;li&gt;Uygulama geliştirmek zordur.&lt;/li&gt;
	&lt;li&gt;Java çevik değildir.&lt;/li&gt;
	&lt;li&gt;Java web için uygun değildir.&lt;/li&gt;
	&lt;li&gt;Java platformunda proje geliştirmek uzun sürer.&lt;/li&gt;
&lt;/ol&gt;
Avantajları;
&lt;ol&gt;
	&lt;li&gt;Açık kaynaktır.&lt;/li&gt;
	&lt;li&gt;Kurumsal destek.&lt;/li&gt;
	&lt;li&gt;Yazılım mimarisi çözümleri&lt;/li&gt;
	&lt;li&gt;Geniş ekosistem&lt;/li&gt;
	&lt;li&gt;Güçlü araç ve teknolojiler&lt;/li&gt;
	&lt;li&gt;Her platformda sorunsuz çalışma.&lt;/li&gt;
	&lt;li&gt;Saygınlık&lt;/li&gt;
	&lt;li&gt;Dolgun maaş.&lt;/li&gt;
	&lt;li&gt;Performans ve Güvenlik&lt;/li&gt;
	&lt;li&gt;Dökümantasyon ve Standartlar&lt;/li&gt;
	&lt;li&gt;Ekonomik kaynak tüketimi&lt;/li&gt;
	&lt;li&gt;Nesne yönelimli bir dildir.&lt;/li&gt;
	&lt;li&gt;Sanal makine mimarisi&lt;/li&gt;
&lt;/ol&gt;
Dezavantajları;
&lt;ol&gt;
	&lt;li&gt;Terminoloji karmaşası.&lt;/li&gt;
	&lt;li&gt;Çok tanrılı dinler gibi her kafadan ses çıktığı için gelişimi yavaştır!&lt;/li&gt;
	&lt;li&gt;Öğrenmesi zordur!&lt;/li&gt;
&lt;/ol&gt;
&lt;em&gt;&lt;strong&gt;Java Yavaştır Efsanesi:&lt;/strong&gt;&lt;/em&gt; Java yavaştır algısı çıktığı yıllarda C++ ile kıyaslanmasından ve Swing GUI çatısından kaynaklanmaktadır. Web dünyası için en performanslı dillerden biridir. &lt;a href=&quot;http://shootout.alioth.debian.org/u32/benchmark.php?test=all&amp;amp;lang=php&amp;amp;lang2=java&quot;&gt;Şuradan&lt;/a&gt; Java'nın PHP ve diğer dillerle olan benchmark testlerini inceleyebilirsiniz.

&lt;strong&gt;&lt;em&gt;Java Karmaşıktır Efsanesi:&lt;/em&gt;&lt;/strong&gt; Java aslında karmaşık değil esnek bir mimarisi bulunmaktadır. Bu PHP gibi bir alana yönelik bir dil değilde birçok alanda kullanılmasından kaynaklanmaktadır. Doğru bir web çatısına sahip değilseniz Ruby'de karmaşık bir Web dili olabilmektedir. Fakat Rails ile bu sorun aşıldığı gözlenmiş ve Ruby son yılların popüler dillerinden biri haline gelmiştir. Böyle bir algı oluşmasının diğer bir sebebide Java üzerinden çok fazla terminoloji ve alternatif teknoloji olmasından kaynaklanmaktadır. Her bir alternatifin kendine has config tanımlarının olması yeni öğrenenleri zorlamaktadır. İşin sırası doğru yapıldığında Java'nın çalışma mantığı kolaylıkla yerli yerine oturacaktır.

&lt;em&gt;&lt;strong&gt;Java Ticaridir Efsanesi:&lt;/strong&gt;&lt;/em&gt; Açık kaynak camiadan birçok arkadaşım Java'yı kapalı kaynak olduğu için sevmiyordu. Sun firması Java'nın kaynak kodlarını açmadan önce bile Java diliyle birçok açık kaynak proje yazılmış ve bu araçların bir çoğu diğer dillere örnek oluşturmuştur. Sun Java'nın kaynak kodlarını açtıktan sonra ise JVM üzerinde çalışan bir sürü dil ortaya çıkmıştır. (Scala, Groovy, Clojure, vb..)

&lt;em&gt;&lt;strong&gt;Java Web için uygun değildir Efsanesi&lt;/strong&gt;&lt;/em&gt;: Bu algının sebebi de sanırım betik diller gibi yaz çalıştır şeklinde ilerlenememesidir. Java'da kaynak kod ara koda çevrilmeden web sunucusu üzerinde bir betik dili gibi çalışmaz. Bunun production sunucu üzerinde geliştirme yapılabilme durumunu göz önünde bulundurursak iyi birşeydir ama geliştirme süresini uzatır. Bunun için Java üzerinde çeşitli araçlar bulunmaktadır. Bunlardan en çok bilineni ise &lt;a href=&quot;http://www.zeroturnaround.com/jrebel/&quot;&gt;JRebel&lt;/a&gt;'dir.

&lt;strong&gt;&lt;em&gt;Java üzerinde uygulama geliştirmek uzun sürer Efsanesi:&lt;/em&gt;&lt;/strong&gt; Java üzerinde proje başlatmak bazı konfigürasyonları en başında sağlamak gerektiği için uzun sürdüğü doğrudur. Bu sorun dille değil, doğru bir web çatısı ve IDE seçmekle çözüme kavuşabilir. Java platformunda koşan ve Scala diliyle yazılan Lift web çatısı ile Groovy diliyle yazılan Grails web çatısı güzel örnek teşkil eder. &lt;em&gt;(Not: Maalesef Java IDE'leri halen istenilen şartlarda değildir.)&lt;/em&gt;

&lt;strong&gt;Avantajları&lt;/strong&gt;;
&lt;ol&gt;
	&lt;li&gt;&lt;strong&gt;Açık Kaynaktır: &lt;/strong&gt;Java'nın kaynak kodları açıktır. Apache, Jboss gibi kar amacı yazılım toplulukları pahalı olan yazılım geliştirme araçlarını ücretsiz sunmaktadır.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Kurumsal Destek: &lt;/strong&gt;Java'nın arkasında dünyanın en büyük şirketlerinin olduğu bir konsorsiyum bulunmaktadır. IBM, Oracle, SAP ilk aklıma gelen şirketlerden.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Yazılım Mimarisi Çözümleri: &lt;/strong&gt;Java mimarların aracıdır.&lt;strong&gt; &lt;/strong&gt;Yazılım mimarisi kitaplarında genelde örnek kodlar javadır. Birçok yazılım mimarisi tasarımları Java mimarlarına aittir. Diğer hiçbir dilde bu konular bu derece dikkate alınmaz.&lt;strong&gt; &lt;/strong&gt;&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Geniş Ekosistem: &lt;/strong&gt;Java'da Apache, Jboss, Eclipse, SpringSource, CodeHaus gibi çok büyük topluluklar bulunmaktadır. Ve bu topluluklar her gün yeni java projelerini bünyelerine katmaktadır.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Güçlü Araç ve Teknolojiler:&lt;/strong&gt; Java üzerinde her türlü ihtiyaç için uygulama geliştirilmiştir. Aynı ihtiyaç ile ilgili olarak birden fazla alternatif olması, rekabeti beraberinde getirir. Rekabette kaliteyi doğurur. Java ile ilgili uygulamaları &lt;a href=&quot;http://www.java-source.net&quot;&gt;Java-Source&lt;/a&gt; sitesinden inceleyebilirsiniz.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Her Platformda Sorunsuz Çalışma:&lt;/strong&gt; Java'nın en güzel yanlarından biride istediğim işletim sistemi üzerinde sorunsuz çalışabilmesidir. Windows yada MacOS üzerinde yazdığınız uygulamanız, düşük maliyetli yüksek performanslı ve güvenlikli Linux sunucularında barındırmanız mümkündür. Aynı zamanda geniş bir kullanım alanı olduğu için ERP veya Web uygulaması geliştirmekten tutunda Robotik konusunda bile etkilidir.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Saygınlık: &lt;/strong&gt;Java ile uygulama geliştirmek biraz daha zahmetli göründüğünden diğer developerlar tarafından saygı görür. Java teknolojilerini kullanan şirketler genelde büyük kuruluşlardır.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Dolgun Maaş:&lt;/strong&gt; Java developerları diğer developerlardan daha fazla ücret alırlar. &lt;a href=&quot;http://www.hasanozgan.com/wp-content/uploads/2010/08/java-salary.jpg&quot;&gt;&lt;/a&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://www.indeed.com/salary?q1=java&amp;amp;l1=&amp;amp;q2=csharp&amp;amp;l2=&amp;amp;q3=php&amp;amp;l3=&amp;amp;q4=ruby&amp;amp;l4=&quot; target=&quot;new-page&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-47&quot; title=&quot;java-salary&quot; src=&quot;http://www.hasanozgan.com/wp-content/uploads/2010/08/java-salary.jpg&quot; alt=&quot;&quot; width=&quot;616&quot; height=&quot;257&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Performans ve Güvenlik&lt;/strong&gt;: Java web üzerinde bir çok dilden daha performanslı çalışır. Bu sebeple birçok betik dilin Java sanal makinesinde çalışan sürümleri yazılmıştır. (jRuby, JPython gibi)&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Dökümantasyon ve Standartlar&lt;/strong&gt;: Java diğer dillere nazaran en iyi standartları oluşturulmıuş ve dökümante edilmiş dilidir. Çok sayıda kaynak kitap bulabilirsiniz.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Ekonomik Kaynak Tüketimi&lt;/strong&gt;: Java ile sunucu maliyetleriniz ve lisans giderleriniz minimuma düşer. Çünkü pahalı ticari çözümleri kadar iyi sonuçları alabileceğiniz, açık kaynak çözümler kullanabilirsiniz.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Nesne yönelimli bir dildir:&lt;/strong&gt; Her ne kadar &quot;Pure OOPL&quot; yani herşeyiyle nesne yönelimli bir dil olmasada, java nesne yönelimli bir dildir. Ve özellikle JDK5'ten sonra çok güçlü bir hale gelmiştir.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Sanal makine mimarisi: &lt;/strong&gt;Kodun&lt;strong&gt; &lt;/strong&gt;taşınabilirliğini düşünmeden yani platform bağımsız kod yazmanızı sağladığı gibi, performans sorunu yaşayanan ama çevik uygulama geliştiren diller içinde bir çözüm oluşturmaktadır. Bu dillerin derleyicileri JVM üzerinden çalışacak şekilde yeniden yazılmıştır.&lt;/li&gt;
&lt;/ol&gt;
&lt;strong&gt;Dezavantajları;&lt;/strong&gt;
&lt;ol&gt;
	&lt;li&gt;&lt;strong&gt;Terminoloji karmaşası: &lt;/strong&gt;Java'nın alana özel değilde genel ve kurumsal bir dil olması nedeniyle birçok probleme çözümler geliştirmiş ve bunları Java EE çatısı altında toplamıştır. Bunların öğrenilme süreci yeni başlayanlar için sorun olabilmektedir. &lt;strong&gt;
&lt;/strong&gt;&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Çok tanrılı&lt;/strong&gt; dinler gibi her kafadan ses çıktığı için gelişimi yavaştır! Java'nın arkasında Oracle, IBM gibi devlerden oluşan bir topluluk olduğunu söylemiştik. Çok fazla sahibi olduğu için hızlı bir şekilde dile yeni özellikler dahil edilememektedir.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Öğrenmesi zordur! &lt;/strong&gt;Maalesef diğer dillere kıyasla Java'nın öğrenme süreci biraz daha uzun sürer. Bana sorarsanız bunun sebebi dilin kendisinden ziyade alternatif  IDE ve araçların fazla olması ve hepsine uyumlu çalışması için bu araçların esnek olması ve yeni başlayan geliştiricinin&lt;strong&gt; &lt;/strong&gt;bu araçlar için konfigürasyon ayarlarını kendi yapmak zorunda olması.&lt;strong&gt;
&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Göç Zamanı ve Limonlu Soda Keyfi</title>
   <link href="http://hasanozgan.com/blog/2010/07/31/goc-zamani-ve-limonlu-soda-keyfi"/>
   <updated>2010-07-31T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2010/07/31/goc-zamani-ve-limonlu-soda-keyfi</id>
   <content type="html">&lt;p&gt;
&lt;b&gt;Göç Zamanı&lt;/b&gt;&lt;br/&gt;
Futbol ile programcılık arasında bir benzerlik var desem ne dersiniz? Doğruyu söylemek gerekirse, Metin, Ali, Feyyaz, Prekazi, Simoviç, Rıdvan vb... isimlerin Türkiye'nin gündeminden düşmesi ile futbolun benim gündemimden düşmesi aynı zamana denk gelir. Anlayacağınız futboldan anlamamda, keyif almamda. Ama bildiğim kadarıyla, futbolcular 30-35 yaş aralığına gelince emekliliğe ayrılmaya zorlanıyorlar. Devam etmek isteselerde hiçbir kulüp onları kadrolarında görmek istemiyor. Haksız değiller tabii, genç, yetenekli ve hızlı bir futbolcu ile tecrübeli bir futbolcu arasında tercih yapmamı isteseler bende genç, yetenekli, ucuz ve hızlı futbolcuyu tercih ederim. Teknik direktörün görevi zaten &quot;tecrübelerini paylaşmak&quot; değil mi?&lt;/p&gt;

&lt;p&gt;Yazılım dünyasında da durum pek farklı değil, 30'lu yaşlarına gelen yazılım geliştiricilerin birçoğu stabil bir moda geçiyor. Özellikle evlendikten sonra bu daha net gözlemlenebiliyor. Evlilik programcılık arzusunu öldürüyor mu (: bilmiyorum ama evlendikten sonra mesleki bilgisini güncellemeyen ve halen Visual Basic yazarak hayatını kazanan bir insanla tanıştım. Kendisini neden geliştirmediğini sorduğumda, aldığım cevap; &quot;çevresindeki insanların VB geliştiricisi olduğundan (yazının ikinci bölümünde bundan bahsedeceğim) ve iş ortamında Visual Basic'in kendisine yettiğini&quot; söyledi. Müşterilerininde hangi teknolojiyi kullandığını önemsemediğini belirtti. Duvara çok kötü toslayacağı kesin! (: Peki sektörü yakından takip eden, bilgilerini sürekli güncelleyen bir kişinin akıbeti sizce ne olur?! Eğer bu kişi yönetim pozisyonuna geçiş yapmazsa maalesef aynı akıbete uğrayacaktır. Futbol ile ilgili örneğimize geri dönersek, bu kadar iyi olan insanlardan teknik direktörlük yapması beklenir. Ve deneyimlerini genç programcılara aktarması beklenir. Bir programcı olarak kendinize sordunuz mu, teknik direktör olma şansınız nedir? Aslına bakarsanız çok iyi olan programcıların hepsi bu pozisyonlar için uygun değildir. Bazı pozisyonlar için insan, stres, risk ve zaman yönetimi gibi yetenekler gerekir. Ama bu becerileri istemeyen yöneticilik pozisyonlarıda vardır. (Mimarlık gibi.)&lt;/p&gt;

&lt;p&gt;Yukarıda saydığım bazı yeteneklerden bazıları kazanılamayacağı gibi bir kısmının da öğrenilmesi mümkündür. İşte genç yazılım geliştiricinin yapması gereken bu eksiklerini tespit etmesi ve tamamlaması gerekir. (İyi bir yöneticiniz varsa size bu konuda yardımcı olacaktır.) Tercih edilmenizi sağlayacak karakteristik özelliklerin dışında, bakılan diğer şeylerde, sertifikalar ve ne kadar insanın sizi önerdiğidir. 
Örneğin; Proje Yöneticisi olmak istiyorsanız, dünyaca kabul gören sertifikalardan biri olan PMP sertifikası hedeflenebilir. Ya da yazılım mimarlığı için, SCEA (Sun Certified Enterprise Architect) ya da OpenGroup tarafından desteklenen TOGAF çerçevisinin sertifikasıda hedeflenebilir. Hangi alanda olursa olsun bir yöneticinin ingilizcesi şüphesiz pürüzsüz olmalıdır. Zaten bu bildiğim tüm sertifikalar için şüphesiz ön koşuldur.&lt;/p&gt;
&lt;p&gt;
Tabii herkes teknik direktör olamaz bazılarımızda gündemi oluşturan kişi yani yorumcu olur. Bakınız Rıdvan Dilmen. Adam Fenerbahçe'de teknik adam olarak pek birşey yapamasa da (kimine göre yaptırılmasada!), gördüğüm en iyi yorumculardan biri :) Belkide yazılım geliştirici olarak siz, bir yönetim pozisyonunda değilde açık kaynak bir projede gündemi belirleyen projelere imza atabilirsiniz. Gelir modeliniz, açık kaynak bir proje üzerine kurulu olabilir ve tanınan biri olabilirsiniz. Bu konuda aklıma gelen örnekler bizden Cenk &amp; Çağatay Çivici'nin PrimeFaces isimli proje ve şirketleri. Açık kaynak projeler görüldüğü kadar kolay değildir. Topluluk'un saygısını gerektirir. Bolca dökümantasyon, anlaşılabilir ve kaliteli kodlar ve bolca çalışma ve yama gönderen bir sürü insan. :P
&lt;/p&gt;
&lt;p&gt;
Son çıkış yolu ise bir girişim kurmaktır. Bence en zor olanıda bu. (: Çünkü burada yukarıda saydığım özelliklerin hemen hepsine sahip olmanız ve dünyanın gündemine oturacak şeyler yapmanız ve önemli kararlara liderlik etmeniz vb. şeyler gerekir. Elbette kimse sertifikalarınızla ilgilenmez ama zamanı, riski ve insanı yönetemezseniz sonunuz yakın demektir. Ama buda yeterli değildir dünyanın gündeminide değiştirmeniz beklenir. 
&lt;/p&gt;
&lt;p&gt;
Yukarıda yazdıklarım 30 yaşın getirdiği derin düşünceler. Bir karar anı, dürüst olmak gerekirse ben bu ruh halini 35 yaşıma kadar beklemiyordum. Proje yöneticiliği pozisyonlarını hep elimin tersiyle ittim. Ama çalıştığım şirketlerde, iyi yöneticiler kadar, yukarıda saydığım özelliklere sahip olmayan, kötü, kalitesiz ve sadece dikta ederek yönetici olunduğunu düşünen, sözde proje yöneticilerini gördükçe neden bu tarafa kaymadığımı düşünmeye başladım. Evet size yazının başından beri söylediğim özelliklere sahip olmayan insanlarda proje yöneticisi olabilir. Ama bu kalitesiz işler ve mutsuz geliştiriciler anlamına gelir. (Yazının ikinci bölümünde bundan söz edeceğim.) Ve yazılım baştan sona bir ekip ruhu gerektiren bir takım oyunudur. Ekipte herkes değerli ve eşit seviyededir. Belki ideal proje yöneticisi profilini sonra tekrar gözden geçiririz.
&lt;/p&gt;
&lt;p&gt;
Açık kaynak &lt;a href=&quot;http://netology.org&quot;&gt;projeler&lt;/a&gt; geliştirmeyi denemiş olsamda (eminim hiçbirini (: duymamışsınızdır!) topluluk konusunda ve devamlılık konusunda pek başarı olmadığım için artık bu tarafta çalışmalarımı &lt;u&gt;askıya&lt;/u&gt; almaya karar verdim. Açık kaynak projelere, kullanıcı cephesinden bakacağım bir süre.
&lt;/p&gt;
&lt;p&gt;
Bir önceki &lt;a href=&quot;http://hasanozgan.com/notes/post/zamani-sahiplenmek&quot;&gt;yazımda&lt;/a&gt; da bahsetmiştim. Çok kadın hiç kadındır diye. Yazılım geliştirmenin bir çok alanında olmak istiyorum. İşin marketing bacağında da, network bacağında da, bu sebeple işime daha fazla ayırmam gereken süreyi birçok alana bölüyordum. Ve ana hedefim  lafta kalmaya başladığını farkettim. Bundan böyle sadece Java platformu üzerinde yazılım mimarileri tasarlamayı ve geliştirmeyi hedefliyorum. 30 Ekim'de SCJP sınavına gireceğim. Sınav sonucunu ve Java ile ilgili öğrendiklerimi &lt;a href=&quot;http://javatar.bz&quot;&gt;java.tar.bz&lt;/a&gt; paylaşacağım site üzerinden takip edebilirsiniz. Araç olarak &quot;Neden Java'yı Seçtiğimi ?!&quot; &lt;u&gt;&lt;a href=&quot;http://javatar.bz/java-berbattir&quot;&gt;&quot;Java Berbattır&quot;&lt;/a&gt;&lt;/u&gt; başlıklı yazımda uzun uzadıya bahsettim. (:  
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Limonlu Soda Keyfi&lt;/b&gt;&lt;br/&gt;
Malcolm Gladwell, kitaplarını çok sevdiğim bir adamdır. Kıvılcım Anı (Tipping Point) isimli kitabı kollektif zeka ile ilgileniyorsanız mutlaka okumanız gereken bir başyapıttır. Kendisinin &lt;a href=&quot;http://www.ted.com/talks/view/id/20&quot;&gt;TED etkinlerindeki konuşmasında&lt;/a&gt; insanların en iyiyi aradıklarını aslında birden fazla en iyi olduğundan söz eder. Limonlu Soda'nın icadı bence, meşrubat piyasasında kolayı ciddi oranda sarsan ciddi bir yenilik. Benim gibi kola ve ayran içmeyenler için bulunmaz bir icat. Babam sodasını limonlu içmeyi sever. Dedem de sodasını hep limonlu içermiş. Neden limonlu sodayı ürün olarak satma fikri bu kadar geç girdi pazara. Ya da yoğurdun muciti türkler olmasına ve Kanlıca'nın nefis pudra şekerli yoğurdunun yıllardır hayatımızda olmasına rağmen kimse meyveli yoğurt fikrini ürünleştirmedi?! Eminim bunun birçok sebebi vardır ama  Gladwell'in anlattıkları ile bu konuyu tekrar değerlendirmek gerekir. Gladwell konuşmasında tek bir en iyinin peşinde olduğumuzdan söz ediyor. Aslında tek bir en iyinin olmadığını ve en iyilerin olduğunu yineliyor. Ben bunu, takip ettiğimiz müzik gruplarına benzetiyorum. En iyi dediğiniz müzik grubunuz var mı? Yoksa en iyi müziği yapan müzik gruplarınız mı var?! Peki ben bunu neden anlatıyorum? Sözü getirmeye çalıştığım konu çalışma ortamlarımız. Ben de en iyi bir yazılım ekibiyle çalışmanın peşimde olanlardandım. Örneğin Google, Microsoft, Facebook, Yahoo vb...&lt;/p&gt;

&lt;p&gt;Google'da çalışırsanız, zeki ve işi kurallarına göre yapan bir sürü mühendisin çalıştığı kampüste olduğunuzu düşünürsünüz. Onlardan birşeyler öğrenir, onlara birşeyler öğretir ve kampüste oynanan oyunu kurallarına göre oynamaya başlarsınız. Çevremiz ne kadar iyi yazılımcılar ile doluysa bizde o kadar iyi yazılımcı oluruz. Bu yazdığımı kabullenmek zor olabilir. Bir önceki şirketinizde süreçler varsa, kod kalitesi için yazılan kodlar gözden geçiriliyor, günlük toplantılar yapılıyor ve çalıştığınız insanlar güvenlik, performans gibi konulara önem vererek işini yapıyorsa, sizde aynı şekilde çalışmayı adet haline getirirsiniz. Ama eğer, herşeyin bürokrasi ile yürütüldüğü, bir işi yapmanız 40 kişinin onayını gerektiriyorsa, yeni teknolojiler ve kalite süreçleri ekip çalışanlarını korkutuyorsa, proje yöneticileri kalite güvencesi (Quality Assurence) gibi konuları önemsemiyor, basit düşünmüyor işleri iyice karmaşık bir hale sokuyorsa sizde bu şirketin kültüründen nasibinizi alırsınız. Şirket kültürleri önemlidir. &lt;/p&gt;

&lt;p&gt;Genelde hangi şirketlerde çalışacağımıza, iş başvurusunda bulunarak biz karar veririz. Görüşmelerde şirketler sundukları imkanlardan ve fırsatlardan söz eder. Eğer şirketin ortamının sizi ileriye değilde, geriye götüreceğinizi düşünüyorsanız bence o şirkete en başında girmeyin ya da şirkete girdiyseniz ve hayalinizdeki çalışma ortamını orada yaratacağınıza inanıyorsanız hemen başlayın. Bir fikir başlatmak zordur ama imkansız değildir. Genelde yeniliklere kapalı şirketlerde bir çok şey için sizin ve sizin gibi düşünenlerin ekstra efor sarfetmesi gerekir.&lt;/p&gt;

&lt;p&gt;Bir yazılım geliştirici olarak hayalinizde ki çalışma ortamı nasıldır? Eminim birden fazla farklı cevaplar gelecek. Süreçler işlensin, insiyatif tanınsın, ilgi alanıma göre işler yapayım, yeni teknolojileri için arge yapalım, koltuklar rahat olsun, oyun odası olsun vb düşünceler ilk aklıma gelen birkaç düşünce. Çalışma ortamları performansı doğrudan etkileyen şeylerden biridir. Bunu herkes söyler. Şirketler en iyi çalışma ortamını yaratmaya çalışıp dururlar. En iyinin tek bir tane olmadığını yukarıda Gladwell'in konuşmasında duymuşturk. Mükemmel bir çalışma ortamı bir tane değildir. Bir çok çalışan için farklı mükemmel ortamlar vardır. &lt;/p&gt;

&lt;p&gt;Çoğu şirket iyi çalışanlar bulamadığından yakınır. Bence iyi çalışanlara sahip olmak ancak iyi bir çalışma ortamınız ve şirket kültürünüz varsa mümkündür. Üzüm üzüme baka baka kararır diye boşuna söylenmediğini düşünüyorum.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Sizin mükemmel çalışma ortamınız nedir?&lt;/i&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Lokasyon Bazlı Servisler Yaratmak</title>
   <link href="http://hasanozgan.com/blog/2010/04/10/lokasyon-bazli-servisler-yaratmak"/>
   <updated>2010-04-10T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2010/04/10/lokasyon-bazli-servisler-yaratmak</id>
   <content type="html">Son 2 yıl içerisinde Mikro-blogları ve bu konuda geliştirilen web uygulamalarının adını çokça duyduk. Bu yıl ise, özellikle lokasyon bazlı uygulama örneklerini görmeye başladık. Foursquare, Loopt, Google Latitude, Gowalla, Rummble ve bu işe yeni girişen Twitter, Facebook aklıma gelen ilk örnekleri. (Ben bu yazıyı hazırlarken; Yahoo, FourSquare'ı satın almayı düşünüyor fakat 100 Milyon$ edip etmeyeceğine karar vermeye çalışıyordu)

Lokasyon bazlı servisler gizlilik konusunuda beraberinde getirdi. Hatta bu konuda Google'ın CEO'su Eric Schmidt'in '&lt;a href=&quot;http://www.theregister.co.uk/2009/12/07/schmidt_on_privacy/&quot;&gt;Gizlenmek istemeniz, gizlenmesi gereken işlerle meşgul olduğunuz anlamına gelir&lt;/a&gt;' demecine en güzel cevabı, &quot;Lütfen beni soyun&quot; anlamına gelen ve foursquare'daki bulunduğunuz konuma göre hırsızlara davetiye çıkaran, &lt;a href=&quot;http://PleaseRobMe.com&quot;&gt;PleaseRobMe.com&lt;/a&gt; isimli bir sitenin verdiğini düşünüyorum. Halen gizlilik politikaları lokasyon bazlı servislere karşı önyargıları olan insanları tatmin ettiği söylenemez.

Gizlilik konusu daha çok tartışılacak bir konu gibi görünüyor. Bunun en son örneği ise Fazlamesai.net sitesindeki &lt;a href=&quot;http://www.fazlamesai.net/?a=article&amp;amp;sid=5399&quot;&gt;&quot;Kim? Ne zaman? Kiminle? Nerede?&quot;&lt;/a&gt; başlıklı yazısı.

Bu tartışmalar süre dursun, lokasyon bazlı servisler artık hayatımıza girdi ve çıkacak gibide durmuyor. Peki bu işin teknik altyapısında neler var, gelin bunları inceleyelim ve bu blogun amacına uygun bir davranış sergileyelim.&lt;!--more--&gt;

&lt;strong&gt;Lokasyon Bazlı Servisler (LBS) Nedir? &lt;/strong&gt;
Bir kişinin lokasyon bilgisini almanın birkaç yöntemi vardır. Bunlar;
&lt;ul&gt;
	&lt;li&gt;IP'den Lokasyon bulma (GeoLocation)&lt;/li&gt;
	&lt;li&gt;GSM Operatorunden (3 Baz Istasyonundan Tahmini Lokasyon Bilgisi)&lt;/li&gt;
	&lt;li&gt;GPS telefonlar yoluyla bulma&lt;/li&gt;
	&lt;li&gt;HTML5 ile birlikte Lokasyonu browser'a sorma (GeoLocation)&lt;/li&gt;
	&lt;li&gt;Fotoğrafın EXIF bilgisinden öğrenme&lt;/li&gt;
&lt;/ul&gt;
Yukarıdaki yöntemlerin hepsiyle konum bilgisini (longitude ve latitude) elde etmek mümkün.
Bunlardan GPS ve GSM ilgili olan yöntemler, makineden makineye ve operatorden operatore değişiklik gösterebileceği için bu yazının kapsamı dışındadır. GSM ve GPS üzerinden lokasyon çekmek özellikle lokasyonun güvenilirliği gerektiği durumlarda daha etkili olmaktadır. Tabii GSM ve GPS gibi sistemleri simule etmekte mümkün ama şimdilik, küçük bir kesimin yapabileceği bir iş.

&lt;strong&gt;Neler Yapılabilir?&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;Takip sistemleri; &lt;/strong&gt; Kişi ya da aracın takibi için kullanılabilir.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;En yakın lokasyon;&lt;/strong&gt; Bulunduğunuz lokasyonun 10 kilometre çevresindekileri bulmak diyebilirim. (Birazdan bu konuda örnek bir uygulama yazacağız) Aklıma ilk gelen örnekler; eczaneler, lokantalar, tanıdık kimseler, ustalar ve kiralık evler  bulmak. Örnekler ve kullanım şekli hayal gücünüzle sınırlı görüldüğü üzere. Bunu bir iPhone yada Android uygulaması ile entregre edildiği düşünülürse tadından yenmez.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Lokasyona Göre Davranış;&lt;/strong&gt;Sitenizin davranışları lokasyona göre değişiklik gösteriyor olabilir. Örneğin, bazı ürünleri sadece bazı lokasyonlar için satıyor olabilirsiniz. Koca bir listeyi müşterinizin karşısına çıkarmak pek anlamsız olabilir. Web 3.0'a hazırlandığımız şu günlerde siteler ne kadar akıllı olursa ve bizden ne kadar az içerik talep ederse o kadar iyi olacaktır.&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Nasıl Yapılabilir?&lt;/strong&gt;

&lt;strong&gt;IP'den lokasyon bulmak&lt;/strong&gt; için, web üzerinde bu hizmeti alabileceğiniz çok fazla firma var. İlk aklıma gelenleri; &lt;a href=&quot;http://www.ip2location.com/&quot;&gt;IP2Location&lt;/a&gt;, &lt;a href=&quot;http://www.maxmind.com/&quot;&gt;MaxMind&lt;/a&gt;, &lt;a href=&quot;http://www.geopostcodes.com/&quot;&gt;GeoPostcodes&lt;/a&gt;.

Bunların içinden ücretsiz bir sürümü bulunan MaxMind firmasının &lt;a href=&quot;http://geolite.maxmind.com/&quot;&gt;GeoLite&lt;/a&gt; isimli ürünü ile ilk demomuzu gerçekleştireceğiz.

&lt;strong&gt;Gereksinimler&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://php.net&quot;&gt;PHP 5&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz&quot;&gt;GeoLiteCity.dat&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.maxmind.com/app/php&quot;&gt;PHP İçin GeoLocation API Modülü&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
Öncelikle ücretsiz şehir verisini indirelim.
&lt;pre lang=&quot;bash&quot;&gt;# Ornekte kullanilan GeoLiteCity.dat dosyasının kurulumu
su -
mkdir -p /opt/maxmind
cd /opt/maxmind
wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz
gunzip GeoLiteCity.dat.gz
chmod a+r -R /opt/maxmind

# PHP Modülünün kurulumu.
wget http://geolite.maxmind.com/download/geoip/api/php/geoipregionvars.php
wget http://geolite.maxmind.com/download/geoip/api/php/geoipcity.inc

# Eger Apache ayarlarınızda open_base_dir ayari aktif ise
# PHP kodunuzun bulundugu dizine koyun ve örnekteki yolu degistirin.
&lt;/pre&gt;
Şimdi IP'den latitude ve longitude degerlerini bulan kodun demosunu yazalım.

&lt;pre lang=&quot;php&quot;&gt;
include(&quot;geoipcity.inc&quot;);
include(&quot;geoipregionvars.php&quot;);

$gi = geoip_open(&quot;/opt/maxmind/GeoLiteCity.dat&quot;, GEOIP_STANDARD);
$record = geoip_record_by_addr($gi, $_SERVER[&quot;REMOTE_ADDR&quot;]);
geoip_close($gi);

echo &quot;&lt;h1&gt;bulundugunuz sehir&lt;/h1&gt;&lt;hr/&gt;&quot;;
echo &quot;&lt;pre &gt;&quot;.print_r($record, true).&quot;&lt;/pre &gt;&quot;;
&lt;/pre&gt;

Bu demonun çalışan haline &lt;a href=&quot;http://phparchitect.org/tr/demos/lokasyon-bazli-servisler-yaratmak/geolocation.php&quot; target=&quot;demo&quot;&gt;şuradan&lt;/a&gt; erişebilirsiniz.

&lt;p&gt;
&lt;strong&gt;En yakın şeyi bulmak&lt;/strong&gt; ile anlatılmak istenen bilinen bir lokasyonun etrafında bulunan (diyelim ki 1 kmlik) bir alan içerisindeki nesneleri bulmaktan söz edilmektedir. Örneğin bir ilan sitesi için bu kiralık veya satılık evler, araçlar ve çeşitli taşınır ve taşınmazlar olabilir. Ya da, &quot;Ne/Nerede&quot; servisi için, çilingir, taksi durağı ve eczanenin bulunduğu yerler de bulunabilir.

Bu konuda eğer web üzerinde araştırma yapmayı düşünüyorsanız, arama motorlarına &quot;radius search&quot; yazmanız yeterli olacaktır.  Karşınızda, lokasyon üzerine, özellikle &lt;u&gt;posta kodu (zipcode)&lt;/u&gt; hizmeti sunan siteler çıkacaktır. Tahmin ettiğiniz üzere anahtar kelime, &lt;strong&gt;posta kodu&lt;/strong&gt; bilgisi. Daha doğrusu mahalle seviyesine indirgenmiş longitude ve latitude değerlerine sahip olmak. Bu sayede, yarıçap hesabı &lt;strong&gt;(radius)&lt;/strong&gt; yaparak, örneğin 1km'lik bir alana ait mahallelere erişemek mümkün. İşte işin büyüsü burada. &lt;a href=&quot;http://yelp.com&quot;&gt;Yelp&lt;/a&gt; ve &lt;a href=&quot;http://foursquare.com&quot;&gt;FourSquare&lt;/a&gt; bu şekilde size mekan bilgilerini verir.
&lt;/p&gt;
&lt;p&gt;
Bu hesaplamanın nasıl yapıldığını araştırırken, &lt;a href=&quot;http://codeguru.com&quot;&gt;CodeGuru&lt;/a&gt; sitesinde &lt;a href=&quot;http://www.codeguru.com/Cpp/Cpp/algorithms/article.php/c5115/&quot;&gt;Coğrafik Bölge Hesaplamaları&lt;/a&gt; başlıklı bir makaleye rastladım. Kodlar C++ diliyle yazılmıştı. Bu işin mantığıyla ilgilenen &lt;a href=&quot;http://www.fazlamesai.net/index.php?a=article&amp;sid=3102&quot;&gt;olay odaklı programcılar&lt;/a&gt; için güzel bir makale. Ama yok hani PHP ile yazılmış kodları merak eden &lt;a href=&quot;http://www.fazlamesai.net/index.php?a=article&amp;sid=3102&quot;&gt;ürün odaklı&lt;/a&gt; programcı kardeşlerim için ise, Steven Brendtro tarafından PHP diline port edilen GeoCalc sınıfını ve &lt;a href=&quot;http://imaginerc.com/software/GeoCalc/&quot;&gt;şuradaki&lt;/a&gt; makalesini tavsiye ederim.
&lt;/p&gt;
&lt;p&gt;
Peki yarıçap hesabı yapmak için gerekli PHP kütüphanemizde var artık. Aşağıda anlatacağım örnek için, posta kodu veritabanı tablonuz olduğu varsayılmıştır. Yani şimdi bulmamız gereken, posta kodları seviyesinde latitude ve longitude değerleri. Bu konuda ücretli olmasına rağmen şiddetle tavsiye edebileceğim site  &lt;a href=&quot;http://www.geopostcodes.com/index.php?pg=browse&amp;grp=1&amp;sort=1&amp;niv=3&amp;id=489&amp;l=0&quot;&gt;GeoPostcodes&lt;/a&gt;. Gerçekten çok iyi bir içeriğe sahip. Diğer bir alternatif için ise, arama motorundan bulduğum ve hiç deneme fırsatı bulamadığım &lt;a href=&quot;http://www.zip-codes.com/&quot;&gt;ZipCodes&lt;/a&gt; isimli site. Son olarak posta kodları ile ilgili ücretsiz siteler bulmanız mümkün ama bunların çoğu Amerika için geçerli :(
&lt;/p&gt;

Peki şimdi gelin GeoCalc ile 1 km'lik bir alan nasıl bulduğumuzu inceleyelim.
&lt;pre lang=&quot;php&quot;&gt;
include_once(&quot;GeoCalc.class.php&quot;);
$oGC = new GeoCalc();

// IP'den lokasyon bulma yoluyla bulduğumuz değerler.
$dLongitude = -94.44590241;
$dLatitude = 38.7996;

// Ne kadarlık bir alanda sorgulama yapılacak?!
$dRadius = 1.00;  // in kilometers

// Yarıçap Hesabı.
$dAddLat = $oGC-&gt;getLatPerKm() * $dRadius;
$dAddLon = $oGC-&gt;getLonPerKmAtLat($dLatitude) * $dRadius;

// Sınırların belirlenmesi.
$dNorthBounds = $dLatitude + $dAddLat;
$dSouthBounds = $dLatitude - $dAddLat;
$dWestBounds = $dLongitude - $dAddLon;
$dEastBounds = $dLongitude + $dAddLon;

print &quot;Merkezi Longitude: $dLongitude\n&quot;;
print &quot;Merkezi Latitude: $dLatitude\n&quot;;
print &quot;Yarıçap: $dRadius kilometre\n&quot;;

print &quot;Kuzey Sınırı: $dNorthBounds\n&quot;;
print &quot;Güney Sınırı: $dSouthBounds\n&quot;;
print &quot;Doğu Sınırı: $dEastBounds\n&quot;;
print &quot;Batı Sınırı: $dWestBounds\n&quot;;

// Örnek sql sorgusu ile hangi bölgeleri kapsadığı bulunur.
$strQuery = &quot;SELECT * FROM PostalCodes &quot; .
              &quot;WHERE Latitude &gt; $dSouthBounds &quot; .
              &quot;AND Latitude &lt; $dNorthBounds &quot; .
              &quot;AND Longitude &gt; $dWestBounds &quot; .
              &quot;AND Longitude &lt; $dEastBounds&quot;;

&lt;/pre&gt;

Bulunan bu bölge kodlarına bağlı kayıtların çekilmesi ve sayfada listelenmesiyle işlem tamamlanmış olur.

Bu örnekte kullanılan kodların Steven Brendtro'nun sitesinden kaldırılması ihtimaline karşılık &lt;a href=&quot;http://phparchitect.org/tr/demos/lokasyon-bazli-servisler-yaratmak/geocalc/geocalc-php-1.2.tar_.gz&quot;&gt;şuradan&lt;/a&gt; kopyasına erişebilirsiniz.

&lt;p&gt;
Son olarak, &lt;strong&gt;HTML5&lt;/strong&gt; ile birlikte gelen lokasyon öğrenme yönteminden söz ederek yazımı sonlandırmak istiyorum. Bu yöntemin, IP'den lokasyon bulmaktan farkı web tarayıcınızdan izin ister ama bunun karşılığında tarayıcının makinede varsa GPS'ten ya da çeşitli servislerden öğreneceği kaliteli bir latitude ve longitude değeri sunar.
&lt;/p&gt;
&lt;pre lang=&quot;javascript&quot;&gt;
if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
        result = &quot;latitude:&quot;+position.coords.latitude+&quot;-&quot;;
        result += &quot;longitude:&quot;+position.coords.longitude;
        alert(result);
    });
} else {
    alert(&quot;Uzgunum, tarayicinizin cografik konum destegi henuz yok! HTML5 destegi olan bir tarayici kullanin.&quot;);
}
&lt;/pre&gt;

Ayrıca Google Maps ile entegre olarak bölge bilgisine ulaşabileceğiniz &lt;a href=&quot;http://phparchitect.org/tr/demos/lokasyon-bazli-servisler-yaratmak/with_html5.php&quot; target=&quot;demo&quot;&gt;DEMO'ya şuradan&lt;/a&gt; erişebilirsiniz.
</content>
 </entry>
 
 <entry>
   <title>PHP ve NoSQL (MongoDB)</title>
   <link href="http://hasanozgan.com/blog/2010/04/06/php-ve-nosql-mongodb"/>
   <updated>2010-04-06T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2010/04/06/php-ve-nosql-mongodb</id>
   <content type="html">&lt;strong&gt;NoSQL Nedir? &lt;/strong&gt;
NoSQL, ilişkisel olmayan bir veritabanıdır. SQL dili kullanmadan Map-Reduce kavramı ile sorgulama yapılır. Map ve Reduce, aslında fonksiyonel programlamada sıkça kullanılan iki fonksiyondur. Excel buna güzel bir örnektir.

Gün geçmiyorki tarih tekerrür etmesin. NoSQL kelimesini birkaç blogta okuduğum vakit Yazılım Mimarı olan 40-45 yaşlarında bir büyüğüme bundan söz ettim. O da, aslında bunun yıllar önce kullanılan Berkley_DB'den başka birşey olmadığını söyledi. Berkley_DB aynı anda çalışan binlerce iş parçacığının(thread) 256 terabyte büyüklüğüde bir veritabanına erişebilmesini mümkün kılar. SQLite'ta BerkleyDB'ye benzer bir yapıya sahiptir. Ama biz SQLite'ı küçük işlerde kullanırız!. Biraz kafa karıştırıcı olduğunu biliyorum. Burada ilginç bir döngü var? Internet mozaik bir yapıdadır. Ve dağınıktır. Bu dağınık yapıyı Google'ın yaptığı gibi indekslemek (tabiri caizse tüm interneti indirmek isterseniz), dünyanın en büyük ve en iyi ilişkilsel veritabanını kanalize olmuş Oracle bile yetersiz kalacaktır.

&lt;strong&gt;Peki neden?&lt;/strong&gt;
&lt;ol&gt;
	&lt;li&gt; İlişkisel veritabanları, yazma hakkı olan bir sunucu üzerinde koşar. Ana sunucuya birşey olması durumunda slave makinelerden biri master'a çevirilir ve yola devam edilir. Burada ki veritabanına gelen yazma isteklerini düşünebiliyor musunuz?&lt;/li&gt;
	&lt;li&gt; Veritabanı büyüdüğünde yedekleme gibi işlemler (bakım) sorun olmaya başlar.&lt;/li&gt;
	&lt;li&gt; Replikasyona dair sorunlar yaşayabilirsiniz.&lt;/li&gt;
	&lt;li&gt; Google'ın 1 milyon makinesi olduğu varsayılıyor! Bu kadar makinelerin yarısının aynı anda tek bir makineye yazma isteği bulunduğunu düşünürsek durum daha net anlaşılabilir.&lt;/li&gt;
&lt;/ol&gt;
Google, startup döneminde, bir mühendislik şirketi gibi davrandı ve ihtiyaçlarını iyi analiz etti. 10.000$'lık sunucular almak yerine 500$'lık ucuz makineler satın aldı. Ve bu makinelerin kısa ömürlü ve her an patlayacağını bilerek kodlarını yazdı. Ve BigTable denilen (Hadoop bunun açık kaynak halidir) Map ve Reduce fonksiyonları ile sorgulamayı sağlayan bir mimari kurdu. Bu mimarinin en önemli özelliği; makinelerden biri göçse bile, sistemin çalışmaya devam etmesidir. Her kaydın 3-5 ayrı sunucuda kopyası bulunmaktadır. Bu şekilde web için en uygun devasa bir Mosaic oluşturdular.

Peki NoSQL konusuna giriş yaptık. Fakat bu seferde karşımıza birden fazla NoSQL türü çıkacak;
&lt;ol&gt;
	&lt;li&gt; Key/Value database (Redis, MemcachedDB vb..)&lt;/li&gt;
	&lt;li&gt; Document Oriented database. (MongoDB, CouchDB)&lt;/li&gt;
	&lt;li&gt; Object database (db4o)&lt;/li&gt;
	&lt;li&gt; Graph databse (neo4j)&lt;/li&gt;
	&lt;li&gt; Tabular (bigtable, hadoop)&lt;/li&gt;
&lt;/ol&gt;
Biz bu türlerden, belge yönelimli veritabanları konusu üzerinede duracağız. Belge yönelimli veritabanları, nesne yönelimli ve ilişkisel veritabanlarının alt katmanıdır. Yukarıda saydığım veritabanlarının birbirinden farkını ve merak ettiğiniz diğer konuları &lt;a href=&quot;http://en.wikipedia.org/wiki/NoSQL&quot;&gt;Vikipedi&lt;/a&gt;'den okuyabilirsiniz. MongoDB'yi neden tercih ettiğime dair bilgilerine ise; &lt;a href=&quot;http://www.mongodb.org/display/DOCS/Benchmarks&quot;&gt;benchmark&lt;/a&gt; testlerinden ve &lt;a href=&quot;http://www.mongodb.org/display/DOCS/Comparing+Mongo+DB+and+Couch+DB&quot;&gt;kıyaslama tablosundan&lt;/a&gt; edinebilirsiniz.&lt;!--more--&gt;

&lt;strong&gt;MongoDB'yi Denemek İçin;&lt;/strong&gt;
Eğer yukarıdaki bilgiler sizi tatmin etmedi ve MongoDB'yi biraz kurcalamak istiyorsanız ve zamanım yok makineye kurmadan denemek istiyorum diyorsanız; online olarak &lt;a href=&quot;http://try.mongodb.org&quot;&gt;şuradan&lt;/a&gt; deneyebilmeniz mümkün.

&lt;strong&gt;MongoDB sunucusunun çalıştırmak için;&lt;/strong&gt;
&lt;pre lang=&quot;bash&quot;&gt;mongod --dbpath=/data/mongo
&lt;/pre&gt;
&lt;strong&gt;MongoDB'nin Ubuntu'ya Kurulumu&lt;/strong&gt;
MongoDB'nin Ubuntuya nasıl kurulduğunu anlatacak olsamda diğer işletim sistemleri ve linux dağıtımlarına nasıl kurulacağını &lt;a href=&quot;http://www.mongodb.org/display/DOCS/Quickstart&quot;&gt;şuradan&lt;/a&gt; öğrenebilirsiniz.
APTITUDE ile kurmak için; aşağıdaki dağıtımınız için uygun olan paket kaynak adresini seçerek &lt;strong&gt;/etc/apt/sources.list&lt;/strong&gt; dosyasına kopyalamanız yeterlidir.
&lt;pre lang=&quot;bash&quot;&gt;# for Ubuntu Lucid (10.4) (built using a prerelease installation)
deb http://downloads.mongodb.org/distros/ubuntu 10.4 10gen

# for Ubuntu Karmic (9.10)
deb http://downloads.mongodb.org/distros/ubuntu 9.10 10gen

# for Ubuntu Jaunty (9.4)
deb http://downloads.mongodb.org/distros/ubuntu 9.4 10gen&lt;/pre&gt;
ve sonrasında da aşağıdaki komutları çalıştırmanız yeterlidir.
&lt;pre lang=&quot;bash&quot;&gt;sudo aptitude update
sudo aptitude install mongodb-stable
# ya da
sudo aptitude install mongodb-unstable
# ya da
sudo aptitude install mongodb-snapshot&lt;/pre&gt;
&lt;pre lang=&quot;bash&quot;&gt;# install dependicies for Ubuntu 9.04 ve 9.10
sudo apt-get -y install tcsh git-core scons g++
sudo apt-get -y install libpcre++-dev
                      libboost-dev libreadline-dev
                      xulrunner-1.9.1-dev

# get source
git clone git://github.com/mongodb/mongo.git
# build
scons
# install
sudo scons --prefix=/opt/mongo install&lt;/pre&gt;
Görüldüğü üzere kurulum son derece basit. Derlenerek kurulum işleminde yapılması gereken başlangıç betiği hazırlamak.
&lt;pre lang=&quot;ruby&quot;&gt;#!/usr/bin/env ruby -w
# mongo ;; 2010 (cc) Jan Riethmayer
# This work is licensend under a Creative Commons Attribution 3.0 license.

require 'optparse'
options = {}

optparse = OptionParser.new do|opts|
  opts.banner = &amp;lt;&amp;lt;-BANNER
Usage: sudo ./mongo [options]
BANNER

  options[:dbpath] = &quot;/data/mongodb/&quot;
  opts.on( '-d', '--dbpath', 'Select DB path. Defaults to /data/mongodb/' ) do |path|
    options[:dbpath] = path
  end

  options[:port] = &quot;27017&quot;
  opts.on( '-p', '--port PORT', 'Listening to port 27017 by default' ) do |port|
    options[:port] = port
  end

  options[:fork] = false
  opts.on( '-f', '--fork', 'Run as daemon' ) do
    options[:fork] = true
  end

  options[:logpath] = &quot;/var/log/mongodb.log&quot;
  opts.on( '-l', '--logfile FILE', 'Defaults to /var/log/mongodb.log' ) do |file|
    options[:logpath] = file
  end

  opts.on( '-h', '--help', 'Display this screen' ) do
    puts opts
    exit
  end
end

# Parse the command-line. Remember there are two forms
# of the parse method. The 'parse' method simply parses
# ARGV, while the 'parse!' method parses ARGV and removes
# any options found there, as well as any parameters for
# the options.
optparse.parse!

class Go
  attr_accessor :opts

  def initialize(opts)
    @opts = opts
  end

  def start
    puts &quot;Starting on port #{@opts[:port]} with dbpath #{@opts[:dbpath]}&quot;
    puts &quot;Running as Daemon&quot; if @opts[:fork]
    puts &quot;Writing to logpath /var/log/mongodb.log&quot;
    path = &quot;--dbpath #{@opts[:dbpath]}&quot;
    port = &quot;--port #{@opts[:port]}&quot;
    log = &quot;--logpath #{@opts[:logpath]} --logappend&quot;
    fork = &quot;#{@opts[:fork] ? '--fork' : ''}&quot;
    params = [path, port, log, fork].join(&quot; &quot;)
    result = %x{ ./mongodb/bin/mongod #{ params } }
    puts result
  end

  def stop
    process = %x{ ps -o pid,command ax | grep mongod }
    found = false
    matcher = process.scan(/(\d+).+?bin.+?mongod.+?--fork/) do |pid|
      found = true
      puts &quot;Killing process #{pid}&quot;
      %x{ kill -2 #{pid} }
    end
    puts &quot;No mongod process found&quot; unless found
  end
end

go = Go.new(options)

case ARGV[0]
  when /start/ : go.start
  when /stop/ : go.stop
  else
  raise ArgumentError.new(&quot;mongo (start|stop) or mongo -h for help.&quot;)
end&lt;/pre&gt;
Yukarıdaki dosyayı &lt;strong&gt;/etc/init.d/mongo&lt;/strong&gt; şeklinde kaydetmek gerekiyor.

&lt;strong&gt;PHP Kurulumu&lt;/strong&gt;
&lt;pre lang=&quot;bash&quot;&gt;sudo pecl install mongo
&lt;/pre&gt;
PHP için monog eklentisinin hatasız bir şekilde derlenebilmesi için bilgisayarınızda &lt;strong&gt;phpize&lt;/strong&gt; yüklü olmalıdır. Derleme işleminden sonra, php.ini dosyanıza;
&lt;pre lang=&quot;ini&quot;&gt;extension=mongo.so
&lt;/pre&gt;
ekledikten sonra kurulum işlemi tamamlanmış olur.

Artık PHP mongo ile konuşabilecek durumda. PHP'nin sınıfları ile ilgi detaylı bilgiye &lt;a href=&quot;http://tr.php.net/mongo&quot;&gt;php.net/mongo&lt;/a&gt; adresinden ulaşabilirsiniz.

PHPMyAdmin gibi bir yönetim arabirimi arıyorsanız, &lt;a href=&quot;http://www.phpmoadmin.com/&quot;&gt;PHPMoAdmin&lt;/a&gt; tam size göre.

&lt;strong&gt;PHP Frameworkleri&lt;/strong&gt;
Birçok popüler PHP framework'ünün MongoDB için ActiveRecord patternine uygun yazılmış eklentisi mevcut. Gelin bunlara bir göz atalım;
&lt;strong&gt;Zend Framework&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://framework.zend.com/wiki/display/ZFPROP/Zend_Nosql_Mongo+-+Valentin+Golev&quot;&gt;Zend_Nosql_Mongo&lt;/a&gt; Zend firması tarafından geliştirilen sınıf.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/coen-hyde/Shanty-Mongo&quot;&gt;Shanty Mongo&lt;/a&gt; ise diğer bir sınıf.&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;CakePHP&lt;/strong&gt;
&lt;a href=&quot;http://github.com/ichikaway/mongoDB-Datasource/downloads&quot;&gt;MongoDB Datasource&lt;/a&gt; sınıfı.

&lt;strong&gt;Kohana&lt;/strong&gt;
&lt;a href=&quot;http://github.com/Wouterrr/mangodb&quot;&gt;Mango&lt;/a&gt; ise Kohana için ActiveRecord paternini kullanan bir sınıf.

&lt;strong&gt;Symfony&lt;/strong&gt;
Symfony için Jason Mooberry tarafından yazılan makalenin, &lt;a href=&quot;http://blog.jasonmooberry.com/2009/08/mongodb-and-symfony-yes-part-1-inserts/&quot;&gt;1. bölümü&lt;/a&gt; ve &lt;a href=&quot;http://blog.jasonmooberry.com/2009/08/mongodb-and-symfony-yes-part-2-simple-queries/&quot;&gt;2. bölümünden&lt;/a&gt; bilgi edinebilirsiniz.

&lt;strong&gt;Kütüphaneler&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/crodas/ActiveMongo&quot;&gt;ActiveMongo&lt;/a&gt; güzel bir kütüphane. Bu kütüphaneye başlangıç yapmak için ise &lt;a href=&quot;http://crodas.org/activemongo.php&quot;&gt;şu makaleye&lt;/a&gt; bakabilirsiniz.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://code.google.com/p/mongodb-morph/&quot;&gt;Morph Kütüphanesi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;PHP ile İlgili Diğer Makaleler&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://technosophos.com/content/mongodb-5-things-every-php-developer-should-know-about-mongodb&quot;&gt;http://technosophos.com/content/mongodb-5-things-every-php-developer-should-know-about-mongodb&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.businessinsider.com/how-we-use-mongodb-2009-11&quot;&gt;
http://www.businessinsider.com/how-we-use-mongodb-2009-11&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.lafermeduweb.net/billet/nosql-mongodb-et-php-premiere-approche-781.html&quot;&gt;http://www.lafermeduweb.net/billet/nosql-mongodb-et-php-premiere-approche-781.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.boxedice.com/2009/07/25/choosing-a-non-relational-database-why-we-migrated-from-mysql-to-mongodb&quot;&gt;http://blog.boxedice.com/2009/07/25/choosing-a-non-relational-database-why-we-migrated-from-mysql-to-mongodb&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.phpclasses.org/blog/post/118-Developing-scalable-PHP-applications-using-MongoDB.html&quot;&gt;http://www.phpclasses.org/blog/post/118-Developing-scalable-PHP-applications-using-MongoDB.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
MongoDB gerçekten çok iyi belgelenmiş ve birçok web çatısı tarafından desteklenen harika bir araç. Bu konuda ki paylaşımlarınızı bekliyorum. :)
</content>
 </entry>
 
 <entry>
   <title>Şeytan, Pengueni Dürterse</title>
   <link href="http://hasanozgan.com/blog/2010/03/28/seytan-pengueni-durterse"/>
   <updated>2010-03-28T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2010/03/28/seytan-pengueni-durterse</id>
   <content type="html">&lt;p&gt;Günümüzde birçok site arkada yapılacak görevleri çalıştırmak için görev yöneticileri kullanılır. Crontab (Zaman ayarlı) ve Daemon (kendi halinde çalışan) iki görev yöneticinin arasındaki bence tek fark (durum bu kadar basit olmasada) Crontab'ın 1 dakikanın altındaki süreçlere göre çalışmamasıdır. Bu görevler için Daemon denilen ve &lt;strong&gt;/etc/init.d&lt;/strong&gt; altında tetiklenen ve sinyallerle çalıştırılıp durdurulabilen ve process id değeri üreten bir teknolojiye ihtiyaç duymasıdır. Daemon'lar init.d altında bir çalıştırıcı scripte sahip olmaya bilir ama durdumak istendiğinde güç kullanılarak öldürülmesi (kill)  gerekir ki, kritik işlerde bu pek tehlikeli bir yöntemdir. Init.d altındaki başlatma scripti bir proses(PID) dosya yaratır ve daemon'u çalıştırır. Sonrasında durdumak isterse daemon'a sinyal gönderir. Böylece uygulama durma sinyalini görünce düzgün bir şekilde sonlanır. Crontab ise belli bir işin bellir bir saatte yapılmasını sağlar. Saatte bir, her 15 dk.'da bir ayın 5. günü, her çarşamba saat 15'te gibi...&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Kullanım alanlarına birkaç örnek vermek gerekirse; &lt;/p&gt;
&lt;p&gt; &lt;strong&gt;Daemon&lt;/strong&gt;;  Özellikle kuyruktaki işleri işlemek için çok kullanılır.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Video converter&lt;/li&gt;
	&lt;li&gt;Email/SMS gönderme&lt;/li&gt;
	&lt;li&gt;RSS ayrıştırma.&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Cron;&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;Günde bir kez gönderilecek işler. Örneğin; doğum günü epostaları.&lt;/li&gt;
	&lt;li&gt;Ayda hatta yılda bir kez yapılacak işler. Anneler gününde temanın otomatik olarak değiştirilmesi.&lt;/li&gt;
	&lt;li&gt;Haftanın belli bir günü yapılacak olan işler. Her Pazartesi indirim puanı oluşturup, rastgele 500 üyeye gönderme.&lt;/li&gt;
	&lt;li&gt;Saatte bir yapılacak işler, Site için RSS oluşturma.&lt;/li&gt;
&lt;/ul&gt;
Daemon yazmak genelde C dili ile yazılan işlerdendir. Çünkü bu iş hem performans hem de sistem programlama(sinyaller ve prosesler) bilgisi  gerekir. Buna rağmen, işin mantığı ise  PHP, ve benzeri web dillerinde yazılmıştır. Belki de biraz bu sebeplerle Crontab ile görev tanımı yapılır. Crontab kullanmak güzeldir ama kurulum sürecinde ek yük getirir. Bunların doğru bir şekilde çalıştığının kaydının tutulması (&lt;strong&gt;loging&lt;/strong&gt;) ve gözlenmesi (&lt;strong&gt;monitoring&lt;/strong&gt;) işlerinin yapılmasıda cabası.

&lt;p&gt; Bu yazı &lt;a title=&quot;Chronical Task Management Tool&quot; href=&quot;http://code.google.com/p/chronical/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Chronical&lt;/strong&gt;&lt;/a&gt; projesinin bilgi tasarımının ilk taslaklarını içermesinin yanında aktif olan mevcut uygulamalardan örnekler de verilecektir.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;&lt;strong&gt;Peki bu işleri ne şekilde yapımak gerekir?&lt;/strong&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1) System_Daemon PEAR Paketi&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;http://pear.php.net/&quot; target=&quot;_blank&quot;&gt;PEAR&lt;/a&gt; kütüphanesi içerisinde bulunan ve &lt;a href=&quot;http://kevin.vanzonneveld.net/&quot;&gt;Kevin van Zonneveld&lt;/a&gt; tarafından geliştirilen &lt;a href=&quot;http://pear.php.net/package/System_Daemon&quot; target=&quot;_blank&quot;&gt;System_Daemon&lt;/a&gt; paketi kolayca linux daemonları yaratmanıza olanak verecek olan harika bir araçtır. Becerileri;
&lt;ol&gt;
	&lt;li&gt;İşletim sistemine özel başlangıç ayarlarının ve kurulumlarının kolayca yapılabilmesi.&lt;/li&gt;
	&lt;li&gt;İşlem kaydı (loging) tutalbilmesi. Ve PEAR kütüphanesi ile uyumluluk&lt;/li&gt;
	&lt;li&gt;Kullanım kolaylığı, birazdan örnek uygulamada da görebileceksiniz&lt;/li&gt;
	&lt;li&gt;Sinyallerle çalışma ve özelleştirme&lt;/li&gt;
&lt;/ol&gt;
&lt;strong&gt;System Daemon Kurulum;&lt;/strong&gt;

Linux sunucunuzda PEAR kurulu ise şu şekilde;
&lt;pre lang=&quot;bash&quot;&gt;$ pear install -f System_Daemon
&lt;/pre&gt;
Yada &lt;a href=&quot;http://download.pear.php.net/package/System_Daemon-0.10.2.tgz&quot; target=&quot;pear&quot;&gt;şuradan&lt;/a&gt; indirerek kullanabilirsiniz.

&lt;strong&gt;Kullanım;&lt;/strong&gt;

&lt;strong&gt;job/sms_sender.php&lt;/strong&gt; isimli bir php dosyası yaratalım.
&lt;pre lang=&quot;php&quot;&gt;// Gerekli olan Daemon kütüphanesi.
// Bu kütüphane include_dir dizininin gösterdiği bir yerde olmalı.
require_once &quot;System/Daemon.php&quot;;

// İzin verilen parametreler
$runmode = Array (
    // tek başına çalışması için
    'standalone' =&gt; false,
    // initd dizininde çalıştırma betiği yaratır.
    'write-initd' =&gt; false,
);

// Scan command line attributes for allowed arguments
foreach ($argv as $k=&amp;gt;$arg) {
    if (substr($arg, 0, 2) == '--' &amp;&amp; isset($runmode[substr($arg, 2)])) {
        $runmode[substr($arg, 2)] = true;
    }
}

// appName minimum gerekli olan parametredir.
System_Daemon::setOption(&quot;appName&quot;, &quot;sms_sender&quot;);

// System_Daemon::setOption ile tek tek  ya da
// System_Daemon::setOptions($options) ile toplu olarak girilebilir.

$options = array(
    //'appName' =&gt; 'sms_sender',
    'appDir' =&gt; dirname(__FILE__),
    'appDescription' =&gt; 'MT SMS Sender',
    'authorName' =&gt; 'Hasan Ozgan',
    'authorEmail' =&gt; 'hasan@ozgan.net',
    'sysMaxExecutionTime' =&gt; '0',
    'sysMaxInputTime' =&gt; '0',
    'sysMemoryLimit' =&gt; '1024M',
    'appRunAsGID' =&gt; 1000,
    'appRunAsUID' =&gt; 1000,
);
System_Daemon::setOptions($options);

// Eger daemon olarak çalışmayacaksa
// System_Daemon::start() methodu ile başlatılabilir.
if ($runmode[&quot;standalone&quot;]) {
    System_Daemon::start();
}

// job --write-initd parametresi ile çalıştırıldığında kendini kaydeder.
// açılışta çalıştırıldığında ise --init.d parametresi alır.
if (!$runmode[&quot;write-initd&quot;]) {
     System_Daemon::info('not writing an init.d script this time');
} else {
    if (($initd_location = System_Daemon::writeAutoRun()) === false) {
        System_Daemon::notice('unable to write init.d script');
    } else {
        // parametreli log örneği...
        System_Daemon::info(
            'sucessfully written startup script: %s',
            $initd_location
        );
    }
}

// Daemon stop sinyali gelene kadar çalışmaya devam eder.
while (!System_Daemon::isDying()) {
   // Buraya işinizle ilgili kodları eklemelisiniz.

   $messages = OutgoingSMS::fetchMessages();
   foreach ($messages as $message) {
       if (!$message-&gt;send()) {
            System_Daemon::error(&quot;Message not send&quot;);
       }
   }

   // Daemonlarda önemli olan sonsuz döngüde bir miktar
   // işlem yapıp sistemi dinlendirmek gerekir.
   // Bunun için ise iterate methodu ile saniye cinsinden
   // bir süre vererek çağrı yapmak gerekir.
   System_Daemon::iterate(5);
}

System_Daemon::stop();
&lt;/pre&gt;

&lt;p&gt;
Yazdığımız scripti tek başına çalıştırmak için ise;
&lt;pre lang=&quot;bash&quot;&gt;
$ job/send_sms --standalone
&lt;/pre&gt;
yazmamız yeterlidir. Service birkez çalışıp sonlanacaktır.
&lt;/p&gt;

&lt;p&gt;
Servisimizi init.d altına kaydetmek için ise;
&lt;pre lang=&quot;bash&quot;&gt;
$ sudo job/send_sms --write-initd
&lt;/pre&gt;
yazmamız yeterlidir. Eğer burada hata alırsanız, init.d dizinin yazma haklarını kontrol etmeniz gerekir.
&lt;pre lang=&quot;bash&quot;&gt;
$ sudo chmod a+w /etc/init.d
&lt;/pre&gt;
&lt;/p&gt;

Bu işlemleri yaptıktan sonra &lt;strong&gt;appName&lt;/strong&gt; parametresinde girdiğimiz isme göre;
&lt;ul&gt;
&lt;li&gt;/etc/init.d/send_sms&lt;/li&gt;
&lt;li&gt;/var/log/send_sms.log&lt;/li&gt;
&lt;li&gt;/var/run/send_sms/send_sms.pid&lt;/li&gt;
&lt;/ul&gt;
dosyaları oluşturulur.
İşletim sisteminin açılışta servisi çalıştırması için kayıt etmek gerekir.
&lt;pre lang=&quot;bash&quot;&gt;
# kayıt için
$ sudo update-rc.d send_sms defaults
# kaldırmak için ise
$ sudo update-rc.d -f send_sms remove
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2) Periodic Kütüphanesi&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Arbit&lt;/strong&gt; firması tarafından geliştirilen &lt;a href=&quot;http://arbitracker.org/periodic.html&quot;&gt;Periodic&lt;/a&gt; kütüphanesini kullanabilirsiniz. Bu kütüphane crontab işlerini kendi sarmalayan biraz daha karmaşık bir mimariye sahiptir.
&lt;/p&gt;
&lt;pre lang=&quot;xml&quot;&gt;
&lt;?xml version=&quot;1.0&quot;?&gt;
 &lt;task&gt;
  &lt;config&gt;
     &lt;reScheduleTime&gt;92384032&lt;/reScheduleTime&gt;
     &lt;timeout&gt;92384032&lt;/timeout&gt;
  &lt;/config&gt;
  &lt;command type=&quot;shell&quot;&gt;
     &lt;!-- ... --&gt;
  &lt;/command&gt;
  &lt;command type=&quot;vcsWrapperUpdate&quot;&gt;
     &lt;!-- ... --&gt;
  &lt;/command&gt;
  &lt;!-- ... --&gt;
&lt;/task&gt;
&lt;/pre&gt;
&lt;p&gt;
Periodic ile ilgili daha detaylı bilgiyi &lt;a href=&quot;http://arbitracker.org/periodic/design.html&quot;&gt;şuradan&lt;/a&gt; alabilirsiniz.
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3) Chronical Job Management Projesi&lt;/strong&lt;/p&gt;
&lt;p&gt;
Bu proje benim yapacağım hem cron hem de daemon desteği ile melez çalışacak bir projedir. Henüz fikir halindedir. Projene adresine &lt;a href=&quot;http://chronical.googlecode.com&quot;&gt;şuradan&lt;/a&gt; ulaşılabilir.
&lt;/p&gt;
&lt;p&gt;
Bu proje servis işlerinizi hızlı ve kolay bir şekilde merkezi bir yerden yönetmeniz, durumunu kontrol etmenizi amaçlar.
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Özellikleri&lt;/strong&gt;
&lt;ul&gt;
   &lt;li&gt;Yaml ile kolayca güncellenebilen ayar dosyası&lt;/li&gt;
   &lt;li&gt;Daemon kaydetme, kaldırmak ve durum bilgisi almak için kullanılacak çalıştırılabilir betik&lt;/li&gt;
   &lt;li&gt;İş mantığınızı barındıran kodları çalıştıracak Abstract sınıf.&lt;/li&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Örnek proje ayar dosyası (task.config);&lt;/strong&gt;
&lt;pre lang=&quot;yaml&quot;&gt;
# Period Format
# second minute hour day month dayOfWeek weekOfMonth
# second: 0-59
# minute: 0-59
# hour: 0-23
# day: 1-31
# month: 1-12
# dayOfWeek: 1-7
# weekOfMonth: 1-5

# proje adina göre tek bir daemon oluşur.
# Bu daemon işlerin tamamını alt prosesler yaratarak yönetir.

proje_adi:
    gorev_adi:
        class: Application_Jobs_SmsSender
        # her 30 saniyede bir çalış anlamında.
        period: */30 * * * * *
    change_theme:
        class: Application_Jobs_ChangeTheme
        # Mayıs ayının ikinci pazar günü saat gece 2'de
        # Anneler gününde çalış.
        period: * 2 * 5 7 2
&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Arayüz Sınıfı&lt;/strong&gt;&lt;/p&gt;
&lt;pre lang=&quot;php&quot;&gt;
interface Chronical_Job_Interface
{
     // Ayar dosyasına verilen sınıfların bu
     // arayüzden gerçekleştirilmesi gerekir.
     public function run();
}
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Örnek Sınıfı&lt;/strong&gt;&lt;/p&gt;
&lt;pre lang=&quot;php&quot;&gt;
class Application_Jobs_SendSms
                    extends Joy_Application
                    implements Chronical_Job_Interface
{
     public function run()
     {
           // TODO: Yapılacak işler....
     }
}
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Örnek log ayar dosyası;&lt;/strong&gt; Bu dosya chronical uygulamasının log ve pid ayarları ile ilgili bir dosyadır.  Ubuntu ve debian temelli dağıtımlar için &lt;strong&gt;/etc/chronical.ini&lt;/strong&gt;
&lt;/p&gt;
&lt;pre lang=&quot;ini&quot;&gt;
[folders]
     folder.log = /var/log/
     fodler.pid = /var/run/
     folder.init.d = /etc/init.d
[defaults]
; seconds
     default.sleep_time = 5
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Düşünülen betik dosyası örnek işler&lt;/strong&gt;&lt;/p&gt;
&lt;pre lang=&quot;bash&quot;&gt;
# OS startup install for init.d
$ chronical install task.config

# OS startup uninstall for init.d
$ chronical uninstall task.config

# Görev çalıştırma
$ chronical start proje_adi:gorev_adi

# Görev durdurma
$ chronical start proje_adi:gorev_adi

# Görev durumunu görme
$ chronical status proje_adi:gorev_adi
&lt;/pre&gt;

Kısaca Unix sistemleri üzerinde daemon ve crontab işleri bu şekilde. (:
</content>
 </entry>
 
 <entry>
   <title>Zamanı Sahiplenmek</title>
   <link href="http://hasanozgan.com/blog/2010/03/22/zamani-sahiplenmek"/>
   <updated>2010-03-22T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2010/03/22/zamani-sahiplenmek</id>
   <content type="html">&lt;p&gt;Yaklaşık 10 yılı aşkın bir süredir, yazılım sektörünün içindeyim. Hani derler ya! neler geldi neler geçti gözümün önünden. Netscape'in kaynak
kodlarını açmasıyla başladı benim için serüven. &lt;a target=&quot;other&quot; href=&quot;http://en.wikipedia.org/wiki/Mirc&quot;&gt;mIRC&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://en.wikipedia.org/wiki/Hotmail&quot;&gt;Hotmail&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://en.wikipedia.org/wiki/ICQ&quot;&gt;ICQ&lt;/a&gt; ve &lt;a target=&quot;other&quot; href=&quot;http://en.wikipedia.org/wiki/Altavista&quot;&gt;Altavista&lt;/a&gt; arasında gidip gelirken bugüne gelmişiz
aniden.&lt;/p&gt;

&lt;p&gt;10 yılın muhasebesini yaparken düşündüklerimin ne kadarını yaptığımı ve yanlış yaptığım gibi karmaşık bir denklemi
çözmekle uğraşırken, düşüncemi paylaşmak ve faydalanmak istedim kitlelerin bilgeliğinden.
&lt;/p&gt;
&lt;p&gt;
    &lt;i&gt;İnternet ve açık kaynak projeler, kimler için bir fırsata dönüştü? Nasıl ve Neden?&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;Aklıma ilk gelen örnekler; &lt;a target=&quot;other&quot; href=&quot;http://en.wikipedia.org/wiki/Linux&quot;&gt;Linux&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://en.wikipedia.org/wiki/Apache&quot;&gt;Apache&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://en.wikipedia.org/wiki/Gnome&quot;&gt;Gnome&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://en.wikipedia.org/wiki/KDE&quot;&gt;KDE&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://en.wikipedia.org/wiki/Mozilla&quot;&gt;Mozilla&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://en.wikipedia.org/wiki/Wordpress&quot;&gt;Wordpress&lt;/a&gt; vb.. O gün bu projelere destek olanlar kendi iş modellerini bu
projelerin üzerine kurarak gönüllü faaliyetlerinden para kazanmalarını sağlayacakalrı bir gelir modeli oluşturmaları bir
yana saygınlıkta kazandılar. Çok büyük firmalara girdiler, Yahoo ve Google gibi.&lt;/p&gt;

&lt;p&gt;Bu insanlar üniversite yıllarında hobi olarak başladıkları açık kaynak projeler, uzmanlaştıkları alan oluverdi ve proje
popülerleştikçede aranmaya başladı bu insanlar. Birkaç isim vermek gerekirse, XDebug ve eZ Publish (&lt;a target=&quot;other&quot; href=&quot;http://ez.no&quot;&gt;ez.no&lt;/a&gt;) sahibi, Derick Rethans ve
şuan Novel'in Mono takımında geliştirici takımında olan Michael Hutchinson aklıma gelen ilk örnekler. Michael üniversite yıllarında
MonoDevelop ASP.NET eklentisi geliştirmekle uğraşması, bugün  O'na çok büyük bir şirketin kapılarını açtı. Örnekler çok fazla bu satırları
yazarken aklıma ilk gelenleri paylaştım. Eminim sizinde bu yazdıklarımı okurken bir sürü örnek geliyordur.&lt;/p&gt;

&lt;p&gt;Peki Türkiye'de durum nasıl; ilk aklıma gelen örnekleri &lt;a target=&quot;other&quot; href=&quot;http://linux.org.tr&quot;&gt;LKD&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://csystem.org&quot;&gt;CSD&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://pardus.org.tr&quot;&gt;Pardus&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://webrazzi.com&quot;&gt;Webrazzi&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://fazlamesai.com&quot;Fazlamesai&lt;/a&gt; ve &lt;a target=&quot;other&quot; href=&quot;http://enderuniz.org&quot;&gt;EnderUnix&lt;/a&gt;. Bu gruplarda kendi içlerinde de başarılı kişiler çıkardılar. Örnek vermek gerekirse PostgreSQL maintainerlarından &lt;a target=&quot;other&quot; href=&quot;http://gunduz.org&quot;&gt;Devrim Gündüz&lt;/a&gt; ve bir blogtan kendi işini kuran Arda Kutsal.&lt;/p&gt;

&lt;p&gt;Tekrar soruma geri döneyim, devleri dize getiren kitleleri peşinden sürükleyen projelere imza atan bu insanlar, nasıl oldu da bunu başardılar.&lt;/p&gt;

&lt;p&gt;Buna katılırsınız ya da katılmazsınız bilmiyorum ama bence bunun sebebi, &lt;b&gt;tüm enerjilerine inandıkları bir alana aktarmak
yani &lt;u&gt;uzmanlaşmak&lt;/u&gt;&lt;/b&gt;! Sabırla bu alanda çalışmalar yapmak ve bir meritokrasi içerisinde yer edinmek. Outliers kitabında Malcolm Gladwell'in
kitabında bahsettiği 10.000 saat çalışmamızı önermesinin sebebi işte bu. &lt;/p&gt;

&lt;p&gt;Her yıl internet sektöründe (memcached, redis, casandra, ruby on rails, blog, micro blog, social network vb) popülerleşen proje, teknoloji ve iş modelleri duyarız.
Heyecan uyandıran bu kelimelerden en çok sevdiğiniz ve 10.000 saatinizi adayacağınız muhakkak vardır.  Blog konusunda; &lt;a target=&quot;other&quot; href=&quot;http://wordpress.com&quot;&gt;Wordpress&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://digg.com&quot;&gt;Digg&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://technoratti.com&quot;&gt;Technoratti&lt;/a&gt;, &lt;a target=&quot;other&quot; href=&quot;http://blogger.com&quot;&gt;Blogger&lt;/a&gt; ve &lt;a target=&quot;other&quot; href=&quot;http://reader.google.com&quot;&gt;Google Reader&lt;/a&gt; gibi projeler bu alanı kapatmış görünüyor. 10.000 saatinizi bu alana adamak şu an için zahmetli ve yersiz görünüyor, eğer radikal bir fikriniz yoksa. Google arama motorlarını yerle bir eden fikirleri ile bunu başardı. Sizde başarabilirsiniz ama işinizin zor olduğunu hatırlatmak isterim. Unutulmaması gereken şey ise hergün yeni fırsatların doğduğu. Sadece bulunduğunuz zamanı anlamak ve gereksinim gördüğünüz alana kendinizi adamanız yani zamanı sahiplenmeniz gerekiyor. &lt;/p&gt;

&lt;p&gt;Benim önerim zamanın size sunduğu ve açık olan ihtiyacı bulmak için çalışmanız buna yaşamınızı adamanız. Devrim Gündüz, Arda Kutsal, C Derneğinin kurucusu Kaan Aslan bunu yaptı ve meyvelerini yiyorlar.&lt;/p&gt;

&lt;p&gt;10 yılın muhasebesini yaptığımda yaptığım en büyük hatamın, uzmanlaşmak istediğim alana geç karar vermiş olduğumu söyleyebilirim. 5 yıl masaüstü sistem programlama ve 5 yılda web ve mobil programlama. Faydası olmadı demiyorum çok fazla paradigmaya hakim olmak güzel birşey ama halen uzmanlaşmak istediğim alanda çalışmadığım için ekstra efor serfetmem gerekiyor ve her geçen gün bu daha da zor oluyor. Google arama konusunda uzman ve bu konuya yardımı dokunacak en uç noktalarlada ilgileniyor işlere bu açıdan bakıyor ve bu onun vizyonunun çerçevelerini çiziyor.&lt;/p&gt;

&lt;p&gt;İnanacağınız ve seveceğiniz alanı seçmek önemli çünkü çalışmalarınızın temelini oluşturuyor. Ve anlık gazlarla çıkan içinizdeki merak kıvılcımını alevlenmeden durduruyor. Eğer ilgi alanınız ile ilgili ise zaten zaman içinde bulaşmak zorunda kalıyorsunuz. Günümüzün popüler konularını (agile programming, realtime internet, semantic web, cloud computing, collective intelligence, scalability vb) ve projeleri hergün twitter ve çeşitli bloglarda bulabilirsiniz. Casandra, CouchDB, Doctrine, Redis, RubyOnRails, Symfony, Mozilla, Eclipse, Hibernate vb gibi geleceği olan projelere destek verebilirsiniz.
&lt;/p&gt;
&lt;p&gt;Teomanın bir şarkısında dediği gibi; &lt;p/&gt;&lt;p&gt;&lt;i&gt;&quot;Çok kadın hiç kadındır oğlum, yalnızlıktır sonu!&lt;/i&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ninja ve Samuray</title>
   <link href="http://hasanozgan.com/blog/2010/03/12/ninja-ve-samuray"/>
   <updated>2010-03-12T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2010/03/12/ninja-ve-samuray</id>
   <content type="html">&lt;p&gt;Bilişim dünyasında iki tür yazılımcı vardır. Ninjalar ve Samuraylar. Her ikiside işinin ehlidir. Bir oturuşta bir işletim sistemini en az hata ile yazabilir, NASA gibi çok güvenli yerleri alt-üst (hack) edebilirler. Bu iki kişi madem bu kadar iyiler peki o zaman nedir bu iki tür bilişimciyi birbirinden ayıran şey? İşte bu yazı bunun üzerinedir.&lt;/p&gt;

&lt;p&gt;Ninjalar, gecenin karanlığında sessiz sedasız hareket ederler. Kimse ne yaptıklarını, nereden çıka geldiklerini bilmez. Geceleri çalışmayı çok severler.  Çok hızlıdırlar. Kolay kolay bildiklerini paylaşmazlar. Çünkü bildiklerini öğrenebilmek için çok acı çekmiş ve mücadele etmişlerdir. Para karşılığı yeteneklerini kiralarlar. Yalnız çalışmayı severler. Ketumlardır, tüm ahlak kurallarını yok sayabilirler; gecenin ve maskelerinin arkasına saklanarak hareket ederler. &lt;/p&gt;

&lt;p&gt;Samuraylar, onurları için yaşarlar. Savaş sanatını öğrenmek için en az ninjalar kadar mücadele etmişlerdir. Bir klana bağlıdırlar. Samuraylar arasında sağlam bir dayanışma vardır. Yeteneklerini inandıkları şey uğruna harcarlar. Saygınlık kazanmak için bildiklerini öğretmeyi borç bilirler. Yatay hiyerarşide olan bir usta-çırak ilişkileri vardır. Usta çıraktan, çırak ustadan birşeyler öğrenebilir. Kibirleri yoktur. Samuraylar için hayat ibretlerle dolu bir okuldur. Sanatla yakından ilgilenirler. Yardım severdirler. Genelde tanınır ve saygı duyulurlar.&lt;/p&gt;

&lt;p&gt;Samuraylar'ın Ninjalar'dan en büyük farkı bildiklerini saklamak yerine paylaşmalarıdır. Bu vasıfları sayesinde saygınlık kazanırlar. Ve diğer meziyetleri (yardımsıverlik vb) varsa da sevilirler.&lt;/p&gt;

&lt;p&gt;Aynı yaklaşımı tarih boyunca başka başka şekillerde görmemiz mümkündür. Osmanlı'da Derviş ve dergah yapılanmaları ile StarWars'ta Jedi'lar,  samurayların yapılanmalarına benzer. Belki bu yüzden açık kaynak dünya &quot;Star Wars&quot;u bir başka sever.&lt;/p&gt;

&lt;p&gt;Sanat ve bilim dünyasına bakarsak, adı ve şanı ile günümüze gelenlerde de aynı dayanışma ve paylaşımın olduğu görülmektedir. Bu konuda aklıma gelen ilk örnek Sezen Aksu'dur. Minik Serçe'nin sanatı ile ilgili yorum yapmak haddim ve bilgimin dahili dışında elbet. Sanat dünyasına verdiği ölümsüz eserler ise herkesçe aşikar. Ama O'nu ölümsüz sanatçı yapan eserleri dışında, öğrencileri ve destek verdiği insanlardır. Birçok kişiye yardım etmiş, beste ve güftelerini vermiştir. Bu hem kendisinin saygınlığını arttırmış, hemde eserlerine yeni renkler katmıştır.&lt;/p&gt;

&lt;p&gt;Müzik sektöründe benzer bir yaklaşım Rapçiler arasında da mevcuttur. Birbirlerinin albümlerinde bazı şarkılarına eşlik etmeleri (Feat) bu dayanışmaya küçük bir örnektir. RAP dünyasının tanınmış ustaları, çaylak RAPçilerin albümlerine eşlik ederek onların tanınmasına yardımcı olurlar. Bu da bu sanatçıların daha da saygı görmelerini sağlar.&lt;/p&gt;

&lt;p&gt;Ninjalar bu dayanışmayı anlayamaz. Rakibi olabilecek kişilere böyle bir yardımda bulunmasına ise anlam dahi veremez. Birilerine yardım edip nasıl para kazanabilirler ki diye düşünürler. Ama yakın tarihteki örneklere bakıldığında elbette para kazanılır. Bunun nedeni saygınlıktır. Saygınlık beraberinde yardımda getirir. Doğal bir reklam ağı oluşur ve insanların bu davranışlar hakkında konuşmasına neden olur.&lt;/p&gt;

&lt;p&gt;Çevremde zaman zaman ninjalarla karşılarım. Neden açık kaynak dünyayı bu denli sevdiğimi ve destek verdiğimi sorarlar. Zamanımı boşa harcadığımı düşünürler. Öğrendiklerimin çoğunu açık kaynak camia sayesinde öğrendiğimi anlatırım  ama anlamsız bulurlar. Sağdan soldan (internetten) öğrendikleri birkaç bilgiyi çok değerli görüp kimseyle paylaşmazlar. Bildiklerinin kölesi olan bu insanlara en güzel tokat, kafalarında devleştirdikleri bu bilgiyi çok kısa sürede öğrenerek, bildiklerine meydan okumak (daha iyisini yapmak) ve öğrenilenleri deneyimle harmanlayıp, tekrar ait olduğu yere topluluğa armağan etmektir…&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sanal Pos Kütüphanesi</title>
   <link href="http://hasanozgan.com/blog/2010/01/13/sanal-pos-kutuphanesi"/>
   <updated>2010-01-13T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2010/01/13/sanal-pos-kutuphanesi</id>
   <content type="html">&lt;p&gt;Tüm dünyada da aynı mıdır bilmiyorum ama Türkiye'de düşünmeyi sevmeyen ve sıcak para gelsinde nasıl olursa olsun diye düşünen bir girişimci kitlesi vardır. Bu kitlenin müdavimlerini çeşitli şekillerde gördük ve görmeye devam edeceğiz elbette. Buna birkaç örnek vermek gerekirse; Sucular, İnternet Kafeler ilk aklıma gelenlerden birkaçı.&lt;/p&gt;

&lt;p&gt;Birçok sektör gibi yazılım şirketlerinde de durum pek farklı değil. Türkiye'de her yazılımcı bir dönem Muhasebe yazılımları ile köşe olmayı düşünmüş ve bu alanda yazılımlar geliştirmiş ve sonunda batmıştır :) İşini hakkıyla yapan AirTies, SesTek, Sobee gibi şirketleri bunun dışında tutmak istiyorum tabii. Onlar gerçekten göğsümüzü kabartan güzel şirketler.&lt;/p&gt;

&lt;p&gt;Bu durum internet sektöründe de neredeyse böyle. Internet'te dönemsel olarak popüler olan konular hep olmuştur. Şirket sitesi yapanlar, e-ticaret sitesi yapanlar bunun en büyük örneği. E-ticaret belkide en zahmetli ve uçtan uca hizmet vermeyi gerektiren, güvene dayalı olduğu düşünülürse fırsatlar ve riskler kendini hemen belli eden bir konu olduğu halde, en çok uğraş verilen ve yukarıdaki saydıklarım göz önünde bulunmadan girilen bir iş modeli.  E-ticaret bu yazının ana konusu değil, bu yüzden e-ticaretin sorunlarına bu yazıda değinmeyeceğim. Ama bu kadar çok üzerinde konuşulan, araştırmalar yapılan ürünler geliştirilen sektörde neden &lt;a href=&quot;http://magentocommerce.com&quot;&gt;Magento&lt;/a&gt;, &lt;a href=&quot;http://opencart.com&quot;&gt;OpenCart&lt;/a&gt; gibi açık kaynak projelerin Türkiye'den çıkmadığını merak ediyorum doğrusu!? Tamam bu çok büyük bir proje ama hazır yemeğe alışan bizler defalarca POS kütüphanesi yazdığımız halde bunu neden açık kaynak kodlarını yayınlamıyoruz?!&lt;/p&gt;

&lt;p&gt;Türkiye'nin önde gelen birkaç e-ticaret platformunun altyapısını geliştirenlerden biri olarak bu soruyu kendime yönelttiğim de, en azından Türk yazılım camiasına böyle bir katkıda bulunmam gerektiğine karar verdim. İyimi ettim, kötü mü ettim zaman gösterecek elbette!. &lt;a href=&quot;http://vpos4php.googlecode.com&quot;&gt;Geliştirdiğim API&lt;/a&gt; kütüphanesinin kullanıcı rehberi belgeyi yakında tamamlayacağım. Bu konuda ki gelişmeleri &lt;a href=&quot;http://twitter.com/HasanOzgan&quot;&gt;@HasanOzgan&lt;/a&gt;(benim) ya da &lt;a href=&quot;http://twitter.com/dahius&quot;&gt;@dahius&lt;/a&gt;'un twitter hesabından takip edebilirsiniz.&lt;/p&gt;

&lt;h6&gt;Sanal Pos Kütüphanesi (&lt;a href=&quot;http://vpos4php.googlecode.com&quot;&gt;vpos4php&lt;/a&gt;)&lt;/h6&gt;

&lt;p&gt;Bu kütüphane aynı zamanda &lt;a href=&quot;http://pear.php.net&quot;&gt;PEAR&lt;/a&gt; kütüphanesi hazırlamaya, paketlemeye, &lt;a href=&quot;http://phing.org&quot;&gt;Phing&lt;/a&gt; ve &lt;a href=&quot;http://phpdoc.org&quot;&gt;phpDocumentory&lt;/a&gt; kullanımı için bir örnektir. &lt;a href=&quot;http://phpunit.de&quot;&gt;PHPUnit&lt;/a&gt;'de kullanımı ile ilgili örnekleri TestCase'lerinide ileride ekleyeceğim.&lt;/p&gt;

&lt;p&gt;Türkiye'de Sanal POS altyapısını sunan 2 firma bulunmaktadır. EST ve POSNET. Birçok banka bu iki firmanın altyapısını kullanır. EST altyapısını kullanan bankalara Garanti, İşbankası, Axess, HSBC, Finansbank; POSNET altyapısını kullanan bankalara ise YapıKredi örnek verilebilir. Yani bu firmaların API'lerini kullanan her bankada bu kodlar çalışacaktır. Başka bir şirketin yaptığı altyapıyıda desteklemek için dökümanı bana gönderebilirsiniz.&lt;/p&gt;

&lt;p&gt;Yapılan işlemler aşağı yukarı tüm POS altyapılarında aynı olunca bunları aynı veritabanları gibi tek bir arayüz üzerinden çalıştırmak gerekmektedir. İşte bunun için; projeyi geliştirilirken, tasarım kalıplarından(design patterns), fabrika (Factory Pattern) kullanılmıştır.&lt;/p&gt;

&lt;p&gt;Kütüphane aşağıdaki methodları desteklemektedir.
&lt;ol&gt;
&lt;li&gt;
	&lt;strong&gt;provision&lt;/strong&gt;($request) methodu, kredi kartından çekilen para miktarı, kart limitinden düşürülür. Ama hesabınıza geçmez. Bazı firmalar kart doğrulama gibi işlemler için bunu kullanırlar. Bankalar arasında farklılık gösterse de, eğer daha sonra &lt;strong&gt;disposal&lt;/strong&gt;  methodu ile finanslaştırılmazsa tutarın kart üzerindeki blokesi kaldırılır. &lt;br/&gt;3D secure işlemi desteklenir. 
&lt;/li&gt;
&lt;li&gt;
	&lt;strong&gt;sale&lt;/strong&gt;($request) methodu, $request nesnesi içerisinde belirtilen tutar kredi kartı limitinden düşürülür ve hesabınıza geçer. &lt;br/&gt;3D secure işlemi desteklenir.
&lt;/li&gt;
&lt;li&gt;
	&lt;strong&gt;disposal&lt;/strong&gt;($request) methodu, daha önce &lt;strong&gt;provision&lt;/strong&gt; methodundan geri dönen işlem numarası (transactionId) ile birlikte finanslaştırmaya yarar. Yani daha önce kart limitinizden düşürülen para hesabınıza geçer. 
&lt;/li&gt;
&lt;li&gt;
	&lt;strong&gt;reversal&lt;/strong&gt;($request) methodu, daha önce &lt;strong&gt;disposal&lt;/strong&gt; ya da &lt;strong&gt;sale&lt;/strong&gt; methoduyla finanslaştırdığınız işlemlerde kısmi iadeler yapmayı sağlar. Yani fiyatı güncelleştirebilirsiniz.
&lt;/li&gt;
&lt;li&gt;
	&lt;strong&gt;refusal&lt;/strong&gt;($request) methodu, daha önce yaptığınız bir işlemi iptal etmeyi sağlar.
&lt;/li&gt;
&lt;li&gt;
	&lt;strong&gt;complete&lt;/strong&gt;($request) methodu ise, 3DSecure işlemlemini tamamlamayı sağlar.
&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;

&lt;p&gt;Bu api ile ilgili her türlü sorularınızı bana yöneltebilirsiniz. Fırsat buldukça size yardım etmeye çalışacağım.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://vpos4php.googlecode.com&quot;&gt;vpos4php&lt;/a&gt; kütüphanesinin proje sayfasına &lt;a href=&quot;http://code.google.com/p/vpos4php/downloads/list&quot;&gt;buradan&lt;/a&gt; indirebilirsiniz.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Linux Dosya Indeksleri (inode) ve Sistem Mimarisi</title>
   <link href="http://hasanozgan.com/blog/2010/01/09/linux-dosya-indeksleri-inode-ve-sistem-mimarisi"/>
   <updated>2010-01-09T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2010/01/09/linux-dosya-indeksleri-inode-ve-sistem-mimarisi</id>
   <content type="html">&lt;style&gt;
	.info {
		border: none;
		margin: 3px;
		text-align: left;
		width: 500px;
	}
&lt;/style&gt;

&lt;p&gt;Birkaç gündür &lt;a href=&quot;http://kissa.be&quot;&gt;kissa.be&lt;/a&gt; servisinin bulunduğu sunucu, diskte yer yok hatası nedeniyle düzgün bir şekilde hizmet veremiyordu. Durumu farkeder farketmez, diskteki yerimi kontrol ettiğimde gördüm ki; diskin %80'lik bir bölümü halen boş. Sorunun sunucu hizmeti aldığım firmayla görüşünce, anlaşıldı ki, diske format atarken varsayılan değerlerini aynen kabul ettiğim dosya indekslerimin (inode size) tükendiği için bu hatayı aldığım anlaşıldı.&lt;/p&gt;

&lt;p&gt;Diskte mevcut inode sayısını görmek için;&lt;/p&gt;

&lt;blockquote&gt;
	&lt;table class=&quot;info&quot;&gt;
		&lt;tr&gt;
			&lt;td colspan=&quot;5&quot;&gt;&lt;p&gt;root@localhost:~#&lt;strong&gt; df -ih&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;th&gt;Filesystem&lt;/th&gt;
			&lt;th&gt;Inodes&lt;/th&gt;
			&lt;th&gt;IUsed&lt;/th&gt;
			&lt;th&gt;IFree&lt;/th&gt;
			&lt;th&gt;IUse%&lt;/th&gt;
			&lt;th&gt;Mounted on&lt;/th&gt;		
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;/dev/sda&lt;/td&gt;
			&lt;td&gt;680K&lt;/td&gt;
			&lt;td&gt;21K&lt;/td&gt;
			&lt;td&gt;660K&lt;/td&gt;
			&lt;td&gt;3%&lt;/td&gt;		
			&lt;td&gt;/&lt;/td&gt;		
		&lt;/tr&gt;	
		&lt;tr&gt;
			&lt;td&gt;/dev/sdc&lt;/td&gt;
			&lt;td&gt;1.3M&lt;/td&gt;
			&lt;td&gt;25K&lt;/td&gt;
			&lt;td&gt;1.2M&lt;/td&gt;
			&lt;td&gt;2%&lt;/td&gt;		
			&lt;td&gt;/files	&lt;/td&gt;		
		&lt;/tr&gt;
	&lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;Diskteki mevcut boş alanı görmek için ise;&lt;/p&gt;

&lt;blockquote&gt;

	&lt;table class=&quot;info&quot;&gt;
		&lt;tr&gt;
			&lt;td colspan=&quot;5&quot;&gt;&lt;p&gt;root@localhost:~#&lt;strong&gt; df -h&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;th&gt;Filesystem&lt;/th&gt;
			&lt;th&gt;Size&lt;/th&gt;
			&lt;th&gt;Used&lt;/th&gt;
			&lt;th&gt;Avail&lt;/th&gt;
			&lt;th&gt;Use%&lt;/th&gt;
			&lt;th&gt;Mounted on&lt;/th&gt;		
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;/dev/sda&lt;/td&gt;
			&lt;td&gt;11G&lt;/td&gt;
			&lt;td&gt;741M&lt;/td&gt;
			&lt;td&gt;9.5G&lt;/td&gt;
			&lt;td&gt;8%&lt;/td&gt;
			&lt;td&gt;/&lt;/td&gt;		
		&lt;/tr&gt;	
		&lt;tr&gt;
			&lt;td&gt;/dev/sdc&lt;/td&gt;
			&lt;td&gt;4.8G&lt;/td&gt;
			&lt;td&gt;960M&lt;/td&gt;
			&lt;td&gt;3.6G&lt;/td&gt;
			&lt;td&gt;21%&lt;/td&gt;
			&lt;td&gt;/files&lt;/td&gt;		
		&lt;/tr&gt;
	&lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://kissa.be&quot;&gt;Kissa.be&lt;/a&gt; resim ve metin gibi dosyaları saklamanıza yarayan bir servis olduğu için çok küçük oranlarda çok fazla dosya bulundurabiliyor bünyesinde. Bu da dosya indeks limitimin hızlı bir şekilde tükenmesine neden olmuştu. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://kissa.be&quot;&gt;Kissa.be&lt;/a&gt;'nin bulunduğu bir önceki sunucu da (Debian 4.0) bir dosya için ayrılması düşünülen dosya indeks boyutu (bytes-per-inode) 4096 ve dosya indeks alanı ise 128 idi. Şuan mevcut sunucumda (Ubuntu 9.10) ise varsayılan kurulum ayarları (8096 / 128) olarak geliyor.&lt;/p&gt;

&lt;p&gt;Diskinize ait inode ve block gibi değerleri görmek için;&lt;/p&gt;

&lt;blockquote&gt;
	&lt;table class=&quot;info&quot;&gt;
		&lt;tr&gt;
			&lt;td colspan=&quot;2&quot;&gt;&lt;p&gt;root@localhost:~#&lt;strong&gt; tune2fs -l /dev/sdc&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;th&gt;Inode count:&lt;/th&gt;
			&lt;td&gt;1280000&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;th&gt;Free inodes:&lt;/th&gt;
			&lt;td&gt;1255224&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;th&gt;Inodes per group:&lt;/th&gt;
			&lt;td&gt;32000&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;th&gt;Inode blocks per group:&lt;/th&gt;
			&lt;td&gt;1000&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;th&gt;Inode size:&lt;/th&gt;
			&lt;td&gt;128&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sorunu tespit ettikten sonra çözüm bulmak gerçekten çok kolay oluyor. Linux'ta kissa.be servisine özel bir disk alanı gerekiyordu. Sunucuda inode değerleri ihtiyacıma göre olan bir alan yaratınca sorun kökten çözüldü. Böylece sunucunun işletim sistemi bu durumdan hiç etkilenmedi. &lt;/p&gt;

&lt;p&gt;Diski inode değerlerine göre yeniden biçimlendirirken;&lt;/p&gt;

&lt;blockquote&gt;

 root@localhost:~# &lt;strong&gt;mkfs.ext3 -i 4096 -I 128 /dev/sdc&lt;/strong&gt;
&lt;/blockquote&gt;

&lt;p&gt;Aslında bu konularda uzman biri olduğumu pek söyleyemem. Çok anlamam ama, linux sistemiyle uğraşmayı, sistem programlama konularını seviyorum. &lt;/p&gt;

&lt;p&gt;Yazının ana fikrine gelecek olursak;&lt;/p&gt;

&lt;p&gt;Eğer kissa.be heveskar bir gencin projesi değil de, bit.ly gibi planlı bir proje olsaydı, gereksinim analizini okuyan bir Sistem Mimari servise ait dosyaları barındıran diskin formatlanması konusunda inode detayını atlamazdı.&lt;/p&gt;

&lt;p&gt;Yaşadığım bu olay, bugün öğrendiğim küçük bir ders oldu!...&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Pratisyen Hekim veya Kalp Cerrahı Olmak</title>
   <link href="http://hasanozgan.com/blog/2009/12/03/pratisyen-hekim-veya-kalp-cerrahi-olmak"/>
   <updated>2009-12-03T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2009/12/03/pratisyen-hekim-veya-kalp-cerrahi-olmak</id>
   <content type="html">&lt;p&gt;Amerika'ya geldiğimde zilyon tane işe zilyon kere CV gönderdim. Bu iş görüşmeleri sırasında kendimi değerlendirme ve sorgulama fırsatı buldum. Ne bildiğim, ne bilmediğim, amacımın ne olduğu, 3 yıl sonra kendimi nerede görmek istediğim gibi sorulara cevaplarım bu sayede netleşti. Hatta bir firmaya bu sorular için FAQ (sıkça sorulan sorular) formatında bir belge sunduğumu bile hatırlıyorum :) Bununla birlikte, şirketlerin işleyişi ve beklentileri hakkında genel bir fikir sahibi de oldum. Bu görüşmelerin neticesinde; ya onlar sizi, ya da siz onları beğenmezsiniz.&lt;/p&gt;

&lt;p&gt;Kendinize bir kariyer yolu belirlediğinizde, size başka teklifler  sunarak bu yoldan caydırmaya çalışanlar olur. Ve teklif çok ilgi çekici ve mantıklı geliyorsa yolunuzdan cayabilirsiniz. Aslına bakarsanız, iş hayatımın bir bölümünde bu olay defalarca tekerrür etti. Gel-gitlerin ardından nihayet en sevdiğim iş bu benim hayatımın amacı dediğim şeyi buldum. İşte bu kararı verdiğim günlerde başımdan geçen bir olayı paylaşacağım.&lt;/p&gt;

&lt;p&gt;Hikayemiz, her zaman gittiğim kafede çalışırken, telefonumun çalmasıyla başlıyor. Arayan Amerikan'ın en saygın medya şirketlerinden biriydi. Görüşmek istediklerini bildirdiler ve beraber ertesi gün 13:45 için randevuleştik. Ne kadar heyecanlandığımı anlatamam. Sonuçta çok saygın bir kurumda çalışma şansım vardı, helede krizin dorukta olduğu şu günlerde...&lt;/p&gt;

&lt;p&gt;Görüşmenin olacağı gün, giydiklerime her zaman gösterdiğimden biraz daha fazla özendim. Traştan iyice tahriş olan yüzümü bir kez daha acımasız davrandım. Arabamın çıkardığı küçük sorunla birlikte başlayan geç kalma telaşıma rağmen tam zamanında şirket binasının önüne gelmiştim. Çok merkezi bir yerde, görkemli ve son derece teknolojik bir binaydı.&lt;/p&gt;

&lt;p&gt;Kimliğimi verdim. Ziyaretçi bilgilerimi bilgisayara giren resepsiyon görevlisinin, gizlice fotoğrafımı çekmesinden rahatsız olsam da birşey söylemeden kartımı aldım ve hızla görüşeceğim kişinin ofisine gittim. Beni asistanı karşıladı ve biraz beklememi rica etti. Küsuratlı bir randevu saati verdiklerinde, dakikaları değerli ve dakik bir adam hayal etmiştim. Benden önceki görüşmesi geldikten yarım saat sonra nihayete erdi. Görüşmeye başlayacağımızı düşünürken; benden özür dileyip, beş dakikalığına birini görmesi gerektiğini söyledi ve yarım saat sonra geri döndü. Anlayacağınız benim görüşmem bir saat rotarlı başladı. Sinirlense de, insan, olabilir, insanlık hali diyorsunuz değil mi? Bende öyle dedim. Taa ki görüşme ortasında gelen telefon görüşmesinin 10 dk sürmesini seyirci olana kadar. Türkiye'ye söyleniriz ama ben böyle saygısızlık görmedim ülkemde.&lt;/p&gt;

&lt;p&gt;Görüşmelerde, insanı germezsiniz rahatlatmaya çalışırsınız değil mi? Daha mülakatın birinci dakikasında &quot;keşke üniversite eğitimini tamamlasaydın, niye üniversiteyi terketmişim&quot; gibisinden akıl hocalığına başlaması ve beni azarlaması ve sonrada bak senin uğraştığın bu alanlarda ben de master tezi veriyorum demesi son derece rahatsızlık vericiydi. Belki son derece iyi niyetliydi ama bana yukarıdan bakan bir züppe imajı verdi. Züppe tavrı, şirkette yatay bir hiyerarşi var diye başlayan cümlelerini yalanlar niteliğindeydi. Görüşmelerin bir yerinde verdiğim bir yanıttan sonra aradığının idealist bir yazılımcı değilde ne iş olsa yaparım abi tipinde adamlar olduğunu anladım. İşte bu andan itibarent anlattıklarımı dinlemediğini farkettim.İşte dedim; beni kariyer yolumdan saptırmaya çalışacak bir şirket daha.&lt;/p&gt;

&lt;blockquote&gt;
Devasa büyüklükte ki şirketler; sadece geminin gitmesi için ne gerekiyorsa, ürün güdümlü olarak, yapılan işi, detaylı düşünmeden ve hazır sistemler üzerine inşa ederek, bir şekilde çalışsın da, yolda düzeltiriz anlayışına sahip şirketlerdir. Özelliklerinden biri dev aile şirketi olmalarıdır. Ve yaratıcılık ve yenilikçi düşünceyi destekleyecek bir yapı bulamazsınız bu şirketlerde. O kadar hantal bir karar süreçleri vardır ki, departmanların birbirinden haberi pek yoktur. Bilgi akışı şeffaf değildir. Sadece günü kurtaracak ve her işten anlayan sektörde süper kahraman olarak anılan ama bence  pratisyen doktor olan adamlar çalıştırırlar.  Şirket herşey hakkında fikri olan ama hiçbirşeyi adam gibi bilmeyenlerle doludur. &lt;a href=&quot;http://kaanaslan.com&quot;&gt;Kaan Aslan&lt;/a&gt; bu adamlara &lt;a href=&quot;http://www.fazlamesai.net/?a=article&amp;sid=3102&quot;&gt;ürün güdümlü programcı&lt;/a&gt; dediğini &lt;a href=&quot;http://fazlamesai.com&quot;&gt;fazlamesai.com&lt;/a&gt;'u takip edenler hatırlayacaktır. Sanırım bu devasa şirketlerin innovatif şeyler çıkartamamasının sebebi, kendi içinde iş bölümü ve uzmanlaşma gibi konulara sıcak bakmadıklarından kaynaklanıyor. Eğer departmanın yöneticileri de bunun önemi için mücadele etmiyorsa vay o şirketin çalışanlarının haline. Tabii bu şirketlerin bir medya şirketi olması ve &quot;innovasyonda ne ki la!?&quot; &quot;bana ne gerek sütlü börek la!?&quot; gibi cümlelerle, rakiplerine yukarıdan bakması ve internet gibi bir ortamda bulunupa bu sosyal gücü farketmemiş olması yazık bu şirketlere dedirtmiştir.&lt;/blockquote&gt;

&lt;p&gt;Mülakatıma geri döneyim, önce bana şirkette, web projesi yapmaktan - çöp kutusu dökmeye kadar herşeyi yaptıklarından söz ettiler. Önce beni şaşırtmayan bu cümlenin devamı çok ilginç olmaya başlamıştı (burada bir çalışanımız, tasarımda yapar, masaüstü uygulamasıda yapar, iphone uygulaması da). Beni tanıyanlar bunların hepsi ile uğraştığımı ve yapabileceğimi bilir. Yani tam bir pratisyen hekim gibiyimdir ama bu bilgilerim işimi halledecek seviyede ve yüzeyseldir. Yoksa bir tasarımcının yaptığı işi yapmak haddime düşmez!&lt;/p&gt;

&lt;p&gt;Mülakatı yapan kişi söyledikleri konusunda beni ikna etmek için, bilimlerin birbirinden etkilendiği ile ilgili bir örnek verdi. Buna bende inanırım. Sadece bilimler değil sanat bile bilimden etkilenir. Bakınız (Leonardo da Vinci). Eğer benim konuşmama izin verseydi, Palm'ın kurucusu Jeff Hawkins'in Zeka isimli kitabında da bundan söz ettiğini söyleyecektim. Jeff Hawkins kitabında; yapay zeka üzerine çalışma yapan bilim adamlarının sadece kendi branşlarında araştırma yaptığını aslında bunları ayrı ayrı değil birlikte değerlendirmek gerektiğinden söz eder. Masaüstü, Web ve Mobil bambaşka paradigmalara sahip, başka patternlere ve spec'lere sahip olan konulardır. Ve özünde birbirinden farklı uzmanlık alanı gerektirir. İyi işler çıkaranlar bunların üçüyle de aynı anda uğraşmazlar. En azından ben görmedim. Farklı bilimlerden beslenmek gerekir. Aynı bilimin farklı kolları bize bunu sağlamaz. &lt;/p&gt;

&lt;p&gt;Mülakat benim için ve onlar için bitmişti ama son olarak beni yazılım ekip müdürleri ile görüştürme kararı aldılar. Aradıkları adam ben değildim ama bu komedinin nereye gideceğini de merak ediyordum. &lt;/p&gt;

&lt;p&gt;İşe gerçekten ihtiyacım olduğu halde; bu sefer kariyer yoluma sadık kalmaya kararlıydım. Ve bir pratisyen doktor değil de kalp cerrahı olmak istediğimi ve yol haritamdan söz ettim. Hak verdiğim tek nokta onların aradığı benim olmak için çalıştığım adam değildi. Onlara bolca pratisyen hekim gerekiyordu. Memur zihniyetli, gelişimek için yukarıdan gelen bilgi ile yetinen, bilgiyi edinmek için özel uğraş vermeyen adamlar. Beni ikna etmeyi son kez deneyen yazılım ekip lideri bana neden bu kadar dil ile yazılım yazdığımı sordu. Öyle ya!, neden tek bir dil ile uzmanlığımı pekiştir miyordum? Sorular önemlidir! Ama bana halen yanlış sorular soruluyordu. Tüm uğraştığım dillerde web geliştirdiğimi söyledim. Sonra lafı arabalara getirdim. Arabalara ilgi duyduğumudan söyledim. Grande Punto sahibiyim ama arada Porche, Ferrari, BMW, Mercedes gibi araçlarıda denerim. Belki onları alacak kadar gücüm yok ama otomobil kullanmayı severim. Programlama dilleri arabalar gibidir. Doğru yolda doğru aracı seçmek gerekir. Bu kadar programlama dili ile ilgilenmiş olmam, bu kadar framework incelemiş olmam benim perspektifimi geliştirmek içindir. Bunlar beni pratisyen hekim olduğumu göstermez.&lt;/p&gt;

&lt;p&gt;Gönül isterdi ki, web konularından (güvenlik, ölçeklenbilirlik, verimlilik ve mimarile vb) söz edilseydi. Bunları konuştuğumda gözlerimde oluşan ışıltıyı görmelerini çok isterdim. (:&lt;/p&gt;

&lt;p&gt;Sonuçta insan eğlendiği işi yapmalı öyle değil mi? Bence pratisyenlik, uzmanlık konunuza karar verene kadar geçirdiğiniz zaman dilimidir. Eğer pratisyen hekim olmak sizi yaparken eğlendiriyorsa doğru yoldasınız ama ben uzmanlığımı seçtim cerrah olma yolunda tam gaz ilerliyorum. Hem de kalp cerrahı :P&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Friendfeed List Editor (ffedit.com) v.0.1 Yayında</title>
   <link href="http://hasanozgan.com/blog/2009/10/21/friendfeed-list-editor-ffeditcom-v01-yayinda"/>
   <updated>2009-10-21T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2009/10/21/friendfeed-list-editor-ffeditcom-v01-yayinda</id>
   <content type="html">Açık kaynak olarak geliştirilen ffedit.com v.0.1 yayında. Bir friendfeed servisi olan ffedit.com'un toplu olarak besle listesi üyeliklerinizi yönetmenizi sağlıyor.

&lt;a href=&quot;http://www.hasanozgan.com/wp-content/uploads/2009/10/ffedit-logo.png&quot;&gt;&lt;img class=&quot;alignnone size-medium wp-image-52&quot; title=&quot;ffedit-logo&quot; src=&quot;http://www.hasanozgan.com/wp-content/uploads/2009/10/ffedit-logo.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;142&quot; /&gt;&lt;/a&gt;

&lt;a href=&quot;http://ffedit.com&quot;&gt;http://ffedit.com&lt;/a&gt; adresinden deneyebilir, &lt;a href=&quot;http://ffedit.googlecode.com&quot;&gt;http://ffedit.googlecode.com&lt;/a&gt; adresinden de kaynak kodlarını inceleyebilirsiniz.
</content>
 </entry>
 
 <entry>
   <title>"Özgür İnternet Bildirgesi" İmza Kampanyası</title>
   <link href="http://hasanozgan.com/blog/2009/10/07/ozgur-internet-bildirgesi-imza-kampanyasi"/>
   <updated>2009-10-07T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2009/10/07/ozgur-internet-bildirgesi-imza-kampanyasi</id>
   <content type="html">Mustafa Akgül hocanın epostası ile haberdar olduğum ve sonuna kadar inandığım &quot;Özgür İnternet Bildirgesi&quot; İmza Kampanyasına katkıda bulunmak her internet aşığının görevi diye düşünüyorum (:
&lt;blockquote&gt;&lt;span style=&quot;font-size: x-small;&quot;&gt;21 Eylül'de ABD'de FCC başkanının &quot;net netrality&quot; hakkında konuşmasına paralel olarak AB bünyesinde bir imza kampanyası başlarıldı.

Sizinde katılabileceğiniz bu kampanyada İmzaya açılan &quot;Özgür İnternet&quot; Bildirgesi:

1. İnternet kullanıcılarının kendi seçtikleri içeriğe erişmek, almak ve göndermek haklarıdır.
2. İnternet kullanıcılarının herhangi bir içerik, uygulama ve servisi kullanmak ve çalıştırmak hakkıdır.
3. İnternet kullanıcılarının, ağa zarar vermeyen her yazılıma ve donanıma ağ üzeriden bağlanmak hakkıdır.
4. İnternet kullanıcıların erişim, uygulama, servis ve içerik sağlayıları arasında rekabet içinde seçim yapmak hakkıdır.
5. İnternet kullanıcılarının uygulama, içerik, servis, alıcı ve gönderici adresine nedeniyle ayrımcılığa uğramadan internete bağlanmak hakkıdır. Genişbant erişim sağlayıcıların kendi ağları üzerinde trafiği engelleyemez ve yavaşlatamaz, veya aboneye bağlantısında bazı uygulama ve içeriği diğerleri üzerinden tercih ederek, kazananları belirleyemez. Kendi sunduğu bir servisle rekabet ettiği için bir servise ayrımcılık yapamaz.
6. İnternet erişim sağlayıcıları ağ yönetiminde saydam olmalıdır. İnternet kullanıcısının önceden tanımlanan kapasite ve kalitede internet bağlantısı hakkıdır.

Bu ilkeler Avrupa Birliği ve Ulsual yasalarca kutsanmalı, ve ilgili makamlar tarafından Avrupa çapında tutarlı bir şekilde uygulanmalıdır.

&lt;a href=&quot;http://mail.sahibinden.com/exchweb/bin/redir.asp?URL=http://www.euopeninternet.eu/open-internet/&quot; target=&quot;_blank&quot;&gt;http://www.euopeninternet.eu/open-internet/&lt;/a&gt;&lt;/span&gt;

&lt;em&gt;
&lt;/em&gt;&lt;/blockquote&gt;
&lt;strong&gt;Susturun Geveze Meftamı
&lt;/strong&gt;

internet tüm dünyada özgür
neden ülkemde uygulanır sansür
düşüncelerimi yasaklayacağını sanmak
nasıl bir zekanın ürünüdür

internet globaldir ve hür
avrupalı olacağız dersin gür gür
seni bu kafayla avrupa’ya alacak
hürriyet bilmez bir dürzüdür

sanki bu yasaklar kötü bir düştür
meddah bu durumdan üzgündür
sazım var, kırsanda kalemimi be ahmak!
haksızlığa türküler yakacağım gündür

mahpus yattığında yanındaki güldür
eskiyi unutman beni pek düşündürür
interneti yasaklamak, hayatı yasaklamak
geveze meftanın ölüm sebebi iki yüzündür

&lt;span style=&quot;font-size: x-small;&quot;&gt;
&lt;/span&gt;
</content>
 </entry>
 
 <entry>
   <title>Temiz PHP Dünyası</title>
   <link href="http://hasanozgan.com/blog/2009/09/16/temiz-php-dunyasi"/>
   <updated>2009-09-16T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2009/09/16/temiz-php-dunyasi</id>
   <content type="html">&lt;img class=&quot;alignleft size-full wp-image-192&quot; title=&quot;preview&quot; src=&quot;http://www.hasanozgan.com/wp-content/uploads/2009/09/preview.jpg&quot; alt=&quot;preview&quot; width=&quot;158&quot; height=&quot;158&quot; /&gt;Temizlik deyince bu yazıda Vim’den  de söz edildiği gelmesin! :P  &lt;em&gt;(belki daha sonra)&lt;/em&gt;

PHP 5.2 ile beraber &lt;a title=&quot;http://tr.php.net/filter_var&quot; href=&quot;http://tr.php.net/filter_var&quot;&gt;filter_var&lt;/a&gt; isimli bir fonksiyon  hayatımıza girmiş. Güvenlik için gerekli olan bu method veri girdilerini  tiplerine göre filtrelemeyi sağlıyor.

&lt;a title=&quot;http://net.tutsplus.com/tutorials/php/getting-clean-with-php/&quot; href=&quot;http://net.tutsplus.com/tutorials/php/getting-clean-with-php/&quot;&gt;http://net.tutsplus.com/tutorials/php/getting-clean-with-php/&lt;/a&gt;

&lt;strong&gt;&lt;em&gt;filter_var&lt;/em&gt;&lt;/strong&gt; kullanalım,  kullandıralım!
</content>
 </entry>
 
 <entry>
   <title>REST: Geleceğin Web Mimarisi</title>
   <link href="http://hasanozgan.com/blog/2009/09/16/rest-gelecegin-web-mimarisi"/>
   <updated>2009-09-16T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2009/09/16/rest-gelecegin-web-mimarisi</id>
   <content type="html">Dün şirketten arkadaşlarla molada iken, Ruby ile büyük  proje yazılıp yazılamadığı ile ilgili mini bir tartışma yapmıştık. Ruby'nin yavaşlığını bilen biri olarak, olmaz diye  bağıran adamların başında da ben geliyordum. Sonra Ruby haber gruplarında çokça  adını duyduğum &lt;a href=&quot;http://www.sinatrarb.com/&quot;&gt;Sinatra&lt;/a&gt; isimli kütüphaneyi inceleyince Ruby ile yeni web mimarisi  ile çok güçlü web uygulamaları yazılabileceğini  gördüm.

&lt;img class=&quot;alignleft size-full wp-image-186&quot; title=&quot;20090915-6xfj7cp1kx6w884tqw29yk2k4&quot; src=&quot;http://www.hasanozgan.com/wp-content/uploads/2009/09/20090915-6xfj7cp1kx6w884tqw29yk2k4.jpg&quot; alt=&quot;20090915-6xfj7cp1kx6w884tqw29yk2k4&quot; width=&quot;330&quot; height=&quot;246&quot; /&gt;

&lt;img class=&quot;alignleft size-full wp-image-185&quot; title=&quot;20090915-c8trr5mh7ukbhg6eukptwsuq3r&quot; src=&quot;http://www.hasanozgan.com/wp-content/uploads/2009/09/20090915-c8trr5mh7ukbhg6eukptwsuq3r.jpg&quot; alt=&quot;20090915-c8trr5mh7ukbhg6eukptwsuq3r&quot; width=&quot;330&quot; height=&quot;246&quot; /&gt;

&lt;a title=&quot;http://www.quirkey.com/blog/2009/09/15/sammy-js-couchdb-and-the-new-web-architecture/&quot; href=&quot;http://www.quirkey.com/blog/2009/09/15/sammy-js-couchdb-and-the-new-web-architecture/&quot;&gt;Bu  yazıyı&lt;/a&gt; okuyunca ve Gmail’in de böyle çalıştığını ve bunu yapmanın bize bir  tık kadar uzakta olduğunu görünce heyecanlandım.

Bu güzel bilgiyi sizlerle de  paylaşayım dedim.  Yukarıdaki görselle her şey yerlerine  oturdu.

&lt;strong&gt;Anahtar  Kelimer;&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a title=&quot;http://en.wikipedia.org/wiki/Representational_State_Transfer&quot; href=&quot;http://en.wikipedia.org/wiki/Representational_State_Transfer&quot;&gt;Restfull  teknolojisi&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a title=&quot;http://couchdb.apache.org/&quot; href=&quot;http://couchdb.apache.org/&quot;&gt;Document Oriented DB&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a title=&quot;http://hadoop.apache.org/&quot; href=&quot;http://hadoop.apache.org/&quot;&gt;MapReduce&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a title=&quot;http://code.quirkey.com/sammy/&quot; href=&quot;http://code.quirkey.com/sammy/&quot;&gt;JS  Router/Controller&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>MacBook Üzerine Ubuntu 9.04 Kurulumu</title>
   <link href="http://hasanozgan.com/blog/2009/09/05/macbook-uzerine-ubuntu-904-kurulumu"/>
   <updated>2009-09-05T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2009/09/05/macbook-uzerine-ubuntu-904-kurulumu</id>
   <content type="html">Uzun süredir Macbook almayı düşünüyordum. Bir arkadaşımın önerisiyle sahibinden.com sitesi üzerinden, bütçeme uygun bir &quot;Macbook 3,1&quot; satın aldım. Herşeyine yabancı olduğum PC dünyasından farklı ama ince düşünülmüş tasarımıyla çok güzel bir makine. Önerilerle birkaç yazılımı hemen yükledim. Ama geliştirme ortamı MAMP(macosx, apache, mysql ve php) kurulumu yaptım. Terminal üzerinde vim ile PHP kodları geliştiriyordum. Fakat, Turkish-Q klavyede @ işaretinin ALT+Q tuşu ile çıkıyor olmasından ve CMD+Q tuşununda uygulamayı sonlandırmak için ayarlanmasından dolayı kod yazarken biraz içerik kaybettim. (Belkide English-Q klavyeye geçmeliydim)

Virtualbox sanal makine uygulaması üzerine Ubuntu kurmama rağmen onunda kendi dertleri yok değildi. Macports ve Fink paket kurma uygulamalarıda aptitude ile kıyaslanamaz kötü ve yetersiz olduğunu söylemem gerek.

Projenizde sizin macbook'a alışmanızı bekleyemeyecek durumdaysa; &quot;insanın sabır küpü&quot; pek fazla dayanmıyor. Şuan size bu satırları Ubuntu üzerinden yazan biri olarak şunları söylemeliyim ki&lt;strong&gt;, &lt;/strong&gt;&lt;span class=&quot;status-body&quot;&gt;&lt;span class=&quot;entry-content&quot;&gt;&lt;strong&gt; &lt;em&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;status-body&quot;&gt;&lt;span class=&quot;entry-content&quot;&gt;&lt;strong&gt;&lt;em&gt;&quot;Macintosh'tan başka bilgisayar almam ama geliştirme ortamında ise Linux'tan şaşmam!&quot;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;

Peki niyetim dual boot olarak MacOSX ve Ubuntu'yu birlikte çalıştırmaktı. Elimde ise tek bir partition vardı ve OSX kurmak içinde Leopard kurulum cd'si yoktu. Yani OSX'i silmeden ve partition yaratarak kurmam gerekiyordu. Araştırmalarım sonucunda Apple'ın BootCamp Assitant adında bir yazılımı olduğunu ve bunun partition'da yer açabileceğimi öğrendim. Ama bu yazılım MacOS 10.4 (Tiger) sürümü ile Mac üzerine kuruluyor. Leopard ile önce windows'a kurulan bir sürümü (v.2) olduğunu öğrendim. İndirdiğim tüm Bootcamp Assitant 2.0 uygulamalarında windows sürücüleri çıktı. Ubuntu'yu kurduğunuza wireless ethernet kartı tanımadığını gördüğünüzde çözümününde bu sürücülerden geleceğini bilmeniz yeterli.

Neyse bu kadar boş laf yeter. Bugün tek partitionlı Mac OS X Leopard olan bir işletim sistemine nasıl Ubuntu kurabildiğimi anlatacağım.
&lt;ol&gt;
	&lt;li&gt;İlk olarak MacOS'u güncelleyin. (Özellikle firmware paketini güncellemeniz önemli. Bu sayede rEFIt çalışabilir.)&lt;/li&gt;
	&lt;li&gt;HFS+ dosya sistemi ile biçimlendirilmiş external bir harddiske ihtiyacınız var.&lt;/li&gt;
	&lt;li&gt;Macbook diskini bölümlere ayırmak için BootCamp bulamadıysanız yapmanız gereken işletim sisteminin yedeğini harici bir diske kopyalayıp bu diskten bilgisayarı &lt;a rel=&quot;nofollow&quot; href=&quot;http://refit.sourceforge.net/&quot; target=&quot;_blank&quot;&gt;rEFIt&lt;/a&gt; yardımıyla başlatmak. rEFIt MacOS'un dualboot için geliştirdiği EFI desteğini gayriresmi olarak ubuntu tarafından kopyalamıza yardımcı olur.&lt;/li&gt;
	&lt;li&gt;&lt;a rel=&quot;nofollow&quot; href=&quot;http://www.bombich.com/software/ccc.html&quot; target=&quot;_blank&quot;&gt;Carbon Copy Cloner&lt;/a&gt; yazılımı yardımıyla tüm diskin bir başlatılabilir bir klonu alınır. Bu işlem diskinizin büyüklüğü ile orantılı olarak uzun sürer. :)&lt;/li&gt;
	&lt;li&gt;Kopyalama işlemi tamamlanınca bilgisayar yeniden başlatıldığında rEFIt yazılımının menüsünün  yardımıyla harici diskten MacOS başlatılır.&lt;/li&gt;
	&lt;li&gt;Finder içinden Applications / Utilities / Disk Utility uygulaması başlatılır. MacBook hard diski seçilir gelen formdan Partition sekmesine tıklanır ve bölümlendirme sırasıyla Windows için DOS dosya sistemi, Linux için DOS dosya sistemi ve geri kalan alan ise MacOS için HFS+ dosya sistemi ile biçimlendirilir. DOS dosya sistemleri sadece disk alanı açmak içindir. Sonra Windows için NTFS linux için ise ext ve swap alanları için yeniden bölümlendirileceklerdir.&lt;/li&gt;
	&lt;li&gt;Carbon Copy Cloner yazılımı ile harici diskten macos için ayırdığınız bölüme geri kopyalayın.&lt;/li&gt;
	&lt;li&gt;Ubuntu CD'si ile kurulumu yaparken dikkat etmeniz gereken, ubuntu için ayrılan alanda duran DOS dosya sistemini kaldırıp sırasıyla, linux dosya sistemlerini elle ayarlamanız gerektiğidir. Bootloader'ı MBR'a kesinlikle kurmamanız gerekir bu sebeple 100MB alanı /boot olarak mount edin. 2-3 gb alanı swap ve geri kalan alanıda ext4 (gerçekten hızlı) ile bölümlendirin. Kurulumdan bir önceki onay sayfasında Advanced menüsünden bootloader'ın MBR yerine yarattığınız sda2(/boot) alanına kurulumunu sağlamalısınız.&lt;/li&gt;
	&lt;li&gt;Son olarak isterseniz, Windows kurulumu yapabilir ve BootCamp ile önerilen işlemleri yapabilirsiniz. Fakat ben bu kısıma girmeyeceğim.&lt;/li&gt;
	&lt;li&gt;Sonra bilgisayarı yeniden başlatıyoruz ve görüyoruz ki rEFIt menüsünde MacOS ve Linux logoları bizi selamlıyor. Tebrikler kurulumu başarıyla tamamladınız. Ama işimiz henüz bitmedi. MacBook için küçük ayarlar yapmamız gerekiyor.&lt;/li&gt;
	&lt;li&gt;Wireless ve diğer MacBook donanım ayarlarını aşağıdaki linklerde anlatıldığı şekilde yapabilirsiniz. &lt;a href=&quot;https://help.ubuntu.com/community/MacBook3-1/Jaunty&quot; target=&quot;_blank&quot;&gt;https://help.ubuntu.com/community/MacBook3-1/Jaunty&lt;/a&gt; &lt;a href=&quot;http://www.isriya.com/node/1804/ubuntu-on-macbook-air&quot; target=&quot;_blank&quot;&gt;http://www.isriya.com/node/1804/ubuntu-on-macbook-air&lt;/a&gt; Bu iki bağlantı size yol gösterecektir.&lt;/li&gt;
	&lt;li&gt;Son olarak Turkish+Q klavyenizin ayarlarını yapmanız gerekiyor. Yanda { &quot;, é, &amp;lt;, &amp;gt; } görebileceğiniz tuşlar, ubuntu üzerinde yanlış map edilmiştir. Bunu düzeltmenin yolu ise, xmodmap kullanmaktır.  Ev dizininizde .Xmodmap dosyası yaratın ve içine aşağıdaki satırları ekleyip yeniden başlattığınızda tuşların düzeldiğini göreceksiniz.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;&lt;strong&gt;~/.Xmodmap&lt;/strong&gt;

keycode  94 = quotedbl eacute quotedbl eacute less degree&lt;em&gt;&lt;/em&gt;

&lt;em&gt;keycode  49 = less greater less greater bar brokenbar&lt;/em&gt;&lt;/blockquote&gt;
&lt;ol&gt;&lt;/ol&gt;
İşte yapmanız gerekenler bundan ibaret. İşte çalışmak şimdi eğlenceli olmaya başladı :)
</content>
 </entry>
 
 <entry>
   <title>Yazılım Geliştirme Süreçleri - 1</title>
   <link href="http://hasanozgan.com/blog/2009/08/02/yazilim-gelistirme-surecleri-1"/>
   <updated>2009-08-02T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2009/08/02/yazilim-gelistirme-surecleri-1</id>
   <content type="html">Yazılım geliştirme işinin hep acil olduğu, hesapsız kitapsız ve hallederiz gazları ile başlanan projelerin, sürecin tamamının kod yazmaktan(implementation) ibaret olmadığını bilse de öyleymiş gibi davranan bir ülkede geçirilen 10 yılıma üzülmemi sağlayan bir öykü paylaşacağım sizinle! Proje yöneticiliği yapan arkadaşların, bu süreçleri es geçip yıllarca önümüze sürdüğü bütçe palavraları üzerine bir yığın genelleme mevcut. Ama inanın hem bütçeyi doğru kullanmak, hemde işi kitabına uygun bir şekilde yapmak mümkün. Nasıl diye sorduğunuzu duyar gibiyim! &lt;em&gt;Süreçleri bir taşla on kuş vuracak şekilde düzenlemek&lt;/em&gt; aslında söylediğim şey. Belgelemeyi PHPDocument ile yapmak gibi birşey aslında söylemek istediğim. Ve &lt;em&gt;ekibin enerjisini doğru bir şekilde yaymak&lt;/em&gt;. İşin sırrı, her işe doğru adama atamak. Genelde Türkiye'de bir yazılımcı, sayfa tasarımdanda, DB tasarımından, güvenliktende, nesne yönelimli konulardan ve browser bağımsız javascript ve css hilelerinden haberdardır. Ve tüm enerjisiyle herşeyi çözer! Buradaki insanlara bundan söz ettiğimde, nasıl herşeyi bilmemizin beklediklerini anlayamadılar ve doğal olarak; nasıl öğrendiğimizi sordular!. Cevabım mı?; Halleluja Google! :)

Yeni görevim ve şirketimde geçen bir haftaya gelirsek, Ted ile bir hafta boyunca proje ekibi ile tasarım toplantıları yaptık. Proje ekibimizde bizim dışımızda; 2 frontend developer, 2 backend developer (biri aynı zamanda DB uzmanı), 1 sysadmin, 1 grafiker var.

İlk gün, müşteriden gelen RFP (Request For Proposal) belgesi baz alınarak çıkarılan StoryBoardları inceledik. Benden önce kullanılacak teknolojiye karar verilmiş, use-case diagramları Ted tarafından çıkarılmış ve ekip bu teknolojiye uygun olarak seçilmişti. Toplantı öğle yemeği saatine kadar sürdü ve projedeki herkes kendi açısından neler gerektiği ile ilgili notlar aldı ve deneyimlerini ekip ile paylaştı.

Öğleden sonra, frontend yazılım geliştiriciler, WADA (Wep Application Data Architect) adında, içerisinde isteklerin ne şekilde yapılacağını nasıl yanıtların alınacağı ile ilgili bir döküman hazırlamaya koyuldular. Dökümanda ayrıca template engine içerisinde kullanılacak veri atamalarıda yer alıyordu. Bu dosya JSON formatında olduğu içinde rahatlıkla versiyon takip sistemine eklenip değişiklikler hızlı bir şekilde yapılmasını hedefliyordu.

Ben ve Ted ise öğleden sonra, tasarım toplantılarına başlamıştık. Veritabanı uzmanı ile birlikte E/R diagramını hazırladık. Akşama kadar performans konuları (aktif/pasif, clustering) gibi konular konuşuldu.

Backend geliştiriciler ise, geliştirme ortamlarını sistem yöneticimiz Fabian ile birlikte hazırladılar, hangi kütüphaneleri kullanacakları vb konulara karar verdiler ve ertesi iki gün boyunca; Ted, ben ve 2 backend geliştiricisi ile birlikte, sınıf diagramları ve sekans diagramlarını tartıştık. Performans ve güvenlik konularının konuşulduğu bir toplantı olduğunu söyleyebilirim.

Üçüncü günün akşamında grafiker bize 3 taslak ile geldi. Bu toplantıya frontend geliştiricilerde katıldı. Buradada ağırlık kullanılabilirlik ve sayfanın yükü üzerine ve ajax düşünülen yerlerin etkileri üzerine yapılan konuşmalar vardı. Nerelerde cache kullanılması gerektiği gibi notları Ted not ettiğini gördüm. Bu bilgi anında eposta grubu ile paylaştırıldı. İşin ilginç tarafı bu tasarımlarla ilgili kimse güzel olmuş gibi yorumda bulunmadı. Benim dışımda, kimse tasarımın güzelliği ile ilgilenmiyordu. Bu toplantının gündemi kullanılabilirlikti ve beğenip beğenmediğini söyleyecek tek kişi ise müşteriydi. Toplantının yapılmasındaki amaç, tasarım müşteriye sunulmadan önce, frontend tarafında sonradan çıkabilecek kötü süprizler ve müşteriden gelebilecek saçma isteklerin önüne geçmekti.

Şirketin ortak bir zihni olduğunu söyleyebilirim. Zaten ilk geldiğim gün bundan söz etmişlerdi. Yazılan ve öğrenilen herşey, tüm şirket tarafından biliniyor ve hemen kütüphanedeki yerini alıyordu. Böylece tekrar tekrar pek birşey yapılmıyordu.

Cuma günü yaptığımız toplantıda draft olsalarda hemen hemen herşey hazırdı. Müşteri tasarımı seçmiş, sınıf diagramlarının büyük çoğunluğu hazırlanmıştı. Tüm sayfalar ve görünüm bileşenleri(widgets) sayfaların nasıl davranacağı, ne gibi görünüm bileşenelerine ihtiyaç olduğu WADA dökümanında belirtilmişti. Neredeyse herşey projenin 2. haftasında rayına oturmuş görünüyordu. İnanılmaz bir deneyimin parçası olmuştum.

Bu projedeki edindiğim deneyimlerimi paylaşmaya daha sonraki yazılarımda devam edeceğim. Sözünü ettiğim belgelerin örneklerini de izin alabilirsem buraya dahil edeceğim.
</content>
 </entry>
 
 <entry>
   <title>Amerika'da Çaylak Bir Yazılım Mimarı</title>
   <link href="http://hasanozgan.com/blog/2009/07/27/amerikada-caylak-bir-yazilim-mimari"/>
   <updated>2009-07-27T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2009/07/27/amerikada-caylak-bir-yazilim-mimari</id>
   <content type="html">Merhaba Üstadım; uzun bir süredir söylenemeyen sözlere, görülüp, işitilen ama bir türlü elin kaleme gitmediği zaman içinde değişen teknolojilere, her ne varsa ve her kim bu sürede her ne yaptıysa; neyi üzüp, neyi sevindirdiyse ve kimine değişim göstermesede, sürekli değişen hayata ve değerli dost Sana, Amerika'dan kocaman harflerle MERHABA!...

Evet Üstad, yaklaşık bir hafta önce &quot;Çaylak Yazılım Mimari&quot; (Jr. Software Architect) olarak Amerika Kaliforniya eyaletinde işe başladım. Burada öğrendiklerimi ve tespitlerimi senin görüşünle hazmetmek istiyorum. Bu bir çaylağın ustalaşma evresimi olur yoksa, not defterimde yer eden başka bir başarısızlık mı olur bilemiyorum. Ama gitmek istediğim yere ulaşmak için gideceğim disiplinli bir çalışma olacağına eminim.

Yeryer işlerin nasıl olduğunu benim pozisyonumdaki bir insanın ne şekilde kullanıldığından söz edeceğim. Bir projenin nasıl tasarlandığını hangi kurumların olduğundan ve bazende bu işin tarihçesine değineceğim.

Buraya geldiğimde, soğuk bir karşılama beklerken herkes bana çok iyi davrandı. Herkesten çaylaklık hikayelerini dinledim ve bu nereyi hedeflediklerini dinledim. Hangi konuda ustalaşmak istediğimi sordular. Bende gayri ihtiyari, &quot;Internet Architect&quot; diye cevap verdim. Meğerse yazılım mimarisi çatıları içinde böyle ünvan yokmuş. Biraz Netology'den söz ettim. Ve netology bu mimari çatısını kurabilir dedim. Sessiz bir tebessüm ile birlikte, &quot;önce öğren ve bunu muhakkak dene&quot; dedi Ustam Ted!..

Ted, gerçekten çok iyi bir insan. Kendisi ile padawan ve jedi benzeri bir ilişkimiz var. Beni içinde bulunduğu projeye dahil etti. Şimdilik O'nun için araştırmalar yapıyorum. Ve bir dünya belge inceliyorum. Ted kod yazmayı bırakmamı yoksa empati kuramayacağımı söylediği için aynı zamanda bu proje için kodda yazıyorum. Hayran olacağına inandığım bir geliştirme ortamım var. Bir sonraki yazımda bundan söz edeceğim.

Amerika Internet aşığı bir adam için Hacc yeri gibi. Herşey burada dönüyor. Tanışılacak çok fazla insan ve öğrenilecek çok şey var. Öğrendikçe, senin görüşlerinle demlenecek çoook şey var!. İyi ki varsın Üstad, ve ben iyi ki seni tanımışım. Görüşmek üzere.
</content>
 </entry>
 
 <entry>
   <title>Tek Gözlü Devlerin Yönettiği, Ütopik Fısıltılar Korosu</title>
   <link href="http://hasanozgan.com/blog/2009/05/19/tek-gozlu-devlerin-yonettigi-utopik-fisiltilar-korosu"/>
   <updated>2009-05-19T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2009/05/19/tek-gozlu-devlerin-yonettigi-utopik-fisiltilar-korosu</id>
   <content type="html">Başlığı elimden geldiğince bir yığın isim tamlamaları ile yaptım belki bu yazı dikkatinizi çeker diye!. :-) Bugün tatil olması münasebeti ile JWF geliştirmesi ile uğraşırken, takıldığım bir konuda yardım almak için &lt;a href=&quot;http://www.yalazi.org&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;@yalazi&lt;/strong&gt;&lt;/a&gt;'ya müracat ettim. Sohbet sohbeti açtı ve akşam kendisi ile buluştuk.

Kendisi web çatılarından nefret etmesi münasebeti ile üzerinde çalıştığım JWF'i kendisinin beğenisine sundum. Sanırım bu sefer doğru yolda ilerliyorum. :) JWF beni tanıyanlar bilir bir türlü tamamlayamamıştım. Neyse..

Aslında sohbetimizin en dikkat çeken tarafı, &lt;a href=&quot;http://www.yalazi.org/index.php/archives/2009/05/18/on-simulation-reality-prediction/#comments&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;blog@yalazi&lt;/strong&gt;&lt;/a&gt; üzerinde bulunan, &lt;em&gt;&quot;On Simulation-Reality Prediction&quot; &lt;/em&gt;başlıklı yazısı.&lt;em&gt; &lt;/em&gt;Yazı kısaca şundan söz ediyor, dünyadaki herşeyi simüle eden bir yazılım yazsak ve bu yazılım ile gerçek yaşamdan bir anı ve simülasyon yazılımını eş zamanlı çalıştırarak aynı sonuca ulaşırsak, geleceğe dair &quot;bazı şeyleri daha yaşanmadan hesaplamak mümkün müdür?&quot; sorusunu dile getiriyordu. İşte bizim ütopya fısıltılarımız evrene bu noktadan itibaren yayılmaya başladı..

Yalazı öyle ilgimi çeken bir konuya parmak basmıştı ki, &quot;ütopya master planım&quot; diyebileceğim fikrimi paylaştım kendisi ile. Aynı çözümün farklı bir amaç için kullanımından başka birşey değildi bu fikir. Ben de dünyada ki, tüm yaşanmışların modellenebileceğine inananlardanım. Yarı profesyonel olarak ilgilendiğim bir konu olan Öyküleme (Tiyatro, Sinema, Roman) sanatında bazı kalıplar vardır. &quot;İki köpek bir kemik&quot; (iki adam bir kadın) gibi. Aşağı yukarı aynı öykü üzerine kuruludur bu kalıplar, Bir sorunun birçok çözümü olabilir ama bu çözümler sonsuz değildir. Aynı bir satranç oyunu programlaması gibi olabilecek tüm doğru hamleler bellidir. Bu da bize benim ütopya projeme götürüyor, bir sorun karşısında bizim danışabileceğimiz, doğru yolu seçmek için bize yol gösterecek, &quot;Bilgisayar Yaşam Asistanı&quot;. Hele günümüzde herkes'in elinde PDA benzeri cep telefonları olduğunu ve sürekli nette olduğumuzu düşünürsek bu çok da ütopik gelmiyor insana :)

Tekrar Yalazı'nın yazısına geri dönersem, simülasyon ve gerçekliğin 5 saat sonrasına gittiğimizde aynı sonuç çıkmıyorsa burada oluşan fark kümesi bizim çözüm için gerekli olan yol haritamızı verebilir sanırım. En azından Yalazı'nın iddiasından benim anladığım sonuç bu şekilde.

Peki şimdi anlatılmak isteneni anladıktan sonra bunun mümkün olup olmadığına bir bakalım. Modelleyebilmemiz için ciddi bir veri yığınına ihtiyacımız var. Nasıl böyle bir model içerik oluştururuz diye düşünüyorum bir an ve Internet cevabı ile Arşimet gibi buldum buldum nidaları atıyorum bir an!. Peki nasıl modellenecek, Web 2.0 ve servisleri ile bu veri toplanabilir mi? Evet!. Peki nasıl anlamlandırılacak belki Web 3.0 bir başlangıç olabilir. Peki bize nasıl ulaşacak, iPhone ve Android gibi araçlar ile olması pek muhtemel görünüyor. Peki bunu parametrelere sahip kaç &quot;Tek Gözlü Dev&quot; tanıyoruz!. Bence bir tane var, O da Google!.. Belki de &lt;a href=&quot;http://undergoogle.com/tools/GoogleMasterPlanEN.html&quot; target=&quot;_blank&quot;&gt;Google'ın Master Planı&lt;/a&gt; böyle birşeydir kimbilir :)

Peki Bilgisayar Bilimlerinde bu konunun hangi başlık adı altında geçtiğini biliyor musunuz?  &lt;a href=&quot;http://www.wiley.com/WileyCDA/WileyTitle/productCd-0470030178,descCd-description.html&quot; target=&quot;_blank&quot;&gt;Şu kitapta &lt;/a&gt;anlatılan Modeling ve Simulations kavramları olabilir mi?

Bu kadar ütopik muhabbetten sonra, son birşey daha söylemek istiyorum. Veritabanı programcılığı dışında Bilgisayar Bilimlerinin incelediği konular hakkında konuşmayı çok  özlemişim... Yalazı çok saolsın!..
</content>
 </entry>
 
 <entry>
   <title>Microsoft .NET ve Girişimcilik</title>
   <link href="http://hasanozgan.com/blog/2009/04/05/microsoft-net-ve-girisimcilik"/>
   <updated>2009-04-05T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2009/04/05/microsoft-net-ve-girisimcilik</id>
   <content type="html">Microsoft; sevsekte sevmesek de, kabullensekte kabullenmesek de dünyanın en iyi yazılım şirketi. Sonuçta Internet servisleri dışında yaptıkları uygulamaların mimarileri (bazen ilk kez yapılmış gibi anlattsalar da) gerçekten çok başarılı. Ama gördüğüm en kötü stratejik kararlarda bu firmadan çıkıyor. Örneğin yıllar önce geleceğin internette olduğunu gören Bill amca, Internet Explorer tekeliyle Netscape'i piyasadan silen Bill amca bu sektörde çok başarılı sonuçlar elde edemedi. Yaptığı birçok web uygulaması fiyasko ile sonuçlandı. ASP PHP ile boy ölçüşemedi. Bu Web fiyaskoları, .NET çıkana kadar süre geldi. ASP.NET 2.0 ile birlikte halen eline su döküleceğine şüphe ettiğim çok iyi bir mimariye sahip bir web çatısı oldu. B

Peki sorun nerede dediğinizi duyar gibiyim? Microsoft bu kadar iyi bir teknoloji yaratıyor, bir sürü döküman ile bu .Net platformunda uygulama geliştirenleri eğitiyor, kalitelerini arttırıyor! Nedeni ise, IIS, Windows ve MSSQL daha çok kullanılsın ve daha çok lisans satılsın diye.

Peki kaç tane startup, zaten kısıtlı olan sermayesini lisans parasına harcayacağını bile bile asp.net ile  web girişimi yapmıştır. Elimde bilimsel bir veri yok ama bu sayı gerçekten ama gerçekten çok az olduğunu düşünüyorum.

Bir linux kullanıcısı olarak (Linux gerçekten bir geliştirici için süper bir ortam) asp.net'i gerçekten seviyorum. Bir dönem Mono projesinden faydalansam da, sonunda ASP.NET sevdasından vazgeçmek zorunda kaldım. Nedeni mi? LAMP dünyasının çok az bir maliyetinin olması. PHP 5.3 versiyonuyla birlikte, daha fazla C#'a a benzeyeceği içinde çok mutluyum. Microsoft bugün bu maliyetleri web girişimcileri için sıfır maliyete çekse gelecekte kazancağı potansiyel müşteri sayısında artış olacağını düşünüyorum.

Özetle, gerçekten merak ediyorum; Microsoft yöneticileri ve bu şirketin pazar araştırmacıları; neden birçok girişim PHP, Ruby ve Python ile yapıldığını düşünmüyor mu? Bu girişimciler eğer iyi bir fikir buldularsa yatırımlar bulup para harcamaya başlıyorlar. Benim kafama takılan soru şu, hal  böyle iken neden web girişimcileri için MS'in ürünleri lisanslı? En azından 1 yıl lisans parası almasa nasıl olur? Belki böyle yapsa asp.net ile gelişen birçok başarılı servis görürüz.
</content>
 </entry>
 
 <entry>
   <title>Kissa.be v3 Yayında</title>
   <link href="http://hasanozgan.com/blog/2009/04/05/kissabe-v3-yayinda"/>
   <updated>2009-04-05T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2009/04/05/kissabe-v3-yayinda</id>
   <content type="html">&lt;a href=&quot;http://kissa.be&quot;&gt;Kissa.be&lt;/a&gt; URL kısaltma servisinin yeni sürümü yayına bugün alındı. Joy Web Framework altyapısı kullanılarak yeniden yazıldı. Bu yeni sürüm Joy Web Framework'ün lasmanı ile birlikte açık kaynak olarak dağıtılmayaa başlanacak ve bu yeni sürümde birkaç yeni özellik daha eklenmiş olacak!...
</content>
 </entry>
 
 <entry>
   <title>Hakkımda 7 Şey</title>
   <link href="http://hasanozgan.com/blog/2009/03/08/hakkimda-7-sey"/>
   <updated>2009-03-08T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2009/03/08/hakkimda-7-sey</id>
   <content type="html">Geçen hafta &lt;a href=&quot;http://www.yalazi.org/index.php/archives/2009/02/27/ilk-mimim-7-sey/&quot;&gt;Onur Yalazı&lt;/a&gt; beni &quot;Hakkımda 7 Şey&quot; konusuyla mimlemiş. Böyle şeyleri pek beceremem. Ama saolsun hayatımda benim için önemli olan 7 şeyi düşünmemi sağladı. İşin içinde sayılar olduğu zaman, bunları bulmak, ayıklamak ve seçmek zor olabiliyor...
&lt;ol&gt;
	&lt;li&gt;Ailem: Bana her zaman destek olan ailem. Hayatımın her anında ilk sırada olmalıdır. İfade problemim olsada onları çok seviyorum. Ve herzaman listenin ilk sırasında olacaklar.&lt;/li&gt;
	&lt;li&gt;İnternet: Internet benim için çok ama çok değerli. Geleceğe dair tüm planlarımda bir yeri var. Bunlardan başlıcaları, netology, dahius, mahsul-ü hayal&lt;/li&gt;
	&lt;li&gt;Hikayeler: İnsanı anlatan öyküleri çok seviyorum. Olaylar örgüsünü, bu örgüde düğümlenmeler ve çözülmeler aynı inişler ve çıkışlar gibi. 2 yıl boyunca tiyatro oyunları yazmak için 5 üstadtan eğitim aldım. Hemde her pazar günü hiç usanmadan. Bu sebeple tiyatro ilk aracımdır. Diğerleri ise şiir, müzik ve fotoğraftır.&lt;/li&gt;
	&lt;li&gt;Çalışma Odam ve Arşivlerim: Benim için evim kutsal bir mabeddir ve sığınaktır. Evimi çok seviyorum. Küçük bir çalışma odam ve bir duvarı kaplayan ve tüm rafları tıkabasa kitap dolu bir kütüphanem var.&lt;/li&gt;
	&lt;li&gt;Mobil Yaşam: Mobil bir yaşam sürmeyi seviyorum. Hayatımın en önemli şeylerini yanımda taşımak ve ihtiyaç anında erişmek güzell birşey. Bu konuda özellikle, iphone çok faydalı bir araç.&lt;/li&gt;
	&lt;li&gt;Hayat Görüşüm: Benim hayat görüşümün temelinde Vahdet-i Vucud&lt;a title=&quot;Kuantum Fizigi&quot; href=&quot;http://sozluk.sourtimes.org/show.asp?t=kuantum+fiziği&quot;&gt;*&lt;/a&gt; ve Samurayların ve Zen rahiplerinin felsefesi bulunmaktadır.&lt;/li&gt;
	&lt;li&gt;Sağlıklı Yaşam ve Spor(Aikido): Özellikle lise yıllarımda çok fazla spor yaptım. Boks, Kickbox ve Basketbol olmak üzere. Üniversite sınavlarına hazırlanma süreci ile birlikte hayatımdan spor çıkmış oldu. Askerdede spor yapmayınca iyice spordan uzaklaştım. Bu durum vücud disiplinimin farkına varıncaya kadar sürdü. Hayri'nin tavsiyesi ile Aikido yapmaya başladım. Ve bu yeni yaşam tarzı ok  çok yeni olsada umarım bir ömür sürer.&lt;/li&gt;
&lt;/ol&gt;
Şimdi adet yerini bulması için; bende 7 kişiyi mimliyor ve beni mimleyen &lt;a href=&quot;http://www.yalazi.org/&quot;&gt;Onur Yalazı&lt;/a&gt;'ya teşekkür ediyorum.
&lt;ol&gt;&lt;/ol&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.idriscin.com/&quot;&gt;İdris Cin&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.rayyildiz.com&quot;&gt;Ramazan Ayyıldız&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.milamber.gen.tr&quot;&gt;Hayri Kılıç&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.delizeka.net&quot;&gt;Uğur Aslan&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.musaduman.com&quot;&gt;Musa Duman&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.volkankara.com&quot;&gt;Volkan Kara&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.cafer.org/&quot;&gt;Cafer Şimşek&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>İçimdeki İnternet Aşkı Bambaşka!..</title>
   <link href="http://hasanozgan.com/blog/2009/03/02/icimdeki-internet-aski-bambaska"/>
   <updated>2009-03-02T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2009/03/02/icimdeki-internet-aski-bambaska</id>
   <content type="html">Hava bahardan kalma ve güneş dünyaya gülümsüyordu. Günlerden pazar günüydü. Dışarı çıkma planları yapmış, bloguma yeni bir yazı girişi yapıyordum ki, veritabanı çok fazla bağlantı hatası vermeye başlayınca &quot;Ne oluyor laan!&quot; cümlesi ağzımdan çıkı verdi. Sunucunu loglarına bakınca saniyede 50-100 arası istek olduğunu görünce saldırı olduğunu düşündüm. (Normalde sunucuma bu kadar istek gelmez!) Sonra incelediğimde sorunun sebebinin kissa.be servisi olduğunu gördüm. Kissa.be yurtdışında az-buçuk tanınan bir servis olduğu için neden bu kadar istek geldiğine baktım. Halen saldırı olduğunu düşünüyordum fakat inceleyince gördümki, kissa.be'yi kullanan kişi Çin'deki bir Porno Forumuna kissa.be linki vermiş. Ve bu yazıyı yazarken Uniq istek 150.000 civarındaydı. Sunucum ve benim için çok fazla olan bu isteği kara listeye almak istemiyordum. Sonuçta kissa.be bir servisti herşeye garanti veriyordu.

Peki bu sorunu nasıl çözdüm? Sihirli sözcükleri söylediğinizi duyar gibiyim. Evet Memcached! Hayat kurtaran asrın buluşu icat. Hemen memcache sisteme aktif ettim. İnsert işlemlerinide bir  havuza soktum. SQL sorguları bir havuzda toplu olarak güncelleniyor. Sorun çözüldü böylece, kissa.be servisi icin yapmayi bile dusunmedigim stress testi boylece gerceklesti.

Evet güzel pazar günüm bu işle uğraşarak gitti. :) Peki pişman mıyım? Hayır! Kızgın mıyım? Evet Kendime kızgınım!. Kodları bu hafta daha ciddi bir şekilde yeniden düzenleyeceğim. Her geçen gün biraz daha şekillenen Joy Framework mimarisine taşımaya karar verdim. İnterneti ve yüzbinlerce (pornocu) insanın farkında olmadan benim sitemi kullanmaları çok eğlenceliydi. Apache log'u her an aktığını ne zamandır görmüyordum. :)

Evet sıradaki sınavlar için  hazırım :)
</content>
 </entry>
 
 <entry>
   <title>Yazılım Mühendisi'nin Şerefi</title>
   <link href="http://hasanozgan.com/blog/2009/03/01/yazilim-gelistiricisinin-serefi"/>
   <updated>2009-03-01T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2009/03/01/yazilim-gelistiricisinin-serefi</id>
   <content type="html">Merhaba Üstad, biliyorum uzun süredir yazamıyorum. Son dönemde yazmak için çok okudum çok araştırdım ama yazmak için ataletimi yenemedim. Öğrendiklerimi yakın zaman içinde seninle paylaşacağım ama öncesinde yaşadığım bir şeyi paylaşmak isterim. Yıllar önce öğrettiğin temel şeylerin öneminin farkına galiba yeni vardım. Unutmamak ve öğrencilerine anlatman için bunu seninle paylaşmak istedim.

Yakın gelecekte, çaylakların yapmayacağı kadar basit bir hatam ve çok daha büyük bir sonucu oldu. Hatasız yazılım olmaz ama bu hatadan dolayı gerçekten çok utandım. Sonuçta şirketim, bozmak için değil yapmak için kodları bana emanet etmişti. Emanete hıyanet etmiştim. Samurayların böyle bir durumda Harakiri yaptıklarını çokça duymuşuzdur. Bu aslında daha iyi birine yol açmak için yapılır. En iyinin bile en iyisi vardır. Bunu hiçbir zaman unutmamak gerekir. Bu sebeple bende gereğini yaptım ve istifamı verdim. Fakat yöneticim bunu reddetti ve hatımın sebebini sorgulamamı istedi...

Profesyonel bir kurumda işinizi yapar ve karşılığınızı alırsınız. Bulunduğunuz pozisyondan dolayı kibir ve özgüveniniz gereksiz büyüyebilir ve basit hataları farketmemize engel olur. İşte bendeki en büyük sorun buydu. Bir yazılım geliştiricisi için en büyük tehlike fazla özgüven ve kibirdir. Çünkü diğer önemli kuralları gözden geçirmenize engel olur. Üstadım evet sende hiç kibir ve ego görmedim hiçbir zaman. Ama öğrencilerine ilk anlatman gerek şey bu olmalı. Yoksa benim yaşadığım utanç verici duruma düşebilirler.

Yazılım geliştiricisinin diğer görevlerini de, burada yazmak istiyorum. Bu maddelerin üzerine elbet eklentiler yapacağım ve/veya içinden bazı maddeleri çıkaracağım. Yol haritam olacak bu maddeleri bir daha unutmayacağım. Şimdi bu maddeleri burada tekrar hatırlayalım.

1) Alçak gönüllülük; bildiklerim denizde bir damla kadar ve daha öğrenilecek çok şey var ve biliyorum ki her zaman benden daha iyisi var. Kıstasım her zaman daha iyi olan olmalıdır.

2) Okunabilirlik (readibility); Yazılan kod herkes tarafından anlaşılabilir olamalı. Karmaşık kodlardan kaçılınılmalı. İsimlendirmeler öyle uygun olmalıki ne işe yaradıklar hakkında fikir vermeli. Yorum satırları olmalı. Kod standardına uygun yazılmalı.

3) Verimlilik (efficiency); Uygulamanın hızını yavaşlatabilecek hatalı algoritma ve mantıklardan kaçınılmalı. Method çağrıları 'profiler' araçları ile incelenmeli.

4) Nesnellik (objectivity);
&lt;ul&gt;
	&lt;li&gt;Yapısallık (structurally); Veri bütünlüğünü doğru bir şekilde parçalamak ve yönetmek için kullanılır. Doğru veri bloklarına doğru işler yapması sağlanabilir. İş parçalarını doğru yönetmek ve dağıtmak için iyi bir yöntemdir. Özellikle Handler mekanizmalarıyla hayata giren &lt;em&gt;&quot;tek giriş ve tek çıkış&quot;&lt;/em&gt; sağlamak gibi tekniklerle.&lt;/li&gt;
	&lt;li&gt;Bölümlere Ayırma (Modularity); Kod ilgilerine göre bölümlere ayrılabilmelidir.&lt;/li&gt;
	&lt;li&gt;Tekrar Kullanılabilirlik; Kod tekrarı yapmak en büyük günahlardan biridir. Kodun tasarımında tekrar yapılması kesinlikle engellenmelidir.&lt;/li&gt;
&lt;/ul&gt;
6) Güvenlik (security); Güvenlik açığı oluşturulabilecek sorunlar tespit edilmeli ve kod içerisinde gereği yapılmalıdır. Güvenlik söz konusu olduğunda verimlilik ve hızdan bir miktar taviz verilmesi doğaldır.

7) Taşınabilirlik (portability); Uygulama; platform geçişlerine minimum değişiklik ile geçirilebilmelidir. Bunlara örnek, C kodlarındaki değişken veri tiplerinin uzunlukları ve işletim sistemine özel fonksiyon çağrıları verilebilir. Ya da uygulamada veritabanı değişikliğinde mevcut kodların en az seviyede etkilenmeside taşınabilirlik için iyi bir örnektir.

8) Esneklik (Flexibility); K.I.S.S. kuralına göre kod olabildiğince basit tasarlanmalıdır. Çevik yöntemlerse, geleceği düşünerek kod yazmak bir hatadır. Fakat bunu  düşünememek demek değişikliği yok saymak demek değildir. Bu sebeple uygulamanın kodları basit ve esnek olmalıdır.

9) Yeterlilik; Uygulamayı ve değişikliğin etkilerini iyi bilmek gerekir. Değişikliğin etkildeği yerler çıkartılabilmelidir.

10) Test edilebilirlik; TDD ile hayatın kod geliştirme döngüsünün içinde olmazsa olmaz bir parçası haline gelmiştir.

Benim temel ilkelerim bunlar üstadım; Eklemek ve düzeltmek istediğin birşey varsa sabırsızlıkla cevabını beklemekteyim.
</content>
 </entry>
 
 <entry>
   <title>PHP 6'da Olması Gereken Özellikler</title>
   <link href="http://hasanozgan.com/blog/2008/12/04/php6-da-olmasi-gereken-ozellikler"/>
   <updated>2008-12-04T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2008/12/04/php6-da-olmasi-gereken-ozellikler</id>
   <content type="html">Hayalini kurduğum framework için çıktığım yolda hergün yeni şeyler öğreniyorum. İtiraf etmem gerekiyorki ASP.NET mimarisinden çok etkilendim. Yazılım mimarileri ile uğraştığımdan dolayı sanırım C# diline ayrı bir sempatim var. Her açıdan çok iyi tasarlanmış bir dil. PHP'de web için biçilmiş kaftan fakat nesne yönelimli mimariler geliştirirken çok eksik olduğunu görüyoruz. Neden C# değilde PHP yazdığım sorusu aklınıza gelebilir. Bunun en büyük sebebi, C# projesinin Windows gibi baş ağrıtan kötü bir işletim sistemi üzerinde koşması geliyor. Mono ile daha önce bir web projesi geliştirmiş biri olarak yetersiz olduğunu söyleyebilirim.

Bu yazıda PHP6'da olması gerektiğini düşündüğüm özelliklerden söz edeceğim. Öncesinde küçük bir araştırma yaptım. Benim gibi PHP6 beklentileri olanlar var mı diye? &lt;a href=&quot;http://www.stubbles.org/authors/1-Stephan-Schmidt&quot;&gt;Stephan Schmidt&lt;/a&gt;'in 6 parçadan oluşan &lt;a href=&quot;http://www.stubbles.org/archives/5-My-wishlist-for-PHP-6,-pt1-The-object-type-hint.html&quot;&gt;y&lt;/a&gt;&lt;a href=&quot;http://www.stubbles.org/archives/7-My-wishlist-for-PHP-6,-pt2-Namespaces.html&quot;&gt;a&lt;/a&gt;&lt;a href=&quot;http://www.stubbles.org/archives/8-My-wishlist-for-PHP-6,-pt3-Annotations.html&quot;&gt;z&lt;/a&gt;&lt;a href=&quot;http://www.stubbles.org/archives/15-My-wishlist-for-PHP6,-pt4-static-initializers.html&quot;&gt;ı&lt;/a&gt;&lt;a href=&quot;http://www.stubbles.org/archives/19-My-wishlist-for-PHP6,-pt5-extphar.html&quot;&gt;s&lt;/a&gt;&lt;a href=&quot;http://www.stubbles.org/archives/24-My-wishlist-for-PHP6,-pt6-improvements-to-extreflection.html&quot;&gt;ı&lt;/a&gt; görmeliler.
&lt;ol&gt;
	&lt;li&gt;Namespaces&lt;/li&gt;
	&lt;li&gt;Annountions&lt;/li&gt;
	&lt;li&gt;Type Hint&lt;/li&gt;
	&lt;li&gt;Reflection&lt;/li&gt;
	&lt;li&gt;Delegate &amp;amp; Event &amp;amp; Lambda&lt;/li&gt;
	&lt;li&gt;Function overloading&lt;/li&gt;
	&lt;li&gt;Properties (Variable Get/Set)&lt;/li&gt;
	&lt;li&gt;Extensions Methods &amp;amp; Partial Class&lt;/li&gt;
&lt;/ol&gt;
&lt;strong&gt;1. Namespaces&lt;/strong&gt;

Eğer bir framework yazıyorsanız birbirine benzeyen sınıf isimleri olması çok doğaldır. Bu durumlarda namespace'ler olması çok işe yarar. Neyse ki PHP 5.3'ten itibaren gelecek olan bir özellik. (Ref. &lt;a href=&quot;http://marc.info/?l=php-internals&amp;amp;m=118355320225178&amp;amp;w=2&quot;&gt;http://marc.info/?l=php-internals&amp;amp;m=118355320225178&amp;amp;w=2&lt;/a&gt;)

&lt;strong&gt;2. Annountions&lt;/strong&gt;

C#'ta buna Attribute denir. Amaç kod içine meta veriler sokmaktır. Ve bu verileri Reflection yöntemiyle dinamik olarak okuyarak işleme tabii tutmaktır.

Bir örnek ile açıklamak gerekirse, MVC yapısı kurduğumuzu düşünün. Her sınıfın bir sayfa her methodununda action/view işlemini yaptığını varsayalım. Action bazlı sayfa giriş yetkilendirmesine ihtiyacımız var. Bu sayfa eğer ödeme sayfası ise, sadece https olarak erişilmesi gerekiyor. Bunuda bir şekilde belirtmek gerekir. İşte bu gibi ihtiyaçları tanımlamak için annountions özelliğine ihtiyacımız var. Henüz resmi olarak desteklenmesede PHP genişletmeleriyle eklenebilir.
&lt;pre class=&quot;prettyprint&quot; style=&quot;padding-left: 30px;&quot;&gt;@SimpleAnnotation
@SingleValuedAnnotation(true)
@SingleValuedAnnotation(-3.141592)
@SingleValuedAnnotation('Hello World!')
@SingleValuedAnnotationWithArray({1, 2, 3})
@MultiValuedAnnotation(key = 'value', anotherKey = false, andMore = 1234)&lt;/pre&gt;
(Ref. &lt;a href=&quot;http://code.google.com/p/addendum/&quot;&gt;http://code.google.com/p/addendum/&lt;/a&gt;)

&lt;strong&gt;3. Type Hint&lt;/strong&gt;

Method parametreleri veya değişken tanımlarında, değişkenin tipini yazmak hem okunabilirliği arttırır. Hem de editörlerin kod tamamlama özelliğini daha sağlıklı yapılmasına imkan sağlar. Ayrıca hata yakalama işlemlerinde de büyük kolaylık sunar.

&lt;strong&gt;4. Reflection&lt;/strong&gt;

Reflection dinamik olarak kod içerisinde gezinebilmeyi, kodu kısmen değiştirebilmeyi sağlar. Mesela; MVC'deki authentication işlemlerini sayfa sınıfının protected olan methodları için yap diyebiliriz.
&lt;pre class=&quot;prettyprint&quot; style=&quot;padding-left: 30px;&quot;&gt;self::set_module_name($class_name);
self::set_action_name($method);

eval(&quot;\$class = new $class_name();&quot;);
$reflect = new ReflectionMethod($class_name, $method);
if ($reflect-&amp;gt;isProtected()) {
$class-&amp;gt;authentication();
}
call_user_method_array($method, $class, $method_arguments);&lt;/pre&gt;
Ayrıca reflectionlar sayesinde &lt;a href=&quot;http://en.wikipedia.org/wiki/Dependency_injection&quot;&gt;Dependency Injection&lt;/a&gt; diye adlandırılan mimariler yaratabiliriz. Dependency Injection, Bir kod parçasına dışarıdan müdahale etmek demektir. Örneğin bir scheduler uygulaması yazacaksınız. Bu schedulera &quot;şu sınıfın şu methodunu&quot; çalıştır demek için kullanabilirsiniz.

(Ref. &lt;a href=&quot;http://tr2.php.net/reflection&quot;&gt;http://tr2.php.net/reflection&lt;/a&gt;)

&lt;strong&gt;5. Delegate &amp;amp; Event &amp;amp; Lambda&lt;/strong&gt;

Delegate kavramı C# ile beraber hayatımıza girmiştir.  Aslında C programcılarının bildiği gibi delegate'ler, fonksiyon göstericileridir. C# gibi dillerde sınıflar arasında global kavramı olmadığı için bir sınıftan diğerine mesaj yaptırmak  gerekebiliyor bazı durumlarda. İtiraf etmem gerekir ki bu bizi event mimarilerine ve lambda operatörüne götürür.  Delegate kullanımı C'deki prototip tanımlanması gibidir.
&lt;p style=&quot;padding-left: 30px;&quot;&gt;public delegate function int myDelegate(int $x);&lt;/p&gt;

Bu şu anlama gelir. Geri dönüş değeri int olan ve parametresi int olan fonksiyonu işaret et. Görüldüğü üzere bu tanım bize başka bir ihtiyaç daha doğurur. &lt;strong&gt;type hint&lt;/strong&gt; ve &lt;strong&gt;method signs &lt;/strong&gt;kavramları. Dinamik bir dilde bu kadar tip güvenli kod rahatsız etmiş olabilir. C# dilinde bunun çözümü lambda operatörüdür.

Lambda, kısaca değişken olarak tanımlanabilen process blockları demektir. İstenilen yerde yaratılır ve öldürülür.

&lt;strong&gt;6. Function overloading&lt;/strong&gt;

Fonksiyon yazarken farklı parametrelerle aynı method adıyla yazabilme  durumudur function overloading.  Bilindiği üzere PHP dilinde parametre sınırı yok. İstenildiği kadar parametre girilebilir. Bu parametrelerin dinamikliği sayesinde, aynı method ismi ile farklı parametrelerde &lt;strong&gt;func_get_arg&lt;/strong&gt; alınabilir. Fakat okunabilirliği zorlaştıracak bir kod bloğu oluşmasına sebep olur. Bunu desteklerken bu dinamik yapının kaldırılmasını elbette istemeyiz.

Method overloading yapabilmek için methodların imzasını tutmak gerekir. Bu imza parametrelerin tipleri ve geri donus deger tipleri ile birlikte oluşturulur.
&lt;p style=&quot;padding-left: 30px;&quot;&gt;&lt;strong&gt;int function fonk(int $b);
int function fonk(int $b, string $c);&lt;/strong&gt;

Yukarıdaki örnek PHP'de syntax hatasına sebep olur.

&lt;strong&gt;7. Properties (Variable Get / Set)&lt;/strong&gt;

Properties kavramı C# dilinde kullanılan Cross-Cutting yada Aspect oriented denilen bir teknolojidir. Amacı sınıf değişkenlerinin aldığı değerlerin arasına girmenin bir yolunu bulmaktır. Özellikle get ve set işlemlerinin arasına girmek türetilen sınıflarda overloading yöntemi ile farklı bir şekilde değer atanmasını veya değer kontrolunun yapılması burada sağlanabilir.&lt;strong&gt; &lt;/strong&gt;
&lt;p style=&quot;padding-left: 30px;&quot;&gt;&lt;strong&gt;private&lt;/strong&gt; $_item;
&lt;strong&gt;public property&lt;/strong&gt; $Item
{
&lt;strong&gt;get&lt;/strong&gt; { return $this-&amp;gt;_item; }
&lt;strong&gt;set &lt;/strong&gt;{ $this-&amp;gt;_item = &lt;strong&gt;value&lt;/strong&gt;; }
}

$this-&amp;gt;Item = 4;

Yukarıdaki kod blogu gibi olmasada &lt;a href=&quot;http://en.wikipedia.org/wiki/Aspect-oriented_programming&quot;&gt;AOP&lt;/a&gt; yontemiyle dolaylı olarak yapabilmek mümkün. Bunun için &lt;a href=&quot;http://phpaspect.org&quot;&gt;PHP Aspect&lt;/a&gt;'ten faydalanılabilir. &lt;cite&gt;&lt;strong&gt;
&lt;/strong&gt;&lt;/cite&gt;

&lt;strong&gt;8. Extensions Methods &amp;amp; Partial Classes
&lt;/strong&gt;

Aslında bu iki özellik betik(script) olan bir dilde ne gerek var diye düşünebilirsiniz. Bu iki özellikte özellikle projelere dahil olan 3. parti yazılımların bakımını yaparken çok işimize yarar. Genellikle 3. parti yazılımları projenin içine dahil ederken ufak değişiklikler yapar ve projeyi bir bakıma çatallamış (fork) etmiş oluruz. Yeni versiyon geçişlerinde ise sıkıntı yaşarız. Bunu engellemek için başka bir yerde bu 3. parti yazılımların sınıflarını genişletebilsek (partial class) veya methodlarını aşırı yükleye bilsek (extensions methods) hayat daha güzel bir hale gelebilir. Peki bunu nasıl yaparız?

&lt;strong&gt;extend&lt;/strong&gt; function &lt;strong&gt;string::&lt;/strong&gt;is_null(&lt;strong&gt;string&lt;/strong&gt; $value) { return ($value == null);  }

Yukarıdaki şekilde tanımlanabilir. string nesnesi için is_null adında bir method eklenmiş olur. Ve aşağıdaki şekilde çalıştırılabilir.

string $a = &quot;merhaba&quot;;

if ($a::&lt;strong&gt;is_null&lt;/strong&gt;()) { // biseyler yap }

Partial class yapısı ise, bir sınıfı içeriğini bir parçasını aynı isimde başka bir sınıfı tanımı yaratarak onun içine atamak demektir. Bakıldığında partial class ile extensions methods'ların bir farkı olmayabilir. C# kendi tasarımlarında partial classlar aynı assembly (paket) içerisinde olmasını ön koşul olarak koşar. Fakat bu durum extensions method mimarisinde zorunlu değildir.

Elbette bu iki özellik birleştirilerek daha iyi tasarlanabilir.

Benim PHP'nin yeni versiyonundan beklediklerim aklıma geldiği kadarıyla bu şekilde. Aslında bunların bir kısmı PHPv6 ya alındı. Bir kısmı ise bekliyor. Daha detaylı bilgiye, Derick Rethans'ın &lt;a href=&quot;http://www.php.net/~derick/meeting-notes.html&quot;&gt;toplantı notları&lt;/a&gt;nda bulabilirsiniz. Bu konu ilginizi çektiyse, toplantı notlarının yapılacak listesine ve hangilerinin yapıldığına  &lt;a href=&quot;http://wiki.pooteeweet.org/PhP60&quot;&gt;buradan&lt;/a&gt; erişebilirsiniz.

Benim aklıma gelenler şimdilik bunlar. Programlama dillerine ve Nesneye Yönelimli PHP'ye yönelik yazılarımı öğrendikçe burada paylaşmaya devam edeceğim...
</content>
 </entry>
 
 <entry>
   <title>Web Geliştiricileri İçin Firefox Eklentileri</title>
   <link href="http://hasanozgan.com/blog/2008/11/30/web-uygulama-gelistiricileri-icin-firefox-eklentileri"/>
   <updated>2008-11-30T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2008/11/30/web-uygulama-gelistiricileri-icin-firefox-eklentileri</id>
   <content type="html">Aşağıdaki listede, web geliştiricisi olarak hayatımı kurtaran Firefox eklentilerini bulabilirsiniz. Sizin de vazgeçemediğiniz eklentiler varsa burada paylaşırsanız çok sevinirim.
&lt;ul&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/1843&quot;&gt;Firebug&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/6683&quot;&gt;FireCookie&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.firephp.org/&quot;&gt;FirePHP&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/5369&quot;&gt;YSlow!&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/3504&quot;&gt;Zotero&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/271&quot;&gt;ColorZilla&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/3408&quot;&gt;Abduction&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/539&quot;&gt;MeasureIt&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/2104&quot;&gt;CSS Viewer&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/9527&quot;&gt;Ubiquity&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/748&quot;&gt;GreaseMonkey&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/6647&quot;&gt;HttpFox&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/2063&quot;&gt;TimeStamp Convertor&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/60&quot;&gt;Web Developer&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/4810&quot;&gt;Speed Dial&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/5721&quot;&gt;Fast Dial&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/59&quot;&gt;User Agent Switcher&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/5081&quot;&gt;TwitterFox&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/722&quot;&gt;No Script&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/684&quot;&gt;Fire FTP&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/216&quot;&gt;Venkman Javascript Debugger&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/125&quot;&gt;Proxy Switcher&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/2464&quot;&gt;FoxyProxy&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/249&quot;&gt;Html Validator&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/315&quot;&gt;View Cookies&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/967&quot;&gt;Modify Header&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/1333&quot;&gt;Quick Locale Switcher&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt; &lt;a class=&quot;ext&quot; href=&quot;https://addons.mozilla.org/en-US/firefox/addon/1743&quot;&gt;lori (Life-of-request info)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Kendime bir dost(asus eee-pc 1000h) edindim</title>
   <link href="http://hasanozgan.com/blog/2008/11/30/kendime-bir-dost-asus-eee-pc-1000h-edindim"/>
   <updated>2008-11-30T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2008/11/30/kendime-bir-dost-asus-eee-pc-1000h-edindim</id>
   <content type="html">Laptop'larım sürekli peşimde oldukları için bugüne kadar gölge ismini veriyordum. Lakin, iPhone sahibi olunca özelliklerinden dolayı iPhone'uma gölge adını koydum. Emektar dizüstü btilgisayarımda bana son bir kazık atınca ve bir e-ticaret siteside kuru sabitleyince dizüstünü değiştirmem zamanı geldiğini anladım. iPhone gölge adını alınca yeni bilgisayarıma da dost anlamına gelen buddy kelimesini uygun gördüm.
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://www.ubuntu-eee.com/img/asuseee.png&quot;&gt;&lt;img class=&quot;aligncenter&quot; title=&quot;asus eee&quot; src=&quot;http://www.ubuntu-eee.com/img/asuseee.png&quot; alt=&quot;&quot; width=&quot;257&quot; height=&quot;210&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

Şimdi biraz dostumdan söz edeyim. Üzerinde Intel Atom işlemci, 1GB ram ve 160gb'da disk var. Beyaz bir kasanın içinde çok karizmatik olduğunu itiraf etmeliyim. 1.4 kg ağırlığındaki bu dost hiç bana yük olmuyor :) 6 hücreli pili ile yarı yolda bıraktığıda olmadı. Tuşlar normal laptop tuş boyutlarına çok yakın. Sadece alışkanlıklarınızı değiştirmeniz gerekecek. Ben 1 hafta içinde bu klavye düzenine alıştım.

Yeni dostum ile tek anlaşamadığım konu ise sürücülerini Linux gibi işletim sistemleri tanıyamadığı için Windows XP Home edition ile gelmiş olması idi. Fakat Windows'u sevmediğim gibi x2 kat daha fazla home edition'dan nefret ediyorum. Acaba lisans para iadesi istesem alabilirmiyim.

Neyse efendim dostum biraz sızlansada ubuntu 8.10'u kurdum. Lakin generic kernel wireles'ı bulamadı. Nette biraz araştırma yapınca ubuntu seven hacker abilerimizin, dostum için özel bir kernel derlediklerini öğrendim. Ve hemen o kernel'a geçtim. Tabii siz isterseniz bu kernel'ın varsayılan olduğu birkaç dağıtımda&lt;a href=&quot;http://www.eeebuntu.org/&quot; title=&quot;eeebuntu&quot;&gt;*&lt;/a&gt;&lt;a href=&quot;http://www.ubuntu-eee.com/&quot; title=&quot;ubuntu-eee&quot;&gt;*&lt;/a&gt; mevcut.
</content>
 </entry>
 
 <entry>
   <title>PHP ile Dinamik Method Çağrıları</title>
   <link href="http://hasanozgan.com/blog/2008/10/02/php-ile-dinamik-method-cagrilari"/>
   <updated>2008-10-02T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2008/10/02/php-ile-dinamik-method-cagrilari</id>
   <content type="html">Dinamik method çağrısı, parametrelerinin uzunluğunu bilmediğiniz bir methoda çağrı yapmak için kullanılır. Hangi durumlarda buna ihtiyacımız olur derseniz; MVC'ler buna iyi bir örnektir. Yazımın ikinci bölümünde söz edeceğim dinamik obje yaratma durumlarındada çok işe yararlar. Peki az laf çok örnek yaparak konuyu özetleyeyim.

Diyelim ki;

http://example.com/&lt;span style=&quot;color: #993300;&quot;&gt;&lt;strong&gt;blog&lt;/strong&gt;&lt;/span&gt;/&lt;span style=&quot;color: #808000;&quot;&gt;&lt;strong&gt;categories&lt;/strong&gt;&lt;/span&gt;/&lt;strong&gt;&lt;span style=&quot;color: #3366ff;&quot;&gt;200810&lt;/span&gt;&lt;/strong&gt;/&lt;span style=&quot;color: #000080;&quot;&gt;&lt;strong&gt;general&lt;/strong&gt;&lt;/span&gt;

yukarıdaki gibi bir çağrıyı doğru şekilde yönlendirmemiz gerekiyor. İşte böyle bir durumda dinamik method çağrısı çok işe yarar.

class &lt;span style=&quot;color: #993300;&quot;&gt;&lt;strong&gt;blog &lt;/strong&gt;&lt;/span&gt;extends &lt;strong&gt;controller&lt;/strong&gt;

{

function &lt;span style=&quot;color: #808000;&quot;&gt;&lt;strong&gt;categories&lt;/strong&gt;&lt;/span&gt;(&lt;span style=&quot;color: #3366ff;&quot;&gt;&lt;strong&gt;$date&lt;/strong&gt;&lt;/span&gt;, &lt;span style=&quot;color: #000080;&quot;&gt;&lt;strong&gt;$cat_name&lt;/strong&gt;&lt;/span&gt;)

{....}

}

Peki bunu nasıl yapıyoruz?
&lt;ul&gt;
	&lt;li&gt;call_user_func&lt;/li&gt;
	&lt;li&gt;call_user_func_array&lt;/li&gt;
	&lt;li&gt;call_user_method&lt;/li&gt;
	&lt;li&gt;call_user_method_array&lt;/li&gt;
&lt;/ul&gt;
Yukarıdaki 4 fonksiyon adı (anahtar kelime) yeterlidir sanırım. Peki yukarıdaki örneğimizde bu çağrı nasıl yapılıyor ona bakalım.

URL parse edildikten sonra;&lt;span style=&quot;color: #000080;&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/span&gt;

&lt;strong&gt;call_user_method_array&lt;/strong&gt;(&lt;span style=&quot;color: #808000;&quot;&gt;&lt;strong&gt;$method&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/span&gt;, &lt;span style=&quot;color: #993300;&quot;&gt;&lt;strong&gt;$class&lt;/strong&gt;&lt;/span&gt;, &lt;span style=&quot;color: #3366ff;&quot;&gt;&lt;strong&gt;$&lt;span style=&quot;color: #000080;&quot;&gt;args&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color: #000080;&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/span&gt;);

method çağrısı ile gerçekleştirebilirsiniz.

call_user_xxx methodlarını &lt;strong&gt;__construct&lt;/strong&gt; methodu için kullanamazsınız. Yani olurda benim gibi dinamik olarak obje yaratmak isterseniz bu methodlar işe yaramaz. İşte bu durumlarda işinize yarıyacak bir method örneği vereceğim.

$db-&amp;gt;comment = &lt;strong&gt;using&lt;/strong&gt;(&quot;dal.comment&quot;, $db);

Biraz methodun ne yaptığını açıklamam gerekir sanırım. Biliyorsunuz PHP 5.3 ile beraber namespace kavramı hayatımıza girdi. Kendi geliştirmekte olduğum framework'te &lt;strong&gt;import&lt;/strong&gt; işlemleri için çok basit bir şekilde çalışan bir namespace sistemi oluşturdum. using ile ise; aynı isime ait iki sınıf, kazaren çakışması durumunu engellemek için yazmıştım. İlk parametre sınıfın paket bilgisi ikincisinde ise, &lt;strong&gt;__construct &lt;/strong&gt;methodunun aldığı parametreler söz konusu. İşte bu işi &lt;strong&gt;call_user_XXX&lt;/strong&gt; kullanmadan yapmanın yolu;

&lt;pre&gt;
    function using($class)
    {
        require_once(_get_class_path($class));
        $class_name = _find_class_name($class);

        $args_count = func_num_args();

        $args = &quot;&quot;;
        for ($i = 1; $i &lt; $args_count; $i++)
        {
            eval(&quot;\$arg_{$i} = func_get_arg($i);&quot;);
            $args .= &quot;\$arg_{$i},&quot;;
        }
        $args = rtrim($args, &quot;,&quot;);

        eval(&quot;\$obj = new $class_name($args);&quot;);
        return $obj;
    }

&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Google bir "Arama Motoru"dur</title>
   <link href="http://hasanozgan.com/blog/2008/09/03/google-bir-arama-motorudur"/>
   <updated>2008-09-03T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2008/09/03/google-bir-arama-motorudur</id>
   <content type="html">&lt;strong&gt;Google Hikayesi&lt;/strong&gt;

2002'de ben askerdeyken ilk kez duymuştum &lt;a href=&quot;http://www.google.com&quot;&gt;Google&lt;/a&gt; kelimesini. Basit arayüzlü ve son derece hızlı arama sonuçlarını getiren bir arama motoruydu. O yıllarda askerde olduğumdan çok üstünde durmamıştım. Askerliğimi bitirip, web dünyasına bulaşınca çok daha önemli olmaya başladı. O kadar önemliydi ki, insanlar sitelerinin aramalarda üst sıralara çıkması için Google'ın PageRank algoritmasını kurcalayan insanlar, bağlantı değişimi (link-exchange) yapıyorlardı. İnternet üzerinde bulunabilir olmak çok önemli olmaya başladı.

Gelir modellerini reklam üzerine kuran bu firmanın sitesinde reklamlar sadece metin tabanlı idi. Ama bir ayrıcalığı varda aranılan kelime ile orantılıydı. Böylece, aranılan kelime üzerinden gelir elde etmeye başladılar. Ama reklam veren bazı şirketler için , damlaya damlaya göl olur atasözünü hatırlayarak, o zamana kadar yapılmayan birşeyi yaptılar. Reklam aracıları sadece ciddi hit alan sitelere reklam veriyorlardı. Google bu sebeple ve &quot;damlaya damlaya göl olur&quot; atasözünüde göz önünde bulundurarak küçük, büyük tüm site sahipleri (yayıncılar)nin reklam gelirinden pay vererek sitelerine reklam almalarını sağladılar. Reklam veren müşterilerin paralarının hakk etmek için kötü niyetli kişileri anlayan algoritmalar geliştirdiler. Böylece, çok değerli bir firma oldular.&lt;em&gt; (Bu modeli borsaya açıldıklarında da kullandılar ve küçük yatırımcılarla da hisselerini paylaştılar) &lt;/em&gt;

Reklam verenlerin en doğru hedef kitleye ulaşması için, 2004 yılında davet yoluyla kullanıcıların üye oldukları bir eposta sistemi kurdular. Gmail adını verdikleri bu epostanın arabirimi çok kullanışlı idi. Javascript ustaları ajax'ı o kadar iyi kullanıyorlardı ki, halen daha iyi bir eposta istemcisi yok! Unutmadan eposta servisleri 1-5 mb kota verirken, Google gb'lik kotalarla dikkatleri üzerine çekti.

Borsaya açıldıklarında bu şirket bir efsane olmuştu. Balon olmadıklarını tüm dünyay kanıtlamışlardı. Ve arama üzerine, iş modellerini geliştirmeye devam ettiler. Filmlere ve sözlüklere giren bir marka haline geldiler. Ayrıca &quot;Şeytanlık Yapma&quot; ve imkansız denilen şeyleri yapmalarından dolayı bir çok insanın saygısını kazandılar. (Google Print) Ama Google her yaptıkları şey arama motoru iş modeline dayanıyordu.

2006 yılından sonra Youtube vb servisleri kendi bünyelerine katmalarıyla her geçen gün dahada büyüdüler. İnternet'in abisi dediğimiz bir firma haline geldi. İnsanlar bu şirketin master planı üzerine komple teorileri geliştirmeye başladı. İnsanların profillenmesi vb konularda sürekli konuşuldu durdu.

&lt;strong&gt;Tekelleşme&lt;/strong&gt;

Son 2 yılda çıkardıkları servislerle arama motoru kimliğinden bir internet şirketi kimliğine bürünmeye başladılar. Google'ın Adsense adını verdiği reklam teknolojisi yüzünden birçok teknoloji etkilendi. Bloglar daha belirgin hale geldi. Kaliteli yazılar yazıldı. Ama sonra iş çığrından çıktı ve Google'ın adsense interneti kirletmeye başladı. Çünkü arama sonuçlarına ve SEO denilen yeni iş türü yüzünden kötü içerikler ve aradığınızı bulamadığınız bir yığın kalitesiz içerik yaratıldı.

Özellikle çıkardıkları son 2 web sitesi ile Google'a karşı endişelerim arttı. Google internet'in efendisi sahibi olmaya çalışıyordu. Açık kaynak fikrini en iyi kullanan şirket olma yolunda adımlar attı. (bknz: OpenSocial, Android vb..) Yeni bir fikri olan şirketi ya satın oluyor ya da açık kaynak bir platform altında kuralları kendileri koymaya çalışyorlardı. Ama bardağı taşıran son damla Knol ve Chrome oldu.

Knol, wikipedia'ya alternatif olarak ortaya çıkarttılar. Wikipedia ciddi bir kültür olmuştu. Kutsal bir bilgi kaynağı. Şimdi soruyorum topluluklara destek veren bir şirket neden, bu platforma destek olmak yerine  böyle bir servis yayına açtı???

Chrome ise daha da ilginç, 4 büyük web tarayıcısının iyi özelliklerinin kendinde toplayan bir tarayıcı çıkarttılar. İşin ilginci web geliştirici ve tasarımcıları 4 büyük arama motorunda da düzgün görüntülenen stiller yazmak için CSS-Hack adını verdikleri yöntemler geliştirmişlerken. Aklıma takılan bir diğer soru ise şu; neden Google bir çok insanın saygısını kazanan Firefox, herkes tarafından beğenilen tek sorunu fazla hafıza tüketmek olan bu kültürle beraber yürümek ve bu platforma destek olmak yerine bir çok açığa sahip bir arama motoru çıkarttı? Açıklar elbette kapatılacaktır sorun bu değil ama neden Mozilla Vakfı'na destek olma yolunu seçmedi?

Bunu en güzel açıklayanlardan biri, &lt;a href=&quot;http://tech.groups.yahoo.com/group/YazilimMuhendisligiTurkiye/&quot;&gt;Türkiye Yazılım Mühendisliği Yahoo Eposta Grubunda&lt;/a&gt;, &lt;a href=&quot;http://www.cybersoft.com.tr&quot;&gt;CyberSoft&lt;/a&gt;'un kurucusu Semih Çetin'in tespitleri.
&lt;blockquote&gt;1) Chrome, Safari ile ayni rendering engine'i (WebKit) kullanmakta. Belki Google-Apple arasinda bir isbirligi mumkun. Kime karsi? IE.

2) Chrome; orijinal kaynak kodu olarak bir Visual Studio 2005 projesi. Ilk hedeflenen platformlar Windows XP ve Windows Vista. Kime karsi? IE.

3) Chrome'un en onemli ozelliklerinden birisi en hizli JavaScript engine'i hedeflemis olmasi. Kime karsi? IE ve FireFox.

4) Chrome'un bir baska temel ozelligi desktop uygulamalarini tamamen bir Web tarayici ile ortadan kaldirmak. Kime karsi? MS.

5) IE 8 bunyesinde daha once hedeflenen bir plan dahilinde arama motorlari ile elde edilen gelirlerin sinirlandirilmasi dusunulmekte. Kime karsi? Google.

6) iPhone ile Apple; mobil dunyasindaki Web tarayicisi kullaniminda standardlari oldukca yukseltti. Kime karsi? MS, Nokia, Samsung ve BlackBerry.&lt;/blockquote&gt;
Kesinlikle rekabete ve yeniliğe karşı değilim. Bu gibi yaklaşımlar kalite ve rekabet için gerekli ama. Google'ın yaklaşımı biraz tekel olma çabası gibi geliyor.

Bu sebeple, bir arama motoru olan Google'ın diğer tüm servislerini boykot ediyor ve sizide buna davet ediyorum. &lt;strong&gt;&lt;em&gt;İnternet kimsenin malı değildir.&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;Lütfen, Chrome &lt;strong&gt;kullanmayın&lt;/strong&gt;.&lt;/em&gt; Sitenizi Chrome'a uygun bir hale getirmeyin. Eğer bir internet kullanıcı iseniz, açıklarla dolu bu web tarayıcısını makinenize &lt;strong&gt;kurmayın&lt;/strong&gt;&lt;em&gt;&lt;strong&gt;!&lt;/strong&gt; &lt;/em&gt;Firefox'a katkıda bulunun.

Eğer benim gibi Google'ın arama dışındaki servislerini kullanmaya karar verdiyseniz. Google servislerine alternatif birkaç açık kaynak servis önereceğim.

&lt;strong&gt;Google Servislerine Alternatif&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;Google Reader =&amp;gt; &lt;a href=&quot;http://tt-rss.org/&quot;&gt;Tiny Tiny RSS&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Google Calendar =&amp;gt; &lt;a href=&quot;http://sourceforge.net/projects/webcalendar&quot;&gt;WebCalendar&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Google Web Analytics =&amp;gt; &lt;a href=&quot;http://www.piwik.org&quot;&gt;Piwik&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Google Notebook =&amp;gt; Wiki&lt;/li&gt;
	&lt;li&gt;Gmail =&amp;gt; &lt;a href=&quot;http://roundcube.net/&quot;&gt;RoundCube&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Blogger =&amp;gt; &lt;a href=&quot;http://www.wordpress.org&quot;&gt;Wordpress&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Google Bookmark =&amp;gt; &lt;a href=&quot;http://sourceforge.net/projects/scuttle/&quot;&gt;Scuttle&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Picasa =&amp;gt; &lt;a href=&quot;http://gallery.sourceforge.net/&quot;&gt;Gallery&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Chrome =&amp;gt; &lt;a href=&quot;http://www.firefox.com/&quot;&gt;Firefox&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Knol =&amp;gt; &lt;a href=&quot;http://www.wikipedia.org&quot;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
Diğer servisleri yerine emin olun alternatifleri vardır. Benimle paylaşırsanız bu listeye eklemekten mutluluk duyacağım.

Google, arama konusunda uzmanlaşmış bir şirkettir. Ve bu konuda ilerlemeye devam etmesi, tüm internet camiası için daha iyidir. Ve kendisinden beklenen, diğer konularda işin uzmanı olan kurumlara destek vermesi olması yeniden saygımızı kazanmasını sağlayacaktır.
</content>
 </entry>
 
 <entry>
   <title>URL Kıssalaştırma Hizmeti (kissa.be)</title>
   <link href="http://hasanozgan.com/blog/2008/09/02/url-kissalastirma-hizmeti-kissabe"/>
   <updated>2008-09-02T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2008/09/02/url-kissalastirma-hizmeti-kissabe</id>
   <content type="html">&lt;a href=&quot;http://kissa.be&quot;&gt;kissa.be&lt;/a&gt;, twitter'da fazlaca görüpte merak ettiğim tinyurl bağlantılarını bu servisi bizde yaparız ne varki dememizle ortaya çıktı. Özünde yaptığı çok basit bir iş. Çok karmaşık bir web adresini temiz ve olabildiğince kısa bir şekilde sizlere sunmak. Bunları yaparken birkaç yenilikte ekledik. Bu yeniliklerden bazıları şöyle;
&lt;ul&gt;
	&lt;li&gt;Kolay ön izleme: http://kissa.be/1X olan bir adresin sonuna '-' işareti ekleyerek önizleme yapabilirsiniz. &lt;em&gt;Örneğin; http://kissa.be/1X-&lt;/em&gt;&lt;/li&gt;
	&lt;li&gt;İstatistik: Bu sayede linkin kaç kişi tarafından ziyaret edildiğini takip edebilirsiniz.&lt;/li&gt;
	&lt;li&gt;URL açıklaması: http://kissa.be/1X olan url'in sonuna /deneme-url anlasilir aciklamalar icin kullanabilirsiniz. &lt;em&gt;Örneğin: http://kissa.be/1X/lost-sezon-5-bolum-1 gibi :)&lt;/em&gt;&lt;/li&gt;
	&lt;li&gt;metin kıssalaştırıcı.&lt;/li&gt;
	&lt;li&gt;guvenli eposta linki vermeyi saglama hizmeti&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Parola Yaratma Hizmeti (pwgen.net)</title>
   <link href="http://hasanozgan.com/blog/2008/09/02/parola-yaratma-hizmeti-pwgennet"/>
   <updated>2008-09-02T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2008/09/02/parola-yaratma-hizmeti-pwgennet</id>
   <content type="html">&lt;a href=&quot;http://pwgen.net&quot;&gt;Bu hizmet&lt;/a&gt; sayesinde çeşitli kriterlerde parola yaratabilirsiniz. Kriterler;
&lt;ul&gt;
	&lt;li&gt;Büyük harf&lt;/li&gt;
	&lt;li&gt;Küçük harf&lt;/li&gt;
	&lt;li&gt;Numerik&lt;/li&gt;
	&lt;li&gt;Özel karakterler (sizin tarafınızdan belirlenen karakter dizisi)&lt;/li&gt;
	&lt;li&gt;Uzunluk&lt;/li&gt;
&lt;/ul&gt;
Servis iki hizmet başlığı vardır:
&lt;ul&gt;
	&lt;li&gt;Ana (master) parola&lt;/li&gt;
	&lt;li&gt;Alt (slave) parola&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Ana Parola &lt;/strong&gt;Bu hizmet yukarıda saydığımız kriterlerdeki bunlara parola kuralları (password rules) diyebiliriz. Size özel parola üretir. Bu sayede düzenli olarak kendinize şifre yaratabilirsiniz. Daha hızlı ilerlemek için &lt;a href=&quot;http://labs.mozilla.com/2008/08/introducing-ubiquity/&quot;&gt;ubiquity&lt;/a&gt; &lt;a href=&quot;http://www.dahius.com/projects/ubiquity/pwgen/&quot;&gt;komutumuzu da&lt;/a&gt; kullanabilirsiniz.

&lt;strong&gt;Alt Parola&lt;/strong&gt; Bu hizmet sayesinde herhangi bir siteye kayıt olduğunuzda ana parolanız, site adresi ve belirlediginiz parola kuraliniz ile, size özel tekil bir şifre yaratılır. Bu şifre hiçbir zaman bizim tarafımızda tutulmaz. Bu hizmeti firefox için yazılan add-on ile çok hızlı bir şekilde kullanabilirsiniz.
</content>
 </entry>
 
 <entry>
   <title>Başarısız Bir Girişim Hikayesi</title>
   <link href="http://hasanozgan.com/blog/2008/09/02/basarisiz-bir-girisim-hikayesi"/>
   <updated>2008-09-02T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2008/09/02/basarisiz-bir-girisim-hikayesi</id>
   <content type="html">Cemil heyecanlıydı. İçinden bir ses sıranın ona geldiğini söylüyordu. Patronun terfi teklifini reddedip, işten ayrılmaya karar verdiğinden beri çevresindeki herkes O'na çılgın gözüyle bakıyordu. Ama Cemil kendinden çok emindi. Bu sefer kimseyi dinlemeyecek, bildiğini okuyacaktı. Zaten herşey tamam sayılırdı. Henüz kimsenin yapmadığı fikirlere sahipti. Sektörü iyi tanıyor, ihtiyaçları çok net olarak görebiliyordu. Dünyada ilk olacak süper fikirlerinde sahibiydi. Sırtını kimse yere getirmezdi. Ah keşke biraz daha hızlı olabilseydi. Ama en büyük engeli olan işinden kurtuluyordu. Artık tüm zamanı ona aitti. Sevdiği işleri yapacaktı. 6 ay idare edecek parası vardı. Neden freelance iş yapsın ki. Bu saçma bir davranış olurdu, zaten son çalıştığı şirkette çok iyi bir kazancı vardı. Öyle enerji doluydu ki, herşey çok güzel olacaktı.

İşten ayrıldıktan sonra, hemen kendi şirketini kurmak ve disiplinli bir çalışma ortamı (ofis) aramaya koyuldu. Ofis fiyatları beklediğinden daha fazlaydı. Emlakçı, emlakçı gezmelerinin sonucunda; enerjisinin büyük bir kısmını tüketti. Evinde geliştirme yapıyordu ama pek verimli olduğuna inanmıyordu. Aslında tüm gün ona kalınca, eski şirkette olduğu gibi verimli olamıyordu. Ne de olsa ev denilen kutsal tapınak, dinlenmek için gittiği inanılmaz huzur veren bir yerdi ve orada iş yapmak en büyük günahlardan biri sayılıyordu.

Sonra Starbucks'ları ofis olarak kullanmaya başladı. İstanbul'da o kadar çok starbucks vardı ki, hergün birine giderek dikkatleri üzerine çekmemesi mümkündü. Bu mekanlar sanki onun için tahsis edilen ofis gibiydiler. Hatta maslak starbucks'ta toplantıları için bir yazı tahtası bile mevcuttu. Bir insan daha ne ister ki. Fakat Starbuckslarda TTNet ADSL aboneleri için ücretsiz olan internet hizmetini ayda 3 saate düşürünce burayı ofis olarak kullanma eylemide tarihe karıştı.

Arada kafasını karıştıran, yapamayacağını söyleyen insanlar çıkmasa belki başarabilirdi. Neden işten ayrılmıştı ki; gül gibi para kazanıyordu. Aptal adam aptal! Onları dinlemek istemiyordu ama kulaklarında YAPAMAZSIN sesleri yankılanıyordu. Parasal olarak 6 ay idare edebilecek durumdayken birden nefesinin (parasının) yetmeyeceği endişesine kapıldı. Ve projelerinden çok; başarısızlığa uğrayıp uğramayacağına odaklanmaya başladı.

Çok güzel fikirleri vardı ama nereden para kazanacağını hiç düşünmemişti. Şirketin faaliyetlerini kısa vade ve uzun vade projeler olarak ikiye ayırdı. Freelance işlere evet demeyi düşünüyordu. Sonuçta iş dünyasındaki her ihtiyacı, açık kaynak camiada birileri yapmıştı. Bu şekilde finansman sorununu halledebileceğine ve zamanın büyük bölümünde projelerine odaklanacağı fikriyle kendini ikna etti. Tabii freelance işler pek beklenildiği gibi olmaz, müşterinin istekleri ise hiç bitmez idi. İlk aldığı işi, flash bilgisinin olmamasından dolayı reddetmek zorunda kaldı. Çünkü müşteri CSS ve AJAX fikrinden caymış, ve flash tasarım olmasına karar vermişti. Ee dış kayanak kullansın diyorsunuz ama proje bütçesini aşan bir harcamaydı bu. Ve o para kaybetmektense müşteri kaybetmeyi seçti. Flash bilgisi olmadan, şirket siteleri yaparak para kazanamayacağını anladı ve bundan da vazgeçti.

Cemil işinden ayrıldığından bu yana aradan 2 ay geçmişti. 2 ay gibi kısa bir sürenin sonunda  Cemil, plansız programsız giriştiği hayallerini erteleyerek iş aramaya başladı...

* * *

Gelin şimdi Cemil'in hatalarını inceleyelim:

1) Cemil, çevresinde düşlerine tüküren seslere kulak verdi. Başaramayacağınıza söyleyen insanlar muhakkak çıkacaktır. Onlara kulaklarınızı tıkayın ve onları duymayın.

2) Cemil, hayallerine güveniyordu. Ama hayallerini gerçeğe dönüştürmeyi başaracağı bir iş modeline sahip değildi.

3) Enerjisini tüketecek, çok küçük bir ayrıntıyı o kadar fazla sorun etti ki, enerjisinin büyük bölümünü burada tüketti.

Aslında Cemil'in yaptığı en doğru hamle çok fazla zorlamadan geri çekilmesi olmuş sanırım. Bazen şartları inceleyip nerede geri adım atacağını bilmekte önemli. Eminim Cemil, aldıklarından ders alarak daha mantıklı hareket edecektir. Peki Cemil'in başarısını etkileyen, Türkiye'deki eksikleri neler? Gelin beraber inceleyelim:

1) Neden böyle 1-2 kişilik proje insanları için çalışma ortamları bulunmaz. Bir zamanlar Ericsson Crea-World'u vardı. Projeniz karşılığında bir masa sahibi olurdunuz. Masaya bilgisayar ve telefon verirlerdi. Bu ortamda toplantı odası mevcuttu. Telefonlarınızı ve müşterilerinizi ilk karşılayan bir sekreteri vardı. Böyle bir yer kurmak çok mu zor? Ayrıca mobil sektöre yeni girenler padavanlar için Jedi abiler olurdu. Bence böyle mekana ihtiyaç var. Etohum biraz buna benziyor. Ama mekan sorunsalı bence büyük bir handikap.

2) Şu an maalesef Türkiye'de girişimleri tanıtacak, tarafsız ve önyargısız oluşumlara ihtiyaç var. Eğer bir girişiminiz varsa tanıtmak ayrı bir sorun haline gelebiliyor. Fazlamesai ya da Webrazzi gibi sitelerde, eğer moderatör girişiminizi beğenmez ya da girişiminizin haber değeri olmadığını düşünürse, tüm emeğiniz çöpe gidebilir ya da dayanma süreniz ve sabrınız daha fazla olabilir.

Peki Cemil neler yapmalıydı? (görüşlerinizide lütfen burada bizimle paylaşın.)

&lt;a href=&quot;http://www.guykawasaki.com/&quot;&gt; Guy Kawasaki&lt;/a&gt; ve &lt;a href=&quot;http://www.paulgraham.com&quot;&gt;Paul Graham&lt;/a&gt; ne diyor yeni bir girişim kuracaklar için ona bir göz atalım.
&lt;ol&gt;
	&lt;li&gt;Dünyayı değiştirmek için bir sorun bulun ve çözüme odaklanın.&lt;/li&gt;
	&lt;li&gt;Prototipi oluşturun (önce yap sonra iş planını düşün)&lt;/li&gt;
	&lt;li&gt;İş modeli oluşturun.&lt;/li&gt;
	&lt;li&gt;Özündeki büyüyü ortaya çıkarın (kısa olsun)&lt;/li&gt;
	&lt;li&gt;Pazarlama, satış stratejisi, mali tahminler ve metrikler çıkartılmalı.&lt;/li&gt;
	&lt;li&gt;Rakipleri belirlemeli.&lt;/li&gt;
	&lt;li&gt;Karlılığı değil nakit akışını hedefleyin.&lt;/li&gt;
	&lt;li&gt;Önce piyasaya sürün sonra sınayın.&lt;/li&gt;
	&lt;li&gt;Forma değil fonksiyona odaklanın.&lt;/li&gt;
	&lt;li&gt;Doğrudan siz satın.&lt;/li&gt;
	&lt;li&gt;Niş bir fikir bulun ve O'na odaklanın.&lt;/li&gt;
&lt;/ol&gt;
Son olarak;
&lt;ol&gt;
	&lt;li&gt;Çok basit bir fikre odaklanın.&lt;/li&gt;
	&lt;li&gt;Diğer startuplarında katkı sağlayacağı kadar basit ve esnek olsun. (bknz: &lt;a href=&quot;http://twitter.com&quot;&gt;twitter.com&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;Asla bir araçta uzmanlaşmayın, sektörde uzmanlaşın! Örneğin; programlama dili yerine web'e hakim olun.&lt;/li&gt;
	&lt;li&gt;Ve başaracağınıza inanın.&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Web 2.0 Trendleri</title>
   <link href="http://hasanozgan.com/blog/2008/08/29/web-20-trendleri"/>
   <updated>2008-08-29T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2008/08/29/web-20-trendleri</id>
   <content type="html">Web dünyasına yön veren projelerin, ilk kez hepsi bir yerde.&lt;br/&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tr&gt;
&lt;td valign=&quot;top&quot;&gt;&lt;a href=&quot;http://www.hasanozgan.com/wp-content/uploads/2008/08/web20_trends.jpg&quot;&gt;&lt;img class=&quot;alignnone size-medium wp-image-12&quot; title=&quot;web20_trends&quot; src=&quot;http://www.dahius.com/tr/wp-content/uploads/2008/08/web20_trends-300x280.jpg&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;280&quot; /&gt;&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://www.hasanozgan.com/wp-content/uploads/2008/08/ia_webtrends_2007_2_1024_768.gif&quot;&gt;&lt;img src=&quot;http://www.dahius.com/tr/wp-content/uploads/2008/08/ia_webtrends_2007_2_1024_768-300x225.gif&quot; alt=&quot;&quot; title=&quot;ia_webtrends_2007_2_1024_768&quot; width=&quot;300&quot; height=&quot;225&quot; class=&quot;alignnone size-medium wp-image-22&quot; /&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;ul&gt;
	&lt;li&gt;Pictures&lt;/li&gt;
	&lt;li&gt;Social Bookmarks&lt;/li&gt;
	&lt;li&gt;Comment &amp;amp; Reputation&lt;/li&gt;
	&lt;li&gt;Crowdsourced Content&lt;/li&gt;
	&lt;li&gt;Blog Platforms&lt;/li&gt;
	&lt;li&gt;Blogs/Conversations&lt;/li&gt;
	&lt;li&gt;Blog Communities&lt;/li&gt;
	&lt;li&gt;Micromedia&lt;/li&gt;
	&lt;li&gt;Lifestreams&lt;/li&gt;
	&lt;li&gt;Specific to Twitter&lt;/li&gt;
	&lt;li&gt;SMS/Voice&lt;/li&gt;
	&lt;li&gt;Social Networks&lt;/li&gt;
	&lt;li&gt;Customers Service Networks&lt;/li&gt;
	&lt;li&gt;Location&lt;/li&gt;
	&lt;li&gt;Video&lt;/li&gt;
	&lt;li&gt;Video Aggregation&lt;/li&gt;
	&lt;li&gt;Documents&lt;/li&gt;
	&lt;li&gt;Events&lt;/li&gt;
	&lt;li&gt;Music&lt;/li&gt;
	&lt;li&gt;Wiki&lt;/li&gt;
	&lt;li&gt;Live Casting / Video and Audio&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>QualityRank (Web Analiz, Ölçüm ve Stratejileri)</title>
   <link href="http://hasanozgan.com/blog/2008/08/21/qualityrank-web-analiz-olcum-ve-stratejileri"/>
   <updated>2008-08-21T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2008/08/21/qualityrank-web-analiz-olcum-ve-stratejileri</id>
   <content type="html">QualityRank sektörel web disiplinidir. Bir web projesinde olması gerekenleri inceler. Bu konuda çalışmaları &lt;a href=&quot;http://www.netology.org&quot;&gt;netology foundation&lt;/a&gt; altında toplanacak. Katkılarınızı, öneri ve yorumlarınızı bekliyorum.
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Çekirdek&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;Kod kalitesi&lt;/li&gt;
	&lt;li&gt;Veritabanı yapısı&lt;/li&gt;
	&lt;li&gt;Mimari&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performans&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;Test&lt;/li&gt;
	&lt;li&gt;Önbellek&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Kullanılabilirlik&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;Tasarım&lt;/li&gt;
	&lt;li&gt;Kullanıcı Dostu&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Hedefler&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;Hedef Kitlesi&lt;/li&gt;
	&lt;li&gt;Aramak &amp;amp; Aranmak&lt;/li&gt;
	&lt;li&gt;Kullanıcı Sayısı&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;İçerik&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;Kaliteli İçerik&lt;/li&gt;
	&lt;li&gt;Etkileşim&lt;/li&gt;
	&lt;li&gt;Performansı Etkileyen İçerikler&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;İstatistik&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;Ziyaretçi Bilgisi&lt;/li&gt;
	&lt;li&gt;Arama motoru ve Referans Site&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt; Standartlar&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;Web tarayıcısı desteği&lt;/li&gt;
	&lt;li&gt;XHTML &amp;amp; CSS&lt;/li&gt;
	&lt;li&gt;W3C&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt; Güvenlik&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;Saldırılar&lt;/li&gt;
	&lt;li&gt;Açıklar&lt;/li&gt;
	&lt;li&gt;En Zayıf Halka (İnsan Faktörü)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Hizmet&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;İş Akışı&lt;/li&gt;
	&lt;li&gt;Destek&lt;/li&gt;
	&lt;li&gt;Geri Besleme&lt;/li&gt;
	&lt;li&gt;Güven&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt; Yenilik&lt;/strong&gt;
&lt;ul&gt;
	&lt;li&gt;Sitede Kullanılan Teknolojiler Zamanın Neresinde ? (AJAX, SOAP vs..)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
</content>
 </entry>
 
 <entry>
   <title>Web 2.0 Projelerin Özellikleri</title>
   <link href="http://hasanozgan.com/blog/2008/07/24/hello-world-2"/>
   <updated>2008-07-24T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2008/07/24/hello-world-2</id>
   <content type="html">Web 2.0 hayatımıza RIA teknolojileri ile girdi. Ardından etiketlerle tanıştık. Ve sitelere yorum yazmaya, içerikleri oylamaya vb. başladık. Peki nedir Web 2.0 ve bir Web 2.0 projesinde olması gereken özellikler nelerdir? Lütfen siz de aklınıza gelen konuları burada paylaşın!
&lt;ul&gt;
	&lt;li&gt;İçerik (Etkileşim)
&lt;ul&gt;
	&lt;li&gt;Etiketlenir&lt;/li&gt;
	&lt;li&gt;Oylanır&lt;/li&gt;
	&lt;li&gt;Arkadaşına gönder.&lt;/li&gt;
	&lt;li&gt;Kötü içerik bildirilir. (Kendi kendine işleyen onay mekanizması)&lt;/li&gt;
	&lt;li&gt;Yorum yazılır&lt;/li&gt;
	&lt;li&gt;Katkıya göre alınan karma puanı. (demokrasi)&lt;/li&gt;
	&lt;li&gt;Mashups (veri paylaşımı)&lt;/li&gt;
	&lt;li&gt;Takip edilebilir. (RSS desteği)&lt;/li&gt;
	&lt;li&gt;Web 3.0 için veriyi anlamlandırabilmek.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;Ara birim (RIA)
&lt;ul&gt;
	&lt;li&gt;AJAX&lt;/li&gt;
	&lt;li&gt;Flash&lt;/li&gt;
	&lt;li&gt;Temiz URL (rewriterule)&lt;/li&gt;
	&lt;li&gt;MVC, REST&lt;/li&gt;
	&lt;li&gt;CSS&lt;/li&gt;
	&lt;li&gt;Kullanıcı dostu (bknz: del.icio.us)&lt;/li&gt;
	&lt;li&gt;Bookmarklets&lt;/li&gt;
	&lt;li&gt;add-on ve iPhone gibi cihazlar için API desteği&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;İş Modelleri
&lt;ul&gt;
	&lt;li&gt;Ucu açık, genişleyebilir fikirler (twitter, reddit vb...)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;Gelir Modeli
&lt;ul&gt;
	&lt;li&gt;Reklam (nefret ediyorum)&lt;/li&gt;
	&lt;li&gt;Üyelik (Google App)&lt;/li&gt;
	&lt;li&gt;Satış (Amazon)&lt;/li&gt;
	&lt;li&gt;Komisyon (ebay)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;Pazarlama (Marketing)
&lt;ul&gt;
	&lt;li&gt;10 kez insanların bu servisi duymasını sağlamak.&lt;/li&gt;
	&lt;li&gt;Kullanmalarını teşvik edecek faydayı göstermek.&lt;/li&gt;
	&lt;li&gt;Takip edilenlerin ürünü kullanmasını ve duyurmasını sağlamak.&lt;/li&gt;
	&lt;li&gt;Sansasyon yaratmak. (büyük bir firmada çalışan bir kişinin sizi hacklemesi)&lt;/li&gt;
	&lt;li&gt;Benzer fikir sahibi(rakip) firmanın bir özelliğinin olmaması ve kısa sürede hayata geçirememesi durumundan faydalanmak. Örneğin; bir e-bilet servisi kurdunuz. rakibiniz olan firmada bilet aldığınız mekandan yer seçemiyorsunuz. Bunun üzerinden reklam yapabilirsiniz.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Yazılım ve Oyun Kardeşliği</title>
   <link href="http://hasanozgan.com/blog/2008/05/03/yazilim-ve-oyun-kardesligi"/>
   <updated>2008-05-03T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2008/05/03/yazilim-ve-oyun-kardesligi</id>
   <content type="html">Yazılım dünyanın en eğlenceli ve en zor işlerinden biri. Eğlenceli çünkü yaratıcılığımızı konuşturuyoruz ve ortaya koyduğumuz ürünü, diğer insanların beğenisine sunuyor, onların takdiri ya da tekdiri ile muhattap oluyoruz. Zor çünkü sürekli bir yarış halindeyiz. Sürekli yeni birşeyler yaparak ile bir adım önde olmak zorundayız. Bilgimizi sürekli güncel tutmak ve yorumlamak zorunda oluşumuz gerçeği söz konusu. Bu son madde  öğrenmeyi seviyorsanız aynı zamanda eğlenceli.

Proje bitiş tarihleri yaklaştıkça yazılım geliştirmenin zorluğu daha çok anlaşılır. Sıkıntılar ortaya çıkar. Proje iyi yönetilmediyse %99 ihtimalle mesai saatleri dışında da proje için çalışmak gerekir. Lakin işiniz gibi bir de özel yaşamınız vardır. Ve bir hafta önceden yaptığınız planlar bir anda tehlike altına girer. Bu durumda iki yolunuz vardır. Ya gidersiniz, ya da kalırsınız. Dünyada da böylemi bilmiyorum ama gitmeyi seçerseniz, proje yöneticilerinin gizli silahları olan duygusal baskı kullanmaya çalışırlar. Burada kalmak ya da gitmek gerekmesi konusunda bir tartışma başlatmak değil amacım. Gitmek ve kalmak bazen doğru bazen de yanlış olan bir davranış olabilir. Fakat gitmeniz durumunda takım arkadaşlarınızın size olan duygularında negatif bir düşünce yer edeceği kesindir.

Projelerin başarılı ve kaliteli olmasında en önemli etkenlerden biride bu işi yapan yazılım geliştiricilerin motivasyonudur. Öncelikle takımdaki her birey aynı derecede önemlidir. İyi bir proje takımı iş dışında da zamanın her anında da beraber gezen takım değildir. İyi proje takımı iyi anlaşan, ekip arkadaşları ile empati kurabilen iyi bir dans veya tiyatro topluluğu gibidir. Birbirlerinin kusurlarını kapatırlar. Bibirlerine yardımcı olurlar. Takımda herkes önemlidir ve herkes bunu hissetmek ister ve hissetmelidir. Övgüler ve küçük ödüllendirmeler, yapılan işte başarının ve memnuniyetin kanıtıdır. Ben yazılıma başlamamın sebebi insanların ortaya koyduğum ürünü takdir etmelerini görmek istemem olmuştu. Ve gerçekten başarılı bir ürünü, proje ekibi gevşemesin diye takdir etmemek bence demotive edici yanlış bir davranış ve proje için yanlış bir hamledir.

Proje ekibi birbirini dinlemeli, anlamalıdır evet ama aynı zamanda kendi hatalarınıda görebilmelidir. Kendi hatalarımızı görmek çok kolay değildir. Bunu birinin bize söylemesi ile farkedebiliriz. Ama bunun söyleniş şekli ve niyeti çok önemlidir. &quot;Acaba benim ayağımımı kaydırmaya çalışıyor.&quot; &quot;Bu adam da hep benim hatalırımı görüyor&quot; diye düşünebilirsiniz. İşte iyi proje ekiplerinde böyle bir düşünce olmaz. Çünkü takım arkadaşına güvenir.

Neden yazılım geliştiriyorsunuz? Bu işi neden yapıyorsunuz? Hiç düşündünüz mü? Cevaplar farklı farklı olabilir. Ama altında yatan asıl şey mutlu olmaktır.  &lt;strong&gt;Mutluluk paylaşılırsa gerçektir. &lt;/strong&gt;Bu kanıtını çok uzakta aramanıza gerek yok. Çocukken oyunlar oynarken ne kadar mutlu olduğunuzu bir düşünün. Yazılım bir takım işidir ve insanı mutlu eden bir oyundur. Ve oyunun amacı dünyayı kurtarmaktır. Kurtarılan dünyanın hacmi önemli değil. Bu sizin iç dünyanız bile olabilir. Ne farkeder ki! amaç dünyayı kurtarmaktır.

İnsan Homoludensdir. Yani oyun oynayan bir valıktır. Hayat bir oyundur felsefesi yazılım takımına yansıtıldığı ve yapılan projenin oyunun bir parçası olduğu yazılım ekibinin üzerindeki baskıyı alır ve onlara eğlence kapısını açar. Ve işin kalitesi üzerine tatlı bir rekabet başlar. Herkes rolünün hakkını vermeye çalışır.

Tiyatro ve Yazılım iki farklı grup gibi görünür. Tiyatrocular, yazılım geliştiricilere göre çok daha sosyal insanlardır. Aslında bu doğru değildir. Yazılımcılarda sosyal insanlardır. Sadece farklı bir platformda boy gösterir ve insanların anlayamadığı bilgisayarca konuşurlar. Yazılımcılarin komik alışkanlıkları vardır. Yüzyüze konuşmak yerine MSN'den konuşmayı ya da eposta ile birşey sormanızı beklerler. İşe odaklanmak için yapılan bu şey bence çok komiktir. İyi bir takım etkileşim içindedir. Ben bu yüzden çevik proje yönetim metodolojilerini seviyorum. Çünkü büyük projelerde küçük gruplara bölünerek bu etkileşimi sağlamaya çalışıyor hepsi.

Çarşamba günleri, &lt;a href=&quot;http://www.gelisimatolyesi.com/&quot;&gt;Gelişim Atölyesi&lt;/a&gt; tarafından açılan &lt;strong&gt;Oyun Atölyesi&lt;/strong&gt;ne katılıyorum. Amacım sadece eğlenmek ve tiyatrodan kopmamak isteğiydi. Oyun atölyesinde doğaçlama tiyatro yapıyoruz. Küçük bir topluluğuz. Takımda herkes çok değerli ve farklı. Aslında her insan farklıdır. Bunu kısa sürede öğreniyorsunuz. Çünkü size dünyayı farklı bir gözle görmeniz gerektiği gösteriliyor. Çevrenizdeki insanları farketmeye başlıyorsunuz. Çuvaldızı kendime batırmaya başlıyorsunuz. Ben, hatalarımı, yaptığım bencillikleri görmeye başladım. Çünkü çıkardığınız küçük oyunda bu bencillikler sırıtıyor. Bazen kendi bildiğimi okuduğumu ve takım arkadaşlarımı dinlemediğim farkettim. Artık hatalarımı biliyorum. Ve bunları düzeltmeye başladım. Unutmadan eklemeliyim, asıl amacım eğlenmek ve bende yarattığı mutluluk anlatamayacağım bir duygu. Evet gerçek mutluluk paylaşılandır. Bunu artık biliyorum. Belki bu yüzden çarşamba günlerini sabırsızlıkla bekliyorum. Buradan Gelişim Atölyesi'nin kurucusu Özlem Seller'e ne kadar teşekkür etsem azdır. Sevgili Nalan Hocam(Çeliker), iyi ki varsınız. Tiyatro'nun kurgu ve öykü dışındaki oyun olma tarafını sizin sayenizde anladım. Ve sevgili oyun arkadaşlarım(Aydan, Eda, Gülşah, İlkay, İlker, Koray, Kubilay, Yeşim) hepinize sevgi dolu kocaman teşekkürler :)

Tiyatro ile Yazılım gerçekten birbirine çok benziyor. Sadece olaya doğru açıdan bakmak gerekiyor. Eğer proje takımınızda yukarıda saydığım sorunlarınız varsa onları tiyatro ile tanıştırın. Tiyatroya izleyici kalmayın, sahnede kendinize yer edinin. Kısa sürede proje takımınızdaki değişikliğe inanamayacaksınız....
</content>
 </entry>
 
 <entry>
   <title>Üretim Ekonomisinin Çöküşü</title>
   <link href="http://hasanozgan.com/blog/2008/03/16/uretim-ekonomisinin-cokusu"/>
   <updated>2008-03-16T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2008/03/16/uretim-ekonomisinin-cokusu</id>
   <content type="html">Üretime dayalı ekonominin çöktüğünün farkında mısınız? Birşeyi üret, paketle sat devri aslında son demlerini yaşıyor. Artık birşeyi kaliteli üret, insanların beğenisine sun ve  ondan katma değer elde et devri başladı. Yani Hizmete dayalı bir ekonomi emekleme safhasında.

Bunun ilk örneklerini yazılım endüstrisinde gördük. Özellikle Web'in yaygınlaşmasıyla hizmete dayalı iş modelleri artmaya başladı. Hizmete dayalı iş modelinin temelinde de Özgür Yazılım ve Açık Kaynak felsefesi mevcut. Yani ürettiğinizi insanların beğenisine sunup eğer gerçekten kazanıyorlarsa, bakım gibi katma değerlerden para elde ediyorsunuz. Son 5 yılda Bilişim devleri ve hatta Microsoft bile bunun farkında ve bu yaklaşımı anlama yolunda yeni iş modelleri geliştirmeye çalışıyorlar.

Bundan 10 yıl önce yazılımlar için çok güçlü koruma yöntemleri geliştirilirken ve bir yazılımın bedava dağıtılması dahi söz konusu değildi. Bugün bu durum kısmen değişti. Evet halen bu duruma direnen firmalar var. Ama bu direnmenin onların sonunu hazırladığı muhakkak.

Bugün katma değer elde etmenin bir yolunu bulması gereken bir sektörden söz edeceğim. Müzik!

Müzik sektörü günümüzde üret ve dağıt mantığı ile   para kazanmayı hedefler. Özellikle her geçen gün yeni şarkıcılar çıkıyor. Albüm çıkarıp bunu satmak bundan kazanç elde etmeyi bekliyorlar. Neden bir müzisyen ticaretten para kazanmayı hedefler. Aslında bunu hedefleyen müzisyenler değilde yapımcılardır hiç şüphesiz. Bir albüm hazırlamanın maliyeti nedir? Yeni besteler, aranjör, stüdyo ve çoğaltım ve dağıtım. Bugün çoğaltım ve dağıtımın CD'den olması onca masrafa girilmesi oldukça gereksiz. Bunları bir müzisyen rahatlıkla internetten yapabilir. İnternet gibi bir ortamdan yapmasının faydalarına ise birazdan ayrıca değineceğim. Aslında işin katma değer kısmı interneti doğru kullanmakta yatıyor.  Peki çoğaltım ve dağıtımı çıkarttık. Geriye ne kaldı? Beste, aranje, stüdyo. Bence bir müzisyen beste yapamıyorsa ve bir müzik aleti çalamıyorsa ona müziyen dememek lazım. Şarkıcı yada ses sanatçısı denebilir. Eğer sesi gerçekten iyi ise muhakkak sponsor bulabilir. Geldik stüdyoya bence bunun için sponsorlar bulunabilir. Ve internet sitenizin bir yerlerine sponsorların logoları konabilir. Sanata destek vermek isteyen bir sürü şirket olduğu muhakkak. Bunu sağlamanın yolu şüphesi viral pazarlamadır. Bir demo yapın ve internette insanların beğenisine sunun. Eğer gerçekten iyi ise size doğru sponsorları getirecektir. Peki yapımcılardan kurtulduk. Bedava albümde yaptık dediniz bizim yaşamamız için para kazanmamız, müzik aletleri almamız vs.. gerek değil mi? Haklısınız ! Ama sabredin yazım daha bitmedi.

Müziğinizi dünyanın beğenisine sunun. İngilizce albüm yapın demiyorum. İyi müzik yapın diyorum. İyi müzik her zaman dinleyici bulur. Bundan yüz yıl önce konan sınırlar bugün sanal olarak yeniden kalkmış durumda. İnsanlar diledikleri gibi özgürce iletişim kurabiliyorlar. İnternet sitenizden insanların dilediklerince şarkılarınızı dinlemelerine izin verin. Ama sitenize üye olsunlar ki dünyanın neresinde daha popüler olduğunuzu neresinde ne kadar dinlendiğinizi sayısal olarak görün. Hatta bir yolu varsa şarkınızın ne kadar dinlendiğini bile raporlaryın. Ya da size bu raporları sunacak bir portala üye olun! Sayılar para kazanmak için önemlidir. Nasıl mı para kazanacaksınız? Konser vererek! Ortalama olarak baktığınızda bir albüm 10 YTL, bir konser bileti ise 70 YTL. Ve hayran kitleleri bu konserlere geliyor. Bu fırsatlardan biri. Ya da sitenizde açacağınız bir yardım (donate) alanı ile insanların müziğinize katkıda bulunmalarını isteyebilirsiniz. Emin olun çok fazla destek gelecektir.

Kısacası; dünya kaliteli hizmete dayalı bir ekonomik çerçeve içerisine giriyor. Ve bu ekonominin içinde başarılı olacaklar parası olan insanlar değil kaliteli ve yenilikçi fikirlerle üretim yapan ve hizmet veren kesim olacaktır.
&lt;p align=&quot;center&quot;&gt;&lt;em&gt;Eğer insanlara, ne istediğini sorarsanız; daha hızlı atlar isterler. &lt;strong&gt;Henry Ford&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

Henry Ford bu sözüyle neyi kasteddiğini düşündünüz mü? Hayranlarınızı dinleyin. Fakat sadece dinlemekle kalmayın birde dinlediğinizi yorumlayın. Aslında daha hızlı atlar mı istiyorlar! Hayır! Bir yerden başka bir yere hızlı bir şekilde gitmek istiyorlar. Henry Ford bu isteği yorumladı ve sonuç olarak T1'i yarattı.

Yıllar önce Napsterın büyük bir patlama yaptığında hayranlarınız sizden bir talepte bulunuyordu. Eğer doğru bir şekilde yorumlansaydı Last.FM ozamandan hayatımızda yerini alırdı. Demem o ki;
&lt;p align=&quot;center&quot;&gt;&lt;em&gt; Siz müziğinize odaklanın; diğer her şey arkasından gelecektir.&lt;/em&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Geleceğin Uygulama Mimarisi</title>
   <link href="http://hasanozgan.com/blog/2008/02/09/gelecegin-uygulama-mimarisi"/>
   <updated>2008-02-09T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2008/02/09/gelecegin-uygulama-mimarisi</id>
   <content type="html">&lt;ol&gt;
	&lt;li&gt;Binary veri biçimlerinden XML biçimlerine geçiş. OpenXML (Word veya Excel), Kullanıcı Arayüzü (XAML, XUL, JavaFX, Flex)&lt;/li&gt;
	&lt;li&gt;İşletim sistemlerinde donanım bağımsızlık. (WebOS)&lt;/li&gt;
	&lt;li&gt;Dünyanın ortak zihni ve semantic web servisleri.&lt;/li&gt;
	&lt;li&gt;Hizmete dayalı iş modeli. (SaaS, S+S, Mashup ).&lt;/li&gt;
	&lt;li&gt;İnsan modelleme. Ortak problemlerin ortak çözümleri vardır. Bunları sağlamak için kurulmuş servisler. (Facebook)&lt;/li&gt;
	&lt;li&gt;Yapboz programcılığı (OpenSocial, FacebookUI)&lt;/li&gt;
	&lt;li&gt;Ortak kimlik tanımlama çalışmaları (yeni protokoller, en ilkeli bknz. OpenID)&lt;/li&gt;
	&lt;li&gt;Yeni arama anlayışı. Önce dizin bazlı arama vardı. Sonra semantic arama çıktı. Yeni yüzyılda çözüm odaklı aramalar baş gösterecek)&lt;/li&gt;
	&lt;li&gt;Şeffaf toplumun çok yakın olduğunun işaretçisi Facebook gibi uygulamalar.&lt;/li&gt;
	&lt;li&gt;İstemci işlemci gücü :) Dünyadaki PC'lerin çoğu %100 kullanılmıyor. Serverların yapacağı çoğu
iş istemci programlara yüklemek. Örneğin, genellikle server tarafında
yapılan resim ölçütlendirme (resize) işlemi istemci makineye
yaptırılabilir.&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Açık Şirket (Open Company) Yaklaşımı</title>
   <link href="http://hasanozgan.com/blog/2008/02/08/acik-sirket-open-company-yaklasimi"/>
   <updated>2008-02-08T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2008/02/08/acik-sirket-open-company-yaklasimi</id>
   <content type="html">Birkaç yıl önce Hacker Etiği adında bir kitap okumuştum. Kitapta bilgisayar üstadları(hackers) tarafından yeni bir çalışma modeli yaratıldığından uzun uzadıya söz ediyordu.&lt;br&gt;&lt;br&gt;Bu felsefe şunu öngörür. Yapılacak işin en verimli olduğu saatlerde ve en verimli kalitede yapılmasını sağlamak için kişiye uygun saatlerde çalışmasına izin vermektir. Yani siz gece sessizliğinde kendinizi işe veriyor ve bu saatlerde çalışmayıda seviyorsanız, bu saatler çalışın. Ofiste rahat etmiyormusunuz, ofise gelmeyin. Rahat ettiğiniz yerde kodunuzu yazın. Size verilen işi, belirlenen kalitede ve beklenen sürede tamamlayın. Maalesef günümüzde birçok şirket bu yaklaşıma sıcak bakmıyor. Kontrolsüzlük ve disiplinsizlik düşüncesinden dolayı bu şekilde düşünülür. Aslında bu durum ne kontrolsüzdür ne de iş disiplinini öldürür. Alternatif bir iş modeli fikrini ortaya atmak istedim. Sizce ütopya mı? Bence değil?&lt;br&gt;&lt;br&gt;&lt;b&gt;Nasıl Çalışacak?&lt;/b&gt;&lt;br&gt;&lt;ol&gt;&lt;li&gt;Şirket kültürü ve şirketin tüm iş süreçleri için prosedürler tanımlanmalı. &lt;br&gt;&lt;/li&gt;&lt;li&gt;Şirketin herşeyi şeffaf. Ciddi raporlarla destekleniyor.&lt;br&gt;&lt;/li&gt;&lt;li&gt;İnsan bağımlı değil. Herkesin bir yedeği var. Her yapılan işin belgelendirmesi mevcut. Bilgi görüntülü ve yazılı olarak tutulacak.&lt;/li&gt;&lt;li&gt;Şirketin bir sahibi yok, yaratıcısı var. Kıdem ve aktif olarak en çok katkıda bulunanın daha çok söz sahibi vardır.&lt;/li&gt;&lt;li&gt;Departman yönetimini ekranında gelir paylaşımı katsayıları mevcut.&lt;/li&gt;&lt;li&gt;Çalışan havuzu var. Gerçek şirketlerden bir farkı yok. Satış departmanı belli bir iş satışını garanti ederken, proje evi de bünyesinde çalışanlara iş sağlamayı garanti etmeli.&lt;/li&gt;&lt;li&gt;Her yerden çalışabilme imkanı. &lt;br&gt;&lt;/li&gt;&lt;li&gt;Haberleşme: MSN, Jabber, Skype, Trac, Bugzilla gibi araçlarla.&lt;/li&gt;&lt;li&gt;Etkinlik: Bu şirketlerin yazılımcıların birbirleri ile tanışması için etkinlikler düzenler.&lt;/li&gt;&lt;li&gt;Standartların oluşturulması.&lt;/li&gt;&lt;li&gt;Kazanılan para hisse usulü dağıtılıyor. Kıdem ve katkınız ile orantılı.&lt;/li&gt;&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Adım Adım Ruby - 2 -</title>
   <link href="http://hasanozgan.com/blog/2007/11/11/adim-adim-ruby-2"/>
   <updated>2007-11-11T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2007/11/11/adim-adim-ruby-2</id>
   <content type="html">Eğer kendi kendinize birşey öğreniyorsanız ve birşeyler öğrenirken sıkılıyorsanız bunun sebebi kesinlikle bilinmeyenin göz korkutmasıdır. Yani kitaplar şimdi bunu yapıyoruz şunu kullanacağız. Bir sürü bilinmeyen bir sürü soru işareti ve sonunda oluşan kocaman bir korku ortaya çıkar. Eğer sabır da göstermezsek sonunda pes edip öğrenilen şeyden vazgeçeriz. Bu sebeple yeni birşey öğrenirken geneline bir bakış atmak. Ne neymiş, neden kullanılırmış anlamak isterim. İşte bu sebeple bu yazıda ruby'i ruby yapan şeylerden ve genel özelliklerinden söz edeceğim. Bunların hızlıca üzerinden geçeceğim ama verdiğim bilgiler referans niteliğinde olacak. İleride bu konuda örnekler verdiğimde kodu anlamanıza büyük kolaylık sağlayacak.

&lt;strong&gt;Ruby'i Seçmeniz İçin Birkaç Neden?&lt;/strong&gt;
&lt;ul style=&quot;list-style: disc; margin-left: 18px;&quot;&gt;
	&lt;li&gt;Ruby tamamen nesne yönelimli bir programlama dilidir.&lt;/li&gt;
	&lt;li&gt;Operatörleri yeniden yazmanıza izin verir.&lt;/li&gt;
	&lt;li&gt;Bir sınıfın kaynağına dokunmadan bir metodu yeniden yazmanıza izin verir.&lt;/li&gt;
	&lt;li&gt;İşinizi kolaylaştıracak birçok operatöre sahiptir.&lt;/li&gt;
	&lt;li&gt;Eğer C biliyorsanız yeni kütüphaneler yazarak dili genişletebilirsiniz.&lt;/li&gt;
	&lt;li&gt;Blok mimarisi sayesinde bir metoda bir kod işlemi aktarabilir ve birçok şeyi tek satırda yapabilirsiniz.&lt;/li&gt;
	&lt;li&gt;Betik dilidir. Yapılan değişiklikleri anında siteye yansıtır. Java gibi jar dosyaları ile boğuşmazsınız.&lt;/li&gt;
	&lt;li&gt;String ve RegEx sınıfları sayesinde hızlı hareket etmenizi sağlar. Programcının menfaatine iş yapar ve çevir bir dildir.&lt;/li&gt;
	&lt;li&gt;Platform bağımsızdır. Birçok platformda yazılan kodunuz çalışır.&lt;/li&gt;
	&lt;li&gt;Dinamik değişken tanımlama.&lt;/li&gt;
	&lt;li&gt;Birçok dilden miraslar aldığı için yazılımcının alışkanlıklarına göre kod yazım esnekliği.&lt;/li&gt;
	&lt;li&gt;Yorumlanan bir dildir.&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Genel Yazım Kuralları&lt;/strong&gt;
&lt;ul style=&quot;list-style: disc; margin-left: 18px;&quot;&gt;
	&lt;li&gt;Yorum Satırları
# karakteri, bulunduğu satırı, satır sonuna(EOL) kadar yorum satırına dönüştürür.
Yorumlayıcı bu satırı görmezden gelir.
'=begin' ve '=end' arasında kalan satırları yorumlayıcı görmezden gelir.&lt;/li&gt;
	&lt;li&gt;Deyim Sonlandırma
Deyim sonlandırma işlemi ya satır sonu ya da eğer aynı satırda birkaç deyim kullanılacaksa (;) (noktalı virgül) işaretidir.&lt;/li&gt;
	&lt;li&gt;Sınıf ve Modül tanımları büyük harfle başlamalıdır. (Ör: REXML::Element)&lt;/li&gt;
	&lt;li&gt;Değişken tanımları küçük harfle olmalıdır. Değişkenler ilk tanımlamada değer almalıdır. Tek başına yazılamaz. (Ör: foo = 2)&lt;/li&gt;
	&lt;li&gt;Method tanımları küçük harfle başlar. (Ör: Math:cos(x))&lt;/li&gt;
	&lt;li&gt;Sabitlerin tamamı büyük harf olmalıdır. (Ör:Math:PI)&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Reserve Kelimeler&lt;/strong&gt;
&lt;pre&gt;alias   and     BEGIN   begin   break   case    class   def     defined
do      else    elsif   END     end     ensure  false   for     if
fin      module  next    nil     not     or      redo    rescue  retry
return  self    super   then    true    undef   unless  until   when
while   yield&lt;/pre&gt;
&lt;strong&gt;Veri Tipleri&lt;/strong&gt;
Sayı(numbers),
String,
Aralık(ranges),
RegEx, Sembol(symbol),
Diziler(arrays),
Sözlükler(hashes)
Prosedur (proc)

&lt;strong&gt;Sayılar&lt;/strong&gt;
Bignum (1234567890)
Fixnum (1234)
Float (1234.56)
Hex (0xFFFF)
Binary (0b0101010)
Octal (0377)
?a       ASCII karakterinin sayısal degeri
?\C-a    Control-a karakterinin sayısal degeri
?\M-a    Meta-a karakterinin sayısal degeri
?\M-\C-a Meta-Control-a karakterinin sayısal degeri

&lt;strong&gt;String&lt;/strong&gt;
%() ile baslayan karakterleri asagidakiler string karakteridir.  %[], %!!, %@@, vb.

'araya deger girilemez'
&quot;#{degisken}, ve backslash karakter alir\n&quot;
%q(araya deger girilmez)
%Q(araya deger ve backslash karakteri alir)

%(araya deger ve backslash karakteri alir)

`echo komut satırı ara deger ve backslash karakterleri alir.` =&amp;gt; `ls` denemek ister misiniz?
%x(echo komut satırı ara deger ve backslash karakterleri alir.)

Backslash
\t (tab),
\n (newline),
\r (carriage return),
\f (form feed),
\b (backspace),
\a (bell),
\e (escape),
\s (whitespace),
\nnn (octal),
\xnn (hexadecimal),
\cx (control x),
\C-x (control x),
\M-x (meta x),
\M-\C-x (meta control x)

&lt;strong&gt;Semboller&lt;/strong&gt;

Sozluk(hash) ifadelerinde kullanmak icin idealdir. C'de enum'a benzer fakat deger almazlar.(Bazi ozel sembol tanımlama tipleri alır) Asagida orneklerle açıklamaya çalıştım.

:sembol                         =&amp;gt; :sembol
:'#{&quot;ara&quot;} deger almaz'  =&amp;gt; :&quot;#{&quot;ara&quot;} deger almaz&quot;
:&quot;#{&quot;ara&quot;} deger&quot;     =&amp;gt; :&quot;ara deger&quot;
%s(#{&quot;ara&quot;} deger almaz) =&amp;gt; :&quot;#{&quot;ara&quot;} deger almaz&quot;

&lt;strong&gt;Aralıklar&lt;/strong&gt;
1..10 =&amp;gt; 1'den 10'a kadar (10 dahil)
1...10 =&amp;gt; 1'den 10'a kadar (10 haric)
'a'..'z'
'a'...'z'
(1..10)  === 5   =&amp;gt; dogru
(1..10)  === 10  =&amp;gt; dogru
(1...10) === 10  =&amp;gt; yanlis
(1..10)  === 15  =&amp;gt; yanlis

&lt;strong&gt;Diziler&lt;/strong&gt;
[1, 2, 3]
%w(foo bar baz)
%W(foo bar baz #{var})

Dizilerde index degerleri negatif deger alabilir. Bu dizinin orjinini sondan baslatir.

&lt;strong&gt;Sözlükler (Hashes)&lt;/strong&gt;

{'bir'=&amp;gt;1, 'iki'=&amp;gt;2, 'uc'=&amp;gt;3}
{ expr =&amp;gt; expr...}

&lt;strong&gt;Değişkenler ve Sabitler&lt;/strong&gt;

4 tip değişken etki alanı vardır. Değişkenin isminin başına gelen özel işaretlerle ve etki alanına göre yorumlayıcı tarafından anlaşılır.

1) Global değişkenler
Tanım: $global_variable = 0
Uygulama boyunca yaşarlar. Özellikle ön tanımlı global değişkenler ile kullanılır.
Hepsi ($) işareti ile başlar.

2) Sınıf Değişkenleri
Tanım: @@class_variable = 0
Sınıf her yeni yaratılan örnekte bu değişkenin değeri yeni nesneye aktarılır. Singleton kalıbında kullanılabilir. Bir örnekle açıklayalım;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Boom

  @@class_counter = 0
  def initialize
    @instance_counter = 0
  end

  def explode
    @@class_counter += 1
    @instance_counter += 1
    puts &quot;@@class_counter =&amp;gt; #{@@class_counter}&quot;
    puts &quot;@instance_counter =&amp;gt; #{@instance_counter}&quot;
  end
end

d1 = Boom.new
d1.explode()
d1.explode()

d2 = Boom.new
d2.explode()
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
3) Örnekleme(instance) Değişkenleri

4) Yerel Değişkenler
</content>
 </entry>
 
 <entry>
   <title>Distributed DoS Saldırısı ve Yapılması Gerekenler!</title>
   <link href="http://hasanozgan.com/blog/2007/09/29/distributed-dos-saldirisi-ve-yapilmasi-gerekenler"/>
   <updated>2007-09-29T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2007/09/29/distributed-dos-saldirisi-ve-yapilmasi-gerekenler</id>
   <content type="html">&lt;p style=&quot;padding-left:10px;&quot;&gt;&lt;/p&gt;

İnternetin bir yıl içinde büyüyen ve yenilikçi fikriyle dikkatleri üzerine çeken bir şirketi (adını vermeyeceğim) bir haftadır ara-ara &lt;a href=&quot;http://sozluk.sourtimes.org/show.asp?t=ddos&quot;&gt;d-DoS&lt;/a&gt; saldırılarına maruz kalıyordu. Dün çok ciddi bir saldırı oldu. (saniyede 16.000 connection), ISP'nin bant genişliğinin dahi kaldıramadığı bu saldırıyı engellemek için tüm gün TCP paketlerini inceleyerek ve kafamızı duvardan duvara vurarken, saldırının sahibine yaratıcı küfürler bularak geçirdik. Ve nihayet en sonunda saldırıyı engelleyebildik. Nasıl engellediğimiz ile ilgili bilgiye aşağıda bulabilirsiniz.&lt;strong&gt;&lt;/strong&gt;

&lt;strong&gt;1)&lt;/strong&gt; Önce atağın hangi sayfaya geldiğini tespit edin!. Ve tespit ettikten sonra o sayfayı IPS üzerinden bloklayın.

&lt;strong&gt;2)&lt;/strong&gt; Eğer saldırı bir sayfa değilde bir URL'e geliyorsa, ozaman çok basit bir index.html sayfası hazırlayıp, o sayfadan ana sayfanıza javascript redirect yapın. Basit index.html sayfasının önemi şundan kaynaklanıyor. DoS saldırılarını Load Balancer'lar zaten yönetebiliyorlar. Fakat bunu yapmak için yapılan isteğin tamamlanmış olması gerekiyor. Eğer 24 saniyede yüklenen bir sayfanız varsa, load balancer faydadan daha çok zarar getiriyor. Hatta benim önerim, index.html sayfanızın dinamik bir şekilde bir açılış sayfası adresine yönlendirme yapması.

&lt;strong&gt;3)&lt;/strong&gt; Bu sırada gelen paketleri inceleyin. Genelde DoS saldırıları küçük programlar vasıtasıyla yapılır ve bu küçük programların kullandığı HTTP kütüphaneleri header'in User-Agent: alanina kendilerini yazarlar. Buradan tanınan paketler yakalanabilir. Yada kendi requestleriniz ozel bir header bilgisi ile gönderilebilir. vs..

&lt;strong&gt;4)&lt;/strong&gt; Kişinin IP-Spoofing yapıp yapmadığını IP'lerin görünen uzaklığı ve TCL bilgisinden yakalamaya çalıştık. Gördük ki farklı makinelerden zombi requestler açılıyor..
</content>
 </entry>
 
 <entry>
   <title>Adım Adım Ruby  - 1 -</title>
   <link href="http://hasanozgan.com/blog/2007/09/21/adim-adim-ruby-1"/>
   <updated>2007-09-21T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2007/09/21/adim-adim-ruby-1</id>
   <content type="html">Ömrüm boyunca &quot;C sytax&quot;(C++, PHP, Java, C#, JS) dillerde geliştirmeler yaptım ve onları öğrendim. Bu nedenle &lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt;'i kabullenmek ve sindirmek benim için çokta kolay olmadı. Lakin, &lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt;'in özelliklerini görünce tüm ön yargılar, yerini eğlenceli bir oyuncağa bıraktı. Ruby öğrenme sürecimi bu kategori altında sizlerle paylaşacağım. Şimdi bakalım ilk adım ne olmalı?

&lt;strong&gt;Neden Ruby'i Seçmeliyim ?&lt;/strong&gt;
&lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt;, son birkaç yılda &lt;a href=&quot;http://www.rubyonrails.org&quot;&gt;Ruby on Rails&lt;/a&gt; ile popülerlik kazanan bir dil. Henüz &lt;a href=&quot;http://www.python.org&quot;&gt;Python&lt;/a&gt; gibi çok geniş bir kütüphane arşivine sahip değil! Ama yakın gelecekte bu açığın doldurulacağına hiç şüphe yok. &lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt; bir betik (script) dili. Ve betik dillerinden beklenen en önemli özelliğe sahip. Çeviklik ! Aşağıda bazı ilgi çeken özelliklerini size fikir vermesi için yazacağım. Not: Bu özelliklere detaylı olarak bir sonraki yazımda &quot;programlamaya yeni başlayanlara&quot; anlatır gibi beraber göz atacağız. C'de böyle Java da şöyle gibi notlarımı da aralara serpiştireceğim elbette.

Ne diyorduk? &lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt; çok amaçlı bir dil olsa da günümüzde özellikle web uygulamalarının geliştirilmesinde kullanılıyor. Web uygulamalarında tercih edilme sebeplerinden biri anında sonucu görebilmeniz. Yani Java'daki gibi derle bak, aptal uygulama sunucusunu yeniden başlat gibi absürdlükler yok!. ASP.NET 2.0 ile beraber, Java'daki bu salak mimariye alternatif olarak &lt;strong&gt;App_Code&lt;/strong&gt; gibi bir özellik gelmiş durumda. Tabii katmanlı mimariye geçtiğiniz an oda aynı şekilde derleme vs. gerektiriyor. (Tabii binary kütüphanelerin şöyle bir avantajı var. Kütüphane yazan proje ekibinin kodunu kullanan ekibin kafasına göre kod değiştirmesine engel oluyor. Böylece versiyon ve kod tabanı dağılmamış tek bir ekibin hakimiyetinde oluyor. Neyse konumuz bu değil gerçi ama aklıma gelmişken ileteyim dedim.

Bunca laf ebeliği yaptıktan sonra, benim neden &lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt;'i seçtiğimi söyleyeyim. Web uygulamamın Linux sunucunda koşmasını istiyorum. C# dilini seviyorum ama maalesef Mono hala sinir olmadan yazabileceğiniz bir durumda değil! &lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt;, Python gibi zorlayıcı özellikleri yok. Özellikleri ile kod yazarken eğlenmenizi sağlıyor. Çok hızlı gelişen bilişim sektöründe, aklınıza gelen fikrin, en hızlı şekilde ürüne dönüşmesi için, her projede muhakkak yaptığımız tekrarları &lt;a href=&quot;http://www.rubyonrails.org&quot;&gt;Ruby on Rails&lt;/a&gt; framework'unun engelliyor olması.

&lt;strong&gt;Nereden Başlamalı ?&lt;/strong&gt;
Bilgisayarınıza &lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt;'i indirerek başlayabilirsiniz! :-) &lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt;, P3OS (Popüler 3 İşletim Sistemi: Windows, OSX, Linux)'ı destekler! &lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt;'i kodlarını denemek için &lt;strong&gt;irb&lt;/strong&gt; uygulamasını kullanabileceğiniz gibi windows kurulum paketinde gelen SCiTE editorunude kullanabilirsiniz. &lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt;'i bilgisayarınıza kurduktan sonra, Mark Slagell tarafından yazılan, &lt;a href=&quot;http://www.pinguar.com&quot;&gt;Pınar Yanardağ&lt;/a&gt; tarafından güzel türkçemize kazandırılan &lt;a href=&quot;http://www.belgeler.org/uygulamalar/ruby/ruby-ug.html&quot;&gt;Ruby Kullanıcı Klavuzu&lt;/a&gt; dökümanını okumanızı öneririm. Genel bir bakış yapmanızı ve &lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt;'e olan ön yargıları yıkmanıza ve ilk adımı hızlıca yapmanızı sağlayacağı gibi aşağıda önereceğim kitaplar için bir ön hazırlık olacaktır.

&lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt;'e bir giriş yapıp ne olduğunu öğrendikten sonra &lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt; on Rails'i indirebilir ve Rails ile denemeler yapmaya başlayabilirsiniz. Rails ile ilgili denemeler için tavsiyem, şu &lt;a href=&quot;http://www.digitalmediaminute.com/article/1816/top-ruby-on-rails-tutorials&quot;&gt;eğitmene (tutorial)&lt;/a&gt; bakmanızı öneririm. Eğer genel &lt;a href=&quot;http://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt; hakkında daha fazla bağlantı arıyorsanız &lt;a href=&quot;http://del.icio.us/search/?p=ruby&quot;&gt;buradan&lt;/a&gt; bulabilirsiniz..

Rails'i terminalden şablon kodları generate ederek kullanabileceginiz gibi bir tüm platformlarda çalışabilen IDE'ler yardımıyla da kullanabilirsiniz. Ruby için, Eclipse eklentilerinin yanı sıra, Eclipse üzerine inşa edilmiş Aptana isimli JS IDE'sinin eklentisi olarak duyurulan Rad Rails'i kullanmanızı öneririm. Eğer Netbeans kullanmayı seviyorsanız Netbeans 6.0 ile Ruby desteği geldiğini söylemeliyim. Söylememe gerek var mı bilmiyorum ama, Vim ve Emacs ile Ruby yazmanız da mümkün!

&lt;strong&gt;Ne Gibi Özellikleri Var ?&lt;/strong&gt;
&lt;em&gt;Mantıksal İşlemler: &lt;/em&gt;
Ruby denetleyicileri ile biraz Perl'ü anımsatsa da, benim özellike ilgimi çeken &lt;strong&gt; === &lt;/strong&gt; operatörü. Bu operatör ile bir sayıyı aralığını tek hamlede kontrol edebiliriz.
&lt;blockquote&gt;&lt;strong&gt;irb(main):001:0&amp;gt; &lt;/strong&gt; i = 4
&lt;strong&gt;irb(main):002:0&amp;gt; &lt;/strong&gt; (2..5) === i

=&amp;gt; true&lt;em&gt;&lt;/em&gt;&lt;/blockquote&gt;
&lt;em&gt;Yordamsal Nesneler: &lt;/em&gt;
Bu özelliği C'deki fonksiyon göstericilerine (function pointer) benziyor. Yada C#'taki temsilci (delegate)'ler gibi çalışıyor. Bir kod kümesini bir yordam(process) icine alarak, daha sonra çağrı yapabilirsiniz.
&lt;blockquote&gt;&lt;strong&gt;irb(main):001:0&amp;gt; &lt;/strong&gt;deamon = proc{ print &quot;Deamon çalıştı \n&quot; }
&lt;strong&gt;irb(main):002:0&amp;gt; &lt;/strong&gt;deamon.call

=&amp;gt; Deamon çalıştı&lt;/blockquote&gt;
&lt;em&gt;Tekil Metodlar: &lt;/em&gt;
Bu metod modeli, bir sınıfın bir metodunun geçici olarak yeniden yazılmasını sağlayan bir özellik. Bu özelliği kullanabilmek için sınıfın nesnesinin yaratılması gerekiyor.
&lt;blockquote&gt;&lt;strong&gt;irb(main):001:0&amp;gt; &lt;/strong&gt;class SingleMethod
&lt;strong&gt;irb(main):002:0&amp;gt; &lt;/strong&gt; def size
&lt;strong&gt;irb(main):003:0&amp;gt; &lt;/strong&gt; print &quot;25\n&quot;
&lt;strong&gt;irb(main):004:0&amp;gt; &lt;/strong&gt; end

&lt;strong&gt;irb(main):005:0&amp;gt; &lt;/strong&gt;end&lt;strong&gt;&lt;/strong&gt;

&lt;strong&gt;irb(main):006:0&amp;gt; &lt;/strong&gt;test1 = SingleMethod.new
&lt;strong&gt;irb(main):007:0&amp;gt; &lt;/strong&gt;test2 = SingleMethod.new
&lt;strong&gt;irb(main):008:0&amp;gt; &lt;/strong&gt;print &quot;25\n&quot;
&lt;strong&gt;irb(main):009:0&amp;gt; &lt;/strong&gt;def test1.size
&lt;strong&gt;irb(main):010:0&amp;gt; &lt;/strong&gt; print &quot;10\n&quot;
&lt;strong&gt;irb(main):011:0&amp;gt; &lt;/strong&gt;end

&lt;strong&gt;irb(main):012:0&amp;gt; &lt;/strong&gt;test1.size
=&amp;gt; 10

&lt;strong&gt;irb(main):013:0&amp;gt; &lt;/strong&gt;test2.size
=&amp;gt; 25&lt;/blockquote&gt;
Bir sonraki yazımda daha detaylı olarak Ruby'nin özelliklerini anlatacağım. Bu girdiyi bazı bağlantı önerileri vererek sonlandırıyorum. Beni izlemeye devam edin efenim :p

&lt;strong&gt;Yazılımlar&lt;/strong&gt;
&lt;a href=&quot;http://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt;
&lt;a href=&quot;http://rubyforge.org/&quot;&gt;Ruby Forge&lt;/a&gt;
&lt;a href=&quot;http://www.rubyonrails.org/down&quot;&gt;Ruby on Rails&lt;/a&gt;
&lt;a href=&quot;http://www.radrails.org/download_rails_rdt.php&quot;&gt;Rad Rails&lt;/a&gt;

&lt;strong&gt;Kitaplar&lt;/strong&gt;
&lt;a href=&quot;http://www.urlshield.net/l/nNX0NMJA&quot;&gt;Learn to Program&lt;/a&gt;
&lt;a href=&quot;http://www.urlshield.net/l/DD5sUVsV&quot;&gt;Programming Ruby&lt;/a&gt;
&lt;a href=&quot;http://www.urlshield.net/l/FgOQhKL&quot;&gt;Agile Web Development with Rails&lt;/a&gt;
&lt;a href=&quot;http://www.urlshield.net/l/07IDsBrA&quot;&gt;Rails Recipes&lt;/a&gt;
</content>
 </entry>
 
 <entry>
   <title>GRUB'u yeniden yüklemek !</title>
   <link href="http://hasanozgan.com/blog/2007/09/06/46"/>
   <updated>2007-09-06T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2007/09/06/46</id>
   <content type="html">Windows bol göçen bir işletim sistemi olduğundan arada sırada yeniden kurmak gerekiyor. :-) Windows kuruncada sorunlar bitmiyor; bilgisayarın açılış(boot) yönetim aracı olan GRUB'u da siliyor. İşte böyle durumlarda linux Live CD'si ile açarak aşağıdaki işlemi yapmak gerekiyor.
&lt;blockquote&gt;dd if=/dev/hdX of=MBR-backup bs=512 count=1

dd of=/dev/hdX if=MBR-backup bs=512 count=1

mkdir /mnt/temp

mount /dev/hdX# /mnt/temp

grub-install --rootdir=&quot;/mnt/temp&quot; /dev/hdX

&lt;em&gt;
&lt;strong&gt;hdX&lt;/strong&gt; =&amp;gt; grub'un yükleneceği diskin adı.&lt;/em&gt;

&lt;em&gt;&lt;strong&gt;#&lt;/strong&gt; =&amp;gt; diskin, kök bölümünün bulunduğu sıra numarası.&lt;/em&gt;

&lt;em&gt;&lt;/em&gt;&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>İlkelerim</title>
   <link href="http://hasanozgan.com/blog/2007/06/15/ilkelerim"/>
   <updated>2007-06-15T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2007/06/15/ilkelerim</id>
   <content type="html">&lt;ul&gt;
	&lt;li&gt;İmkansızı iste!&lt;/li&gt;
	&lt;li&gt;Araçta değil, sektörde uzmanlaş!&lt;/li&gt;
	&lt;li&gt;Hayata aykırı gözlerle bak!&lt;/li&gt;
	&lt;li&gt;Eğlendiğin işi yap!&lt;/li&gt;
	&lt;li&gt;Meraklı ol!&lt;/li&gt;
    &lt;li&gt;Hayal et!&lt;/li&gt;
	&lt;li&gt;Her zaman gülümse!&lt;/li&gt;
	&lt;li&gt;Olabildiğince basit/sade düşün!&lt;/li&gt;
	&lt;li&gt;Şeytanlık yapma!&lt;/li&gt;
	&lt;li&gt;İş ne olursa olsun, en iyisini yap!&lt;/li&gt;
	&lt;li&gt;Düşün, uygula, gözden geçir ve sonlandır!&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Linux'tan, Windows'a Göç (Migration) !</title>
   <link href="http://hasanozgan.com/blog/2007/06/14/linuxtan-windowsa-goc-migration"/>
   <updated>2007-06-14T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2007/06/14/linuxtan-windowsa-goc-migration</id>
   <content type="html">Aman yanlış anlaşılmasın! Linux'tan Windows'a göç etmek bence aptallıktır!. PHP ile yazılmış bir projeyi Linux'tan Windows'a göç ettirmek için şirketten bir iş atandı üzerime. PHP ile yazılmış olan Web uygulamasını göç ettirirken kodda sadece LDAP ile ilgili bazı değişiklikler yaptım. Tahmin edeceğiniz gibi Web için bu değişiklik bile fazla. Asıl değişiklik Cron'da çalışan bir kabul betiği (shell script) idi ki, bunu yeniden; yazarken Windows betiğine dair yeni şeyler öğrendim. Shell scriptin yaptığı Samba protokolünden ağ üzerindeki bir makinayi mount ediyor ve mount edilen dizinlerdeki dosyalar üzerinde işlem yapıyordu. İşte bu işlemin Windowsta ki karşılığı olan &lt;strong&gt;&quot;Mapping Network Drive&quot;&lt;/strong&gt; işlemini yaparak sanal bir sürücü oluşturmam gerekiyordu. Windows'ta bu işin &lt;strong&gt;net&lt;/strong&gt; komutu ile yapıldığını tahmin ediyordum. Bakın şu Allah'ın işine! &lt;a href=&quot;http://www.cae.wisc.edu/site/public/?title=nt4netuse&quot;&gt;Haklıymışım&lt;/a&gt; !

&lt;strong&gt;Linux'ta yapılan;&lt;/strong&gt;

&lt;em&gt;mount -t smbfs -o username=admin,password=adminpass,workgroup=stargate //machine_name/documents /mnt/documents/&lt;/em&gt;

&lt;strong&gt;yada&lt;/strong&gt;

&lt;em&gt;mount -t cifs //10.100.8.36/documents /mnt/documents/ -o username=admin,password=adminpass&lt;/em&gt;

&lt;strong&gt;Windows'ta yapılması gereken;&lt;/strong&gt;

&lt;em&gt;net use h: \\machine_name\documents&lt;/em&gt;
</content>
 </entry>
 
 <entry>
   <title>Proje Yönetim Sanatı ve İnsan Faktörü</title>
   <link href="http://hasanozgan.com/blog/2007/06/09/proje-yonetim-sanati-ve-insan-faktoru"/>
   <updated>2007-06-09T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2007/06/09/proje-yonetim-sanati-ve-insan-faktoru</id>
   <content type="html">&lt;ol&gt;
	&lt;li&gt;Projenin hedefleri net olmalıdır.&lt;/li&gt;
	&lt;li&gt;Proje, büyük resme(bütüne) uygun olmalı.&lt;/li&gt;
	&lt;li&gt;Doğru iş için doğru kişi atanmalı.&lt;/li&gt;
	&lt;li&gt;Doğru eğitimci ve danışman. Proje ekibine yeni katılan bir kişinin adaptasyon süreci için doğru eğitimcinin atanması gerekir.&lt;/li&gt;
	&lt;li&gt;Müşteri ihtiyaçlarını anlamak gerekir.&lt;/li&gt;
	&lt;li&gt;Proje ekibine gereken ilgi ve dikkati göstermek.&lt;/li&gt;
	&lt;li&gt;Sempatik kanallara güvenmek gerekir.  Sempatik kanallar; hatır, gönül işi ile yürüyen işlere denir. Bunu yapmak proje ekibinin motivasyon ve işlerinin sorunsuz ilerlemesi içindir.&lt;/li&gt;
	&lt;li&gt;Zaman ve para önemlidir. Proje yöneticisi, kısıtlı zaman ve para ile işleri tamamlamakla görevlidir. Bunu asla unutmamalıdır.&lt;/li&gt;
	&lt;li&gt;Proje ekibinin bütünün parçası olmalarını sağlamak gerekir.&lt;/li&gt;
	&lt;li&gt;Başarıyı tanımlama ve kutlamak gerekmektedir.&lt;/li&gt;
	&lt;li&gt;Liderlik önemlidir. Ekibi yolun yarısında bırakan ekip lideri ile hiçbir ekip üyesi çalışmak istemez. İyi bir lider, çalışanlara güven verir.&lt;/li&gt;
	&lt;li&gt;Proje ekibi ile iletişim halinde olmak ve ayak üstü hatır soruları ile proje ekibini sorgulama hissi uyandırmadan projenin durumunu anlamak.&lt;/li&gt;
	&lt;li&gt;Proje bir bütündür. Bir uçağın en önemli parçası hangisidir? Hepsi öyle değil mi? Proje ekibi ve projenin parçaları içinde bu durum böyledir.&lt;/li&gt;
	&lt;li&gt;İşbirliği önemlidir. Proje ekibi ile işbirliği içinde olmak, onları anlamak ve yardımda bulunmak her ne kadar PM’in işi olmasada ekibin proje yöneticisi ile olan bağlarını güçlendirir.&lt;/li&gt;
	&lt;li&gt;Başlayabilmek önemlidir. Başlamak bitirmenin yarısıdır. Karar vermek ve başlamak gerekir.&lt;/li&gt;
	&lt;li&gt;PMI‘ın proje kapsam diagramı. (Zaman, Kapsam, Maliyet ve Kalite) Bir projenin başarıya ulaşması için Zaman, Kalite, Maliyet üçgenini ve üçgenin içinde bulunan Kapsam’ı dikkate almız gerekir. (PMI 2005 yılında bu üçgeni bir altıgene çevirmiş ve Risk ve Müşteri Tatmini terimlerinide eklemiştir.)&lt;/li&gt;
	&lt;li&gt;Kontrol hayatidir. İş yapana kontrol ettirilmez. İşi yapan kendi hatalarını göremez. Ayrıca unutulmaması gereken birşey daha vardır. İşi yapanlar (geliştiriciler) analitik düşünen kişilerdir. Ve bu nedenle test edilmesi gereken durum ve riskleri görmekte pek başarılı değildirler.&lt;/li&gt;
	&lt;li&gt;Size kaç lazım? Proje sponsorunun, 2 + 2’sine vereceğiniz cevap kaçtır? 4 mü? yoksa 3 &amp;gt; x &amp;gt; 5 mi? Hayır! Vermeniz gereken cevap, “Siz kaç olmasını istersiniz?” olmalıdır. Proje sponsorunun, projenin tamamlanması için beklediği tarihlerin üstü örtülerek, proje ekibi ile tarihlerini hesapladıktan sonra, proje sponsorunun istediği tarih kıyaslanarak, ortak bir payda aranır. Eğer aradaki fark uçurum ise ekibin ve projenin sağlığı için redd edilmelidir.&lt;/li&gt;
	&lt;li&gt;İnsanı önemseme
&lt;ul&gt;
	&lt;li&gt;Görüşmeler&lt;/li&gt;
	&lt;li&gt;Çatışma Yönetimi&lt;/li&gt;
	&lt;li&gt;Motivasyon&lt;/li&gt;
	&lt;li&gt;İkna&lt;/li&gt;
	&lt;li&gt;Güdüleme (İşi sahiplenme)&lt;/li&gt;
	&lt;li&gt;İletişim&lt;/li&gt;
	&lt;li&gt;Tanıma ve Tanınma&lt;/li&gt;
	&lt;li&gt;Paylaşama&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;Herşeye hazırlıklı olmak. Proje yöneticisi, hertürlü risk hazırlıklı olmalıdır.&lt;/li&gt;
	&lt;li&gt;Tarih ve Tekerrür. Hani bir salıngaç resmi vardır ya. Müşterinin istediği, tasarlanan, gerçekleştirilen ve sonuç…&lt;/li&gt;
	&lt;li&gt;Karanlıkta ilerlemek. Projeler başlangıç aşamasında belirsizlik hakimdir. Eğer belirsizlikler bizi ilgilendiriyorsa risk olur. Peki risk nedir? Risk, tehdit ve fırsatlar bütünüdür. Yani projenin her yerinde riskler mevcuttur. Riskleri yönetmek için, proje ekibi ile konuşulması gereken konular şunlardır;
&lt;ul&gt;
	&lt;li&gt;Varsayımların ve tahminlerin nedir?&lt;/li&gt;
	&lt;li&gt;İstisnalar nelerdir?&lt;/li&gt;
	&lt;li&gt;Değişim neler doğurur?&lt;/li&gt;
&lt;/ul&gt;
Proje ekibinin, projenin her adımında yukarıdaki sorulara cevap araması gerekir.&lt;/li&gt;
	&lt;li&gt;Proje ekibi bir aile olmalı ve proje ise hepsinin amacı olmalı.&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Sunum Nasıl Yapılmalı?</title>
   <link href="http://hasanozgan.com/blog/2007/06/03/sunum-nasil-yapilmali"/>
   <updated>2007-06-03T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2007/06/03/sunum-nasil-yapilmali</id>
   <content type="html">&lt;a href=&quot;http://www.istanbulbilisimkongresi.org&quot;&gt;İstanbul Bilişim Kongresi&lt;/a&gt;'nde birçok sunum izledim. Sunumların içinde çok kötülerde vardı, çok başarılı olanlarda. Kötü sunumların içinde, şirket tanıtımı ağırlıklı sunumlar, sunumunu okuyanlar, sunduğu şeye hakim olmayanlar vs.. var iken, başarılı sunumlarda ise, izleyici ile etkileşim içinde, izleyiciyi hemen saran, şaşırtan, sorunu gösteren ve çözen sunumlarda mevcuttu. Bunları görünce ben de iyi bir sunum nasıl olmalı diye düşünmeye başladım ve aşağıdaki önerileri oluşturdum.

&lt;ul style=&quot; list-style: disc; margin-left: 15px;&quot;&gt;
	&lt;li&gt;Sunumunuz bir derdi anlatmalı ve çözümü sunmalı.&lt;/li&gt;
	&lt;li&gt;Herkesce bilinen 10 20 30 kuralı. Sunumlarda en fazla 10 slayt kullanın, derdinizi 10 karede anlatın. Sunumunuz 20 dakikadan uzun sürmesin, çünkü 20'nci dakikadan sonra dinleyiciniz azalır. Sunumlarınızda 30 puntodan daha küçük font kullanmayın; anlatacağınız her şeyi slaytlarınıza yazıp oradan okumaya çalışmayın dinleyicilerinizi kaybedersiniz.&lt;/li&gt;
	&lt;li&gt;Yeni bir fikir ve aykırı bir bakış açısı sunmalı.&lt;/li&gt;
	&lt;li&gt;Bir sunum ilginç bir başlık, dikkat çekici bir resim, konu ile ilgili hakim olduğunuz hikaye, fıkra ve anektodlarla dolu olması seyirciyi sunumun içine çekecek öğelerdir.&lt;/li&gt;
	&lt;li&gt;İyi bir girizgah. izleyicinin gözünde hadi anlat bakalım bakışlarının ortadan kalkmasını sağlar. Ve bir anda izleyiciniz kendini sunumunuzun içinde bulunur.&lt;/li&gt;
	&lt;li&gt;Sunumun teması, aykırı bir bakış açısı içermeli. Kitaplardan edinilen bilgileri orada eğer çok iyi bir özet ile anlatmayacaksanız sakın denemeyin. Bir problem seçin ve farklı bir açıdan bakın.&lt;/li&gt;
	&lt;li&gt;Sunumdan sonra gelecek soruları düşünerek, hakim olunan bir konuda sunum hazırlayın. Eğer sunum yaptığınız konuya hakim değilseniz, bunu izleyiciler anlar ve sizi rezil etmek için ellerinden geleni yaparlar.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Semantic Web (Nam-ı Diğer Web 3.0)</title>
   <link href="http://hasanozgan.com/blog/2007/05/20/semantic-web-nam-i-diger-web-30"/>
   <updated>2007-05-20T00:00:00+03:00</updated>
   <id>http://hasanozgan.com/blog/2007/05/20/semantic-web-nam-i-diger-web-30</id>
   <content type="html">&lt;div style=&quot;text-align:center;&quot;&gt;&lt;em&gt;&quot;Web için bir hayalim var; bilgisayarlar, web üzerindeki tüm veriyi (içerikler, bağlantılar ve insanlarla bilgisayarlar arasındaki işlemler), analiz etme kabiliyetine sahip olacaklar. Henüz hazır olmasa da 'Semantic Web'in  yapılması mümkün!. Hazır olduğunda ise günden güne ticaret yöntemlerimiz, bürokrasi ve günlük yaşamlarımız birbiri ile konuşan makinalar tarafından idare edilecek. İnsanlığın asırlardır konuştuğu 'zeki araçlar' gerçek olacak.&quot;&lt;/em&gt;
&lt;div style=&quot;text-align:right; padding-right:25px;&quot;&gt;&lt;a href=&quot;http://tr.wikipedia.org/wiki/Tim_Berners-Lee&quot;&gt;Tim Berners-Lee&lt;/a&gt;&lt;/div&gt;
&lt;img src=&quot;files/weblog/W3c_semantic_web_stack.jpg&quot; alt=&quot;semantic web roadmap&quot; /&gt;&lt;/div&gt;
Söz büyüğündür der atalarımız, bu nedenle lafıma, internetin babası, semantic web kavramını ilk ortaya atan ve gerçekleşmesi için bir &lt;a href=&quot;http://www.w3.org/DesignIssues/Semantic.html&quot;&gt;yol haritası&lt;/a&gt; bize sunan üstad &lt;a href=&quot;http://tr.wikipedia.org/wiki/Tim_Berners-Lee&quot;&gt;Tim Berners-Lee&lt;/a&gt; ile başlayalım istedim. Geçtiğimiz yıl Web 2.0'ı anlamaya ve kavramaya çalışırken, geçen Kasım(Kasım 2006) ayında Web 3.0 adıyla yeni bir kavram duyduk. Neymiş bu Web3.0 dediğimizde eski bir terim ile semantic web kavramı ile karşılaştık. Aşağıdaki grafikte Web 4.0'ın bile adının geçtiğini dikkatinizi çekmek isterim. O da ayrı bir makale konusu olduğundan lafı çok uzatmadan neymiş bu semantic web gelin beraber inceleyelim.
&lt;div&gt;&lt;a href=&quot;http://farm1.static.flickr.com/250/452486876_b61b9ff7b2_o.jpg&quot; target=&quot;flickr&quot;&gt;&lt;img src=&quot;files/weblog/webdevelopment.jpg&quot; border=&quot;0&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;strong&gt;Semantic Web nedir?&lt;/strong&gt;

Web 1.0' da sayfalar insanların okuyup anlayabileceği şekilde hazırlanıyordu. Web 2.0 ile verileri etiketlemeye ve AJAX tekniği ile web sayfaları kullanımı kolay ve hızlı bir hal aldı. Makinelerin birbirleri ile konuşabilmesi için XML çıktılar veren metodlar ürettik. SOAP ve benzeri protokoller inşa ettik. Tim Berners Lee'nin telafuzunu ettiği Web 3.0’a geçiş için  gerekli olan hazırlıkları yaptık. Başında 'e' harfi koyarak bürokratik işleri bizim için makinalarin yapmasını sağladık. Bu makinaların konuştuğu yerlerde karar gerektiren noktalara ise insanlar koyduk. Web 3.0 ile makinalar bizi daha önceki davranışlarımızdan ve konuştuklarımızdan anlamaya ve çözümler üretmeye çalışacak. Makina-Makina ile karar gerektiren kısımlarda da konuşabilecek. Bu konuyu aşağıdaki gibi bir örnek ile açıklama çalışayım.

&lt;em&gt;Hayal edin!, diyelim ki cumartesi günü basketbol maçı yapacaksınız ve basketbol maçı yapmak için bir yer arıyorsunuz. Arama motoruna &quot;istanbul'da cumartesi günü uygun basketbol sahası&quot; şeklinde bir arama yaptınız. Arama motoru cümleyi yorumladı ve size sadece basketbol sahalarının bulunduğu siteleri getirdi. Hatta istanbul kriterinide girdiginiz icin sadece Istanbul'dakileri sahaları getirdi. İşte size semantic web budur. Semantic web zayıf bir yapay zeka kullanır. İşi biraz yokuşa sürelim ve yapay zeka kavramını devreye sokalım. Arama motoru hava durumunu inceleyip, cumartesi günü İstanbul'da yağış olduğu için sizi uyararak üstü açık olan basketbol sahalarını görmek isteyip, istemediğimi sorabilir. Yada sadece üstü kapalı basketbol sahalarını listeleyebilir. İşte yapay zeka ile semantic web arasındaki fark budur. &lt;/em&gt;

Bu örnekten sonra gerçekleşmesi için neler gerektiğine bakalım.

&lt;strong&gt;Peki makinalar, siteleri bizim gibi nasıl anlayacak?&lt;/strong&gt;

Makinaların bizi anlaması için gerçekten çok fazla veriye ihtiyaç var. İnternette bu veriler yeterli oranda mevcut. Fakat dağınık ve hiçbirinin bir diğerine makinaların anlayabileceği bir ilişkisi yok. Yani verilerin toplanması ve yorumlanması ve daha sonraki sorgulamalar için depolanması gerekiyor. Şimdi bu 3 temel öğe altında neler yapılıyor yada yapılması gerekiyor onları inceleyelim.

&lt;strong&gt;1) Verileri Anlamlı Bir Şekilde Ayrıştırma&lt;/strong&gt;
&lt;div style=&quot;padding-left: 20px&quot;&gt;&lt;strong&gt;a) Etiketleme Yöntemiyle İçeriği Toplamak:&lt;/strong&gt;

Web 2.0 ile beraber, hayatımızda etiketleme(tag) kavramı ortaya çıktı. Böylece makinaların bir sürü veri içinden biz insanlar için öncelikli ve gerekli olan bir veri alanı oluşturmuş olduk.  Etiketlemenin en büyük avantajı, kelimeler arasındaki ilişkilerin insanlar tarafından sağlanıyor olması. Mesela, kartal resimlerinin bulunduğu bir siteyi etiketlemek istesek, etiketimiz sanırım “kartal kuş fotoğraf ” gibi bir etiketler dizisine sahip olurdu.  Böylece sizin botlarınızın yapacağı işi insanlar yapmış olacak. %20’ye %80 kuralını bilirsiniz. Web üzerindeki verinin %20’si gerçekten insanların ihtiyacı olan veridir. Geri kalan %80 ise çöp veridir. Buna dayanarak, insanların girdiği veri tamamiyle %20’lik olan gerekli alana girecektir. Etiketlemek, aynı dizideki etiketlere göre bir anlam ilişkisi bulunur. Yukarıdaki örneğimizi ele alalım. Kartal bir kuştur. Ve sitedeki veriler kuş resimleridir. Çok güçlü olmasada kendimize küçük bir semantic web uygulaması oluşturduk. Tabii daha yapılması gereken çok iş var. Bu sadece bir başlangıç olduğunu unutmamak gerekir.

Etiketleme ile ilgili araç-amaç ilişkisine şuan aklıma gelen en güzel örnek, &lt;a href=&quot;http://images.google.com/imagelabeler/&quot;&gt;Google Image Labeler&lt;/a&gt;. Google'ın amacı etiketi olmayan resimleri etiket altında toplamak. Ama bir sürü etiketlenmesi gereken resim var. Bu iş için nasıl bir şey yapmalı? İnsanlar eğlenceyi sever. Oyunlar eğlencelidir. Neden bu işi oyun olarak sunmayalım düşüncesi ile ortaya çıkmıştır.

&lt;strong&gt;b) Alana Göre İçeriği Toplamak:&lt;/strong&gt;

Daha öncede söylediğim gibi semantic web için büyük bir içerik gerekli. Google'ın veri madenciliği yapmasının sebebi bu aslında. Google'ın hedefi, Hakia gibi semantic web. hatta belki daha da ileriye giderek yapay zeka (Google'ın Master Plan'ın çizili olduğu kocaman &lt;a href=&quot;http://undergoogle.com/tools/GoogleMasterPlan.html&quot;&gt;yazı tahtasını&lt;/a&gt; incelemiş olanlar &quot;AI Developer&quot; hayallerini bilirler.) konuları. Fakat Google, Hakia’dan farklı olarak taklit ederek öğrenme yöntemini izliyor. Belli bir alana (domain) yönelik çıkardığı servisler bu amaca hizmet ediyor. İsterseniz bu servislerden bir kaçına bakalım;

&lt;img src=&quot;http://www.ozgan.net:8086/files/weblog/googlemasterplan.jpg&quot; alt=&quot;&quot; /&gt;

1) GMail; epostaların hayatımıza girmesi ile çok önemli veriler, eposta kutularımızda toplanmaya başladı. Üye olduğumuz  yerler (ilgi alanlarımız)  ve şifreleri, özel yazışmalarımız, konuşama şeklimiz vs.. Neden google'ın bir dosyayı silmenizi istemediğini 2.8 GB alan verdiğini düşünüyorsunuz. Hatırlarsanız gmail ilk çıktığında davetiye yolu ile çalışıyordu. Yani insanların birbiri ile olan ilişkilerinide tutmakla işe başladılar.

2) GTalk; eğer bir bot yazacak olsanız. Dünyada bir çok insanın, sorulara karşı verdiği cevapları loglasanız ne elde ederdiniz. Birçoğumuz konuşurken çeşitli hazır kalıpları kullanırız.

- Naber

- İyilik, senden

Bu kalıp ve benzeri kalıpları sürekli kullanıyoruz. GTalk Google için inanılmaz bir insanı taklit aracı.

3) Google Image Labeler; oyun görünümlü servis. Web kullanıcıları bedavaya veri girişi için kullanamanın en etkili yolu :)

&lt;strong&gt;c) Anlamlı İndeksleme ve Dilbilgisi:&lt;/strong&gt;

Hakia’dan yola çıkmak bu konu başlığı için çok doğru olacak. Yahoo ve Google’ın pagerank algoritması verileri kelime anlamına göre indekslemez. Metaya göre indeksler. Bu nedenle yukarıda söylediğimiz alana gore içerik toplama yöntemiyle ilerliyorlar. Anlamlı indeksleme için ise özellikle Google’ın çalışmaları olduğunu site çeviri servisi gibi bazı servisler bize ipucu veriyor.

Hakia’nın çalışmaları veriyi anlamlandırarak indeksleme temeline dayanıyor. Özellikle yaptıkları &lt;a href=&quot;http://labs.hakia.com/hakia-lab-onto.html&quot;&gt;OntoSem&lt;/a&gt; (&lt;a href=&quot;http://www.ontologicalsemantics.com/&quot;&gt;Ontological Semantics&lt;/a&gt;) adındaki teknolojileri bu işe yarıyor.  OntoSem, Prof. Victor Raskin’in akademik çalışması; bu konunun amacı doğal dilleri anlamlandırma temeline dayanıyor. Yani doğal diller üzerinde işlemler yazılım mühendisliğine dayanıyor.
Bu ciddi zorlukları olan bir konu. Cümle öğelerine bölünerek anlamlandırıldığı gibi tipine görede bir ontology ağacında yerini alıyor. Böylece kelimeler ağaçtaki yerine gore indeksleniyor. Yapay zekanın önemli konu olacağı şüphesiz bir konu. Hakia’nın diğer çalışmalarına &lt;a href=&quot;http://labs.hakia.com/&quot;&gt;buradan&lt;/a&gt; erişilebilir.&lt;/div&gt;
&lt;strong&gt;2) Ayrıştırılan Verilerin Bir Yerde Toplanması&lt;/strong&gt;

Verileri toplamak için en yaygın yöntem olarak, RDF kullanılmaktadır. &lt;a href=&quot;http://www.w3.org/RDF/&quot;&gt;RDF(Resource Description Framework)&lt;/a&gt; W3C’ bulduğu bir ilişkilendirme çatısıdır. Şimdiden birçok kurum ve kuruluş tarafından standart olarak kabul edilmiş ve kullanılmaya başlamıştır. Dilbilgisindeki özne, nesne, yüklem bağlantısına benzeyen bir söz dizimine sahiptir.

Yukarıda daha önce verdiğimiz örneğe geri dönersek; İstanbuldaki basketbol sahalarını listelemek. İTÜ, İstanbul’un en güzel basketbol sahasına sahiptir. Burada ‘İTÜ’ özne, ‘İstanbul’ nesne, ‘en güzel basketbol sahasına sahiptir’ ise yüklemdir. Şimdi bunu RDF içinde görelim.
&lt;div style=&quot;padding-left: 50px&quot;&gt;&amp;lt;rdf:RDF

xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;

xmlns:dc=&quot;http://netology.org/dc/elements/1.1/&quot;&amp;gt;
&amp;lt;rdf:Description rdf:about=&quot;http://etkinlik.itu.edu.tr/basketbol&quot;&amp;gt;

&amp;lt;dc:location&amp;gt;İTÜ&amp;lt;/dc:location&amp;gt;

&amp;lt;dc:city&amp;gt;İstanbul&amp;lt;/dc:city&amp;gt;

&amp;lt;/rdf:Description&amp;gt;

&amp;lt;/rdf:RDF&amp;gt;&lt;/div&gt;
http://netology.org/dc/elements/1.1/ adresinde location ve city tanimlanmistir.

&lt;a title=&quot;RDF Resource Description Framework&quot; href=&quot;http://www.w3.org/RDF/&quot;&gt;
&lt;img src=&quot;http://www.w3.org/RDF/icons/rdf_w3c_icon.96&quot; border=&quot;0&quot; alt=&quot;RDF Resource Description Framework Icon&quot; /&gt;&lt;/a&gt;

Yukarıdaki örnekten de anlaşılacağı üzere RDF karışık bir yapıya sahiptir. Bu sebeple  &lt;a href=&quot;http://www.w3.org/TR/owl-features/&quot;&gt;OWL(Web Ontology Language)&lt;/a&gt; kullanılmaktadır. OWL ontology grupları oluşturmaya yarar ve RDF'ten çok daha kolaydır. Aşağıda yaşlı kadınların sahip olduğu kediler ile ilgili bir örnek verilmiştir.
&lt;div style=&quot;padding-left: 50px&quot;&gt;Class(a:old_lady complete

intersectionOf(a:person a:female a:elderly))

Class(a:old_lady partial intersectionOf(

restriction(a:has_pet allValuesFrom (a:cat))

restriction(a:has_pet someValuesFrom (a:animal))))

Class(a:cat_owner complete intersectionOf(a:person

restriction(a:has_pet someValuesFrom (a:cat))))&lt;/div&gt;
&lt;ul&gt;
	&lt;li&gt;Yaşlı kadınlar muhakkak evcil bir hayvana sahiptir.&lt;/li&gt;
	&lt;li&gt;Yaşlı kadınların evcil hayvanları kedilerdir.&lt;/li&gt;
	&lt;li&gt;Kedilerin sahibi yaşlı kadınlardır.&lt;/li&gt;
&lt;/ul&gt;
Daha kapsamlı bir örneğe &lt;a href=&quot;http://www.cs.man.ac.uk/~horrocks/ISWC2003/Tutorial/&quot;&gt;buradan&lt;/a&gt; erişebilirsiniz.

&lt;strong&gt;3) Anlamlı Verilerin İçinden Sorgulama&lt;/strong&gt;

SPARQL en çok kullanılan sorgulama dilidir. Hakia'nında bu konuda kendi geliştirdiği &lt;a href=&quot;http://labs.hakia.com/hakia-lab-qdex.html&quot;&gt;QDEX(Query Detection and Extraction)&lt;/a&gt; adında bir teknoloji ile bu işi yapar.

&lt;strong&gt;Semantic Web İçin Başlangıç Noktası Neden Arama Motorları?&lt;/strong&gt;

İnsanların hayatında her zaman büyük yada küçük bir hedefi vardır. Hedeflere ulaşmak için çeşitli &lt;strong&gt;çözüm &lt;span style=&quot;text-decoration: underline;&quot;&gt;ararlar&lt;/span&gt;&lt;/strong&gt;. İşte anahtar kelime bu, &lt;strong&gt;Aramak&lt;/strong&gt;. Hayatımız hep birşeyler arayarak geçer. Bir insanın 3 tip hedefi vardır.

a) İhtiyaç

b) Statü

c) Eğlence

Arama motorları neden hayrına bize böyle bir hizmet sağlıyor? Neden böyle bir amaçları var. Arkasında ne yatıyor olabilir? İnsanların aradıklarını bulmak için ne aradıklarını bilmeniz gerekir. İnsanların istedikleri şeyleri bildiğinizi düşünün. Bu tanrısal bir erdemdir. Ve gerçekten büyük bir güçtür. Çünkü bazı isteklerimizi, başkalarının öğrenmesi vicdanen bizi rahatsız edebilir. Sorumuza tekrar geri dönelim; neden böyle bir hizmet için mücadele ediyorlar?

Bence gelecekte bilgi hür olacaktır. Şu an çok saçma bir şekilde DNA'larımız, bazı hastalıklar patent altına alınmakta, birilerinin mülkiyeti altına girmektedir. Çeşitli fikir mülkiyetleri orta atılmaktadır. Bu fikri yıkmak adına CreativeCommon adı altında bir oluşum bulunmaktadır. Fikir mülkiyeti saçma bir fikirdir. Hepimizin bulduğu şeyler çevremizdeki etkenler ve duygularla yaratılmıştır. Bilgi kimseye ait değildir. Şuanki kapitalizm etkisindeki dünyanın bu fikri kabul etmesi güç olduğu muhakkak. Fakat düşünün bundan 20 yıl önce Richard Stallman özgür yazılım felsefesini ortaya attığında da insanların bu görüşü kabul etmesi pek kolay olmadı.

Peki arama motorlarının amacı yukarıda saydıklarımız mı dersiniz? Eğer ellerindeki tüm bilgiyi herkese açacaklarsa evet amaç bilgi özgürlüğü denebilir. Ama bu işlerle uğraşanlar akademik kurumlardan daha çok ticari kuruluşlardır. Ve hepsinin bir gayesi bulunmaktadır.

&lt;strong&gt;Tehlikenin farkında mısınız?&lt;/strong&gt;

Gelecekte hepimizin bir profili olacak! Şu an kullandığımız kredi kartları, cep telefonları yada çeşitli internet servislerinde bu profiller yavaş yavaş oluşuyor. Nereden hangi ihtiyacımızı alıyoruz, nerelere gidiyoruz. Hepsi kayıt altına girmeye başladı Köleliğin formları değişmeye başladı. Artık birkaç beton yığını ile örülü değiliz. Akıllarımız köleleştiriliyor. Pazarlamacılar(marketing) Semantic Web konusuna yakından takip ediyor. Ağızlarının suyu akıyor. Bu insanlardan bilgiyi korunmanın yollarını aramak, bu kurumlara karşı özgür projelerle kırmaya çalışmak gerekiyor.

Yukarıda söylenilenler daha çok ütopik ve komplo teoriler içeriyor. &lt;a href=&quot;http://www.albinoblacksheep.com/flash/epic&quot;&gt;EPIC 2015&lt;/a&gt;'te benzer bir durumdan söz ediyor. Ama gerçek payı yok mu? Bunu yapmayacaklarını kim iddaa edebilir.

Internette kişisel bilgilerimizi içeren birçok küçük servis mevcut. Göze çarpanlar Google, Yahoo gibi devler tarafından satın alınıyor. Bu bilgilerde devlerin veri madenlerine katılıyor. Peki hepsini almak mümkün mü? Elbetteki hayır. İşte Yahoo tarafından önerilen çözüm. Mashup'lar. Mashup, melez servislerdir. Birkaç servisin birleşmesi ile ortaya çıkar. Bu   fikir çok güzel olmakla birlikle, şirketlerin özgür yazılım felsefesinin onlar için zehirli olan tarafını atıp, açık kaynak adı altında yumuşatarak nasıl bedava insan gücü elde ettilerse, aynı şey mashup fikri ile bu küçük servislerin altyapılarını açmalarına zorlayacaktır.

&lt;strong&gt;İnternet Yaşamdır&lt;/strong&gt;

Kurucusu olduğum &lt;a href=&quot;http://www.netology.org&quot;&gt;Netology Yazılım Vakfı&lt;/a&gt;, internetin yaşamımızdaki  vazgeçilmez yerinin farkında olan bir oluşum. İnternetin tamamen kamu yararına kullanılması için yeni teknolojiler geliştirmeyi hedeflemektedir. Yakında bu konudaki çalışmalarımızı &lt;a href=&quot;http://www.netology.org&quot;&gt;http://www.netology.org&lt;/a&gt; adresinden duyuracağız.

Üstadlar (&lt;a title=&quot;Türk Dil Kurumu'nun internet üzerindeki sözlüğüne göre bu kelimenin anlamı 'Bilgisayar ve haberleşme teknolojileri konusunda bilgi sahibi olan, bilgisayar programlama alanında standartın üzerinde beceriye sahip bulunan ve böylece ileri düzeyde yazılımlar geliştiren kişi' olarak tanımlanır.&quot; href=&quot;http://tr.wikipedia.org/wiki/Hacker&quot;&gt;hackers&lt;/a&gt;) tarafından bugünkü halini alan intenet; şuan özgür olduğumuz ve global dünya fikrinin gerçekleştiği tek yer. Onu &lt;a href=&quot;http://tr.wikipedia.org/wiki/Pazarlama&quot;&gt;kimsenin&lt;/a&gt; kötü emellerine alet edip kirletmesine izin veremeyiz.

İnternet yaşamdır ve bir devletin yada kuruluşun değil tüm kamunun malıdır!
</content>
 </entry>
 
 <entry>
   <title>Türkiye'de Sosyal Mühendislik</title>
   <link href="http://hasanozgan.com/blog/2007/02/28/turkiyede-sosyal-muhendislik"/>
   <updated>2007-02-28T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2007/02/28/turkiyede-sosyal-muhendislik</id>
   <content type="html">Geçenlerde ünlü hacker yada kendisinin ifadesi ile Sosyal Mühendis olan Kevin Mitnick'in &lt;a href=&quot;http://www.ideefixe.com/Kitap/tanim.asp?sid=OQJ5WUS70S8SAXHBTONX&quot;&gt;&lt;em&gt;Aldatma Sanatı&lt;/em&gt;&lt;/a&gt; adlı kitabını okudum. İlginç konulara değiniyordu kitap. Özellikle güvenlik konusunda en zayıf halka olarak insan faktörü üzerinde duruyordu kitap.

Bende Türkiye'deki açıklardan söz etmek istiyorum. Diyelim ki bir kişi hakkında bir araştırma yapmak istiyorsunuz. Türkiye de bir kişiyi araştırmak için dört bilgi yeterlidir. Adı, soyadı, doğum tarihi ve baba adı. Devlet dairelerinde birçok sorgu bu dört temel bilgi üzerinden yapılır. Türkiye de herkes üniversiteyi kazanamasa da üniversite sınavına girmiştir. Bu nedenle bu bilgilere erişmenin en kolay yolu OSYM'nin sitesiydi. Eğer bir kişinin adı ve soyadı bilgisi mevcutsa OSYM'nin sitesinden baba adı ve doğum tarihini bulabilirdiniz. OSYM bu güvenlik riskini farketmiş olacak ki, bu sayfaya kısıt getirmiş. Ama, diyelimki bu dört bilgiye bir şekilde eriştiniz, neler yapabilirsiniz? SSK'nın sitesinden bu dört bilgi ile Vatandaşlık numarasına erişebilirsiniz. Ve SSK numarasından gün dökümü alarak en son çalıştığı şirketin sicil numarasını öğrenebilirsiniz. Eğer SSK'yı telefonla arayıp bilgi edinmek için telefondaki insanın ağzından bilgi almaya çalışırsanız şirket ile ilgili bilgilere de erişebilirsiniz. Ayrıca Türk telekomdan elinizdeki bilgilerle arama yapabilirsiniz. Telefon numarasını bulduğunuzda  Türk telekomunun ttrehber olmadığı zamanlarda Hyper Terminal servisinden ise açık adresini bulabilirsiniz.
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;http://static.ideefixe.com/images/192/192239_1.jpg&quot; alt=&quot;aldatma sanatı&quot; /&gt;&lt;/p&gt;

Bu konuda bizlerin yapabileceği birkaç şey var. Bu dört temel bilgiyi mümkün gizlemek dışında, çevrenizdekilerin devlette kayıtlı olan isminizi tam olarak bilmemeleri. Bu konuda en şanslı olanlar üç isime sahip olan insanlar sanırım.

Belki bana paranoyak gözüyle bakıyorsunuz ama Intel başkanı Andrew Grove’un &lt;em&gt;yalnız paranoyaklar ayakta kalır&lt;/em&gt; sözünü hatırlatmak istiyorum. Bu bilgileri çevremde ki muhasebeci arkadaşlarımdan öğrendim. Sanırım paranoyak olmakta fayda var.
</content>
 </entry>
 
 <entry>
   <title>Bir SQL Hikayesi</title>
   <link href="http://hasanozgan.com/blog/2007/01/31/bir-sql-hikayesi"/>
   <updated>2007-01-31T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2007/01/31/bir-sql-hikayesi</id>
   <content type="html">Bazen MS-SQL kullandığımı unutup, MySQL'deki gibi sorgular yazıyorum. Geçen zaman diliminde geliştirdiğim bir projenin DB yapısında bazı refactoring işlemleri yaptıktan sonra; göç (migration) için gerekli olan SQL betiklerini(script) yazdım. Tabii alışkanlıktan aşağıdaki gibi bir betik hazırladım.
&lt;p style=&quot;padding-left: 50px&quot;&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;UPDATE &lt;/span&gt;
&lt;span style=&quot;color: #000000;&quot;&gt;Bid b, &lt;/span&gt;
&lt;span style=&quot;color: #0000ff;&quot;&gt;Product &lt;/span&gt;
&lt;span style=&quot;color: #000000;&quot;&gt;p &lt;/span&gt;
&lt;span style=&quot;color: #0000ff;&quot;&gt;SET &lt;/span&gt;
&lt;span style=&quot;color: #000000;&quot;&gt;p.CategoryId=b.CategoryId &lt;/span&gt;

&lt;span style=&quot;color: #0000ff;&quot;&gt;WHERE &lt;/span&gt;
&lt;span style=&quot;color: #000000;&quot;&gt;b.ProductId = p.Id;&lt;/span&gt;

Daha sonra, yazdığım göç betiklerini test ederken gördüm ki, MSSQL bu işlemi desteklemiyor. Böyle bir işlemi yapabilmek için T-SQL yazmak gerekiyor. Sonrada aşağıda gördüğünüz kodu yazdım.

Buraya da yazayım dedim; belki birinin T-SQL'de CURSOR örneğine ihtiyacı olur yada yukarıdaki gibi MySQL'de ki gibi MSSQL'de Multiple Update işlemi yapmak ister :-)
&lt;p style=&quot;padding-left:50px&quot;&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;DECLARE &lt;/span&gt;
cr_BidCategoryToProductCategory
&lt;span style=&quot;color: #0000ff;&quot;&gt;CURSOR FOR &lt;/span&gt;

&lt;span style=&quot;color: #0000ff;&quot;&gt;SELECT DISTINCT &lt;/span&gt;
p.Id, b.CategoryId
&lt;span style=&quot;color: #0000ff;&quot;&gt;FROM &lt;/span&gt;
Bid b,
&lt;span style=&quot;color: #0000ff;&quot;&gt;Product &lt;/span&gt;p

&lt;span style=&quot;color: #0000ff;&quot;&gt;WHERE &lt;/span&gt;
b.ProductId = p.Id;

&lt;span style=&quot;color: #0000ff;&quot;&gt;DECLARE &lt;/span&gt;@productId
&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;, @categoryId
&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;;

&lt;span style=&quot;color: #0000ff;&quot;&gt;OPEN &lt;/span&gt;
cr_BidCategoryToProductCategory;

&lt;span style=&quot;color: #0000ff;&quot;&gt;FETCH &lt;/span&gt;
cr_BidCategoryToProductCategory
&lt;span style=&quot;color: #0000ff;&quot;&gt;INTO &lt;/span&gt;@productId, @categoryId

&lt;span style=&quot;color: #0000ff;&quot;&gt;WHILE &lt;/span&gt;(@@FETCH_STATUS = 0)

&lt;span style=&quot;color: #0000ff;&quot;&gt;BEGIN
&lt;/span&gt;
&lt;span style=&quot;color: #0000ff;&quot;&gt;UPDATE Product SET &lt;/span&gt;
CategoryId = @categoryId
&lt;span style=&quot;color: #0000ff;&quot;&gt;WHERE &lt;/span&gt;Id = @productId;

&lt;p style=&quot;padding-left:50px&quot;&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;FETCH &lt;/span&gt;
cr_BidCategoryToProductCategory
&lt;span style=&quot;color: #0000ff;&quot;&gt;INTO &lt;/span&gt;
@productId, @categoryId

&lt;span style=&quot;color: #0000ff;&quot;&gt;END
CLOSE &lt;/span&gt;
cr_BidCategoryToProductCategory;

&lt;span style=&quot;color: #0000ff;&quot;&gt;DEALLOCATE &lt;/span&gt;
cr_BidCategoryToProductCategory;
</content>
 </entry>
 
 <entry>
   <title>Merhaba Dünya! (ver. 2.0)</title>
   <link href="http://hasanozgan.com/blog/2006/01/21/hello-world"/>
   <updated>2006-01-21T00:00:00+02:00</updated>
   <id>http://hasanozgan.com/blog/2006/01/21/hello-world</id>
   <content type="html">Yeniden Merhaba,

Bir &lt;a title=&quot;ozgan.net technologies&quot; href=&quot;http://www.ozgan.net&quot;&gt;önceki blog&lt;/a&gt;'uma kıyasla bu blog arasında bazı farklılıklar var. Önceki blogum Mono platformunda benim tarafımdan yazılmıştı. Artık bu konuda işin uzmanı(&lt;a href=&quot;http://www.wordpress.org&quot; target=&quot;_blank&quot;&gt;wordpress&lt;/a&gt;) tarafından profesyonel destek almaya karar verdim. Yaklaşık 5 yıldır web dünyasında birşeyler yapmaya çabalıyorum. Öncesinde masaüstü platformu için uygulama geliştiriyordum. Fakat web'in büyüsüne bi kapıldımı aklını başından alan bir tarafı var. &lt;strong&gt;Bu blog''un amacı; kendi web çalışmalarımı kayıt altına almaktır. &lt;/strong&gt;

Tamamen web odaklı bir blog olacağını söylemiştim. 5 yıllık web tecrübemde (2 yıl PHP, 1 yıl Java ve 2 yıl da C#) programlama dilleri ve araçlarıyla uygulamaları geliştirdim. Bu kadar yıllık deneyimime dayanarak aslında hepimizin bildiği birşeyi tekrar etmek istiyorum. Biz web programcıları aslında sadece metin dosyaları yaratan kodlar üretiyoruz. Aslında çok basit gibi görünen bir iş için çok karmaşık mimariler kuruyor ve kullanıyoruz. Web çatıları(framework) tasarlıyoruz ki aslında bu, kendi kendimize koyduğumuz kanunlara benziyor ve bu kanunlar çerçevesinde kendimizi çok kısıtlayabiliyoruz. 5 yıllık yaşamım boyunca anladım ki, web'de hangi platformu ve araçları kullandığınız kimsenin umurunda değildir. Bu konuda takıntılı olmak ise s.dik yarışından başka birşey değildir. Bazen körü körüne bu yarışa devam etmek rüzgara karşı işemek anlamına gelebilir. Bu yüzden blog sahibi &lt;strong&gt;araçta değilde sektörde uzmanlaş&lt;/strong&gt; düşüncesini sahiplenmiştir.

Blog'ta web dünyasındaki yenilikler ve disiplinler ile ilgili öğrendikçe veya yeni birşeyler keşfettikçe burada paylaşıyor olacağım. İşinize ne ölçüde yarar bilemiyorum, önceliğim veya amacım, okuyucu kitlesini memnun edecek yazılar yazmak değil ama kaliteli birşeyler yazmak. Yazılar bazen çok teknik olabilir. Programlama veya sistem yönetimi ile ilgili olabilir. Bu yazıları takip edebilmek için, LAMP (Linux, Apache, MySQL, PHP) araçları hakkında fikir sahibi olmak gerekir. Bazı zamanlarda da web'in gidişatı ile ilgili değerlendirmeler yapmaya çalışacağım. Sektör ve/veya ürün incelemelerine bakıp gelecek hakkında değerlendirme yapacağım.

Bir sonraki yazıya kadar hoşça kalın.
</content>
 </entry>
 
 
</feed>